{"version":3,"file":"Tip.2159a1b9.js","sources":["../../src/components/ui/Banner.tsx","../../src/components/ui/Checkbox.tsx","../../src/components/ui/ColourSwatches.tsx","../../src/components/ui/Tip.tsx"],"sourcesContent":["import styled from \"styled-components\";\n\nexport default styled.div`\n    padding: 8px;\n    font-size: 14px;\n    text-align: center;\n\n    color: var(--accent);\n    background: var(--primary-background);\n`;\n","import { Check } from \"@styled-icons/boxicons-regular\";\nimport styled, { css } from \"styled-components\";\n\nimport { Children } from \"../../types/Preact\";\n\nconst CheckboxBase = styled.label`\n    gap: 4px;\n    z-index: 1;\n    display: flex;\n    margin-top: 20px;\n    align-items: center;\n    border-radius: var(--border-radius);\n\n    cursor: pointer;\n    font-size: 18px;\n    user-select: none;\n\n    transition: 0.2s ease all;\n\n    input {\n        display: none;\n    }\n\n    &:hover {\n        .check {\n            background: var(--background);\n        }\n    }\n\n    &[disabled] {\n        opacity: 0.5;\n        cursor: not-allowed;\n\n        &:hover {\n            background: unset;\n        }\n    }\n`;\n\nconst CheckboxContent = styled.span`\n    display: flex;\n    flex-grow: 1;\n    font-size: 1rem;\n    font-weight: 600;\n    flex-direction: column;\n`;\n\nconst CheckboxDescription = styled.span`\n    font-size: 0.75rem;\n    font-weight: 400;\n    color: var(--secondary-foreground);\n`;\n\nconst Checkmark = styled.div<{ checked: boolean; contrast?: boolean }>`\n    margin: 4px;\n    width: 24px;\n    height: 24px;\n    display: grid;\n    flex-shrink: 0;\n    place-items: center;\n    transition: 0.2s ease all;\n    border-radius: var(--border-radius);\n    background: var(--secondary-background);\n\n    svg {\n        color: var(--secondary-background);\n    }\n\n    ${(props) =>\n        props.contrast &&\n        css`\n            background: var(--primary-background);\n\n            svg {\n                color: var(--primary-background);\n            }\n        `}\n\n    ${(props) =>\n        props.checked &&\n        css`\n            background: var(--accent) !important;\n        `}\n`;\n\nexport interface CheckboxProps {\n    checked: boolean;\n    disabled?: boolean;\n    contrast?: boolean;\n    className?: string;\n    children: Children;\n    description?: Children;\n    onChange: (state: boolean) => void;\n}\n\nexport default function Checkbox(props: CheckboxProps) {\n    return (\n        <CheckboxBase disabled={props.disabled} className={props.className}>\n            <CheckboxContent>\n                <span>{props.children}</span>\n                {props.description && (\n                    <CheckboxDescription>\n                        {props.description}\n                    </CheckboxDescription>\n                )}\n            </CheckboxContent>\n            <input\n                type=\"checkbox\"\n                checked={props.checked}\n                onChange={() =>\n                    !props.disabled && props.onChange(!props.checked)\n                }\n            />\n            <Checkmark checked={props.checked} contrast={props.contrast} className=\"check\">\n                <Check size={20} />\n            </Checkmark>\n        </CheckboxBase>\n    );\n}\n","import { Check } from \"@styled-icons/boxicons-regular\";\nimport { Palette } from \"@styled-icons/boxicons-solid\";\nimport styled, { css } from \"styled-components\";\n\nimport { RefObject } from \"preact\";\nimport { useRef } from \"preact/hooks\";\n\ninterface Props {\n    value: string;\n    onChange: (value: string) => void;\n}\n\nconst presets = [\n    [\n        \"#7B68EE\",\n        \"#3498DB\",\n        \"#1ABC9C\",\n        \"#F1C40F\",\n        \"#FF7F50\",\n        \"#FD6671\",\n        \"#E91E63\",\n        \"#D468EE\",\n    ],\n    [\n        \"#594CAD\",\n        \"#206694\",\n        \"#11806A\",\n        \"#C27C0E\",\n        \"#CD5B45\",\n        \"#FF424F\",\n        \"#AD1457\",\n        \"#954AA8\",\n    ],\n];\n\nconst SwatchesBase = styled.div`\n    /*gap: 8px;*/\n    display: flex;\n\n    input {\n        width: 0;\n        height: 0;\n        top: 72px;\n        opacity: 0;\n        padding: 0;\n        border: 0;\n        position: relative;\n        pointer-events: none;\n    }\n\n    .overlay {\n        position: relative;\n        width: 0;\n\n        div {\n            width: 8px;\n            height: 68px;\n            background: linear-gradient(\n                to right,\n                var(--primary-background),\n                transparent\n            );\n        }\n    }\n`;\n\nconst Swatch = styled.div<{ type: \"small\" | \"large\"; colour: string }>`\n    flex-shrink: 0;\n    cursor: pointer;\n    border-radius: var(--border-radius);\n    background-color: ${(props) => props.colour};\n\n    display: grid;\n    place-items: center;\n\n    &:hover {\n        border: 3px solid var(--foreground);\n        transition: border ease-in-out 0.07s;\n    }\n\n    svg {\n        color: white;\n    }\n\n    ${(props) =>\n        props.type === \"small\"\n            ? css`\n                  width: 30px;\n                  height: 30px;\n\n                  svg {\n                      /*stroke-width: 2;*/\n                  }\n              `\n            : css`\n                  width: 68px;\n                  height: 68px;\n              `}\n`;\n\nconst Rows = styled.div`\n    gap: 8px;\n    display: flex;\n    flex-direction: column;\n    overflow: auto;\n    padding-bottom: 4px;\n\n    > div {\n        gap: 8px;\n        display: flex;\n        flex-direction: row;\n        padding-inline-start: 8px;\n    }\n`;\n\nexport default function ColourSwatches({ value, onChange }: Props) {\n    const ref = useRef<HTMLInputElement>() as RefObject<HTMLInputElement>;\n\n    return (\n        <SwatchesBase>\n            <input\n                type=\"color\"\n                value={value}\n                ref={ref}\n                onChange={(ev) => onChange(ev.currentTarget.value)}\n            />\n            <Swatch\n                colour={value}\n                type=\"large\"\n                onClick={() => ref.current?.click()}>\n                <Palette size={32} />\n            </Swatch>\n\n            <div class=\"overlay\">\n                <div />\n            </div>\n\n            <Rows>\n                {presets.map((row, i) => (\n                    <div key={i}>\n                        {row.map((swatch, i) => (\n                            <Swatch\n                                colour={swatch}\n                                type=\"small\"\n                                key={i}\n                                onClick={() => onChange(swatch)}>\n                                {swatch === value && <Check size={22} />}\n                            </Swatch>\n                        ))}\n                    </div>\n                ))}\n            </Rows>\n        </SwatchesBase>\n    );\n}\n","import { InfoCircle } from \"@styled-icons/boxicons-regular\";\nimport styled, { css } from \"styled-components\";\n\nimport { Children } from \"../../types/Preact\";\n\ninterface Props {\n    warning?: boolean;\n    error?: boolean;\n}\n\nexport const Separator = styled.div<Props>`\n    height: 1px;\n    width: calc(100% - 10px);\n    background: var(--secondary-header);\n    margin: 18px auto;\n`;\n\nexport const TipBase = styled.div<Props>`\n    display: flex;\n    padding: 12px;\n    overflow: hidden;\n    align-items: center;\n\n    font-size: 14px;\n    background: var(--primary-header);\n    border-radius: var(--border-radius);\n    border: 2px solid var(--secondary-header);\n\n    a {\n        cursor: pointer;\n        &:hover {\n            text-decoration: underline;\n        }\n    }\n\n    svg {\n        flex-shrink: 0;\n        margin-inline-end: 10px;\n    }\n\n    ${(props) =>\n        props.warning &&\n        css`\n            color: var(--warning);\n            border: 2px solid var(--warning);\n            background: var(--secondary-header);\n        `}\n\n    ${(props) =>\n        props.error &&\n        css`\n            color: var(--error);\n            border: 2px solid var(--error);\n            background: var(--secondary-header);\n        `}\n`;\n\nexport default function Tip(\n    props: Props & { children: Children; hideSeparator?: boolean },\n) {\n    const { children, hideSeparator, ...tipProps } = props;\n    return (\n        <>\n            {!hideSeparator && <Separator />}\n            <TipBase {...tipProps}>\n                <InfoCircle size={20} />\n                <span>{children}</span>\n            </TipBase>\n        </>\n    );\n}\n"],"names":["styled","div","CheckboxBase","label","CheckboxContent","span","CheckboxDescription","Checkmark","props","contrast","css","checked","disabled","className","children","description","type","onChange","Check","size","presets","SwatchesBase","Swatch","colour","Rows","value","ref","useRef","ev","currentTarget","onClick","current","click","Palette","class","map","row","i","key","swatch","i2","Separator","TipBase","warning","error","_a","hideSeparator","tipProps","__spreadValues","InfoCircle"],"mappings":"uTAEA,MAAeA,EAAOC;;;;;;;ECGtB,MAAMC,EAAeF,EAAOG;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;EAkCtBC,EAAkBJ,EAAOK;;;;;;EAQzBC,EAAsBN,EAAOK;;;;EAM7BE,EAAYP,EAAOC;;;;;;;;;;;;;;;MAelBO,GACCA,EAAMC,UACNC;;;;;;;;MAQDF,GACCA,EAAMG,SACND;;;aAeyBF,YAExBN,EAAD,CAAcU,SAAUJ,EAAMI,SAAUC,UAAWL,EAAMK,aACpDT,EAAD,OACK,OAAD,KAAOI,EAAMM,UACZN,EAAMO,eACFT,EAAD,KACKE,EAAMO,gBAIlB,QAAD,CACIC,KAAK,WACLL,QAASH,EAAMG,QACfM,SAAU,KACLT,EAAMI,UAAYJ,EAAMS,UAAUT,EAAMG,aAGhDJ,EAAD,CAAWI,QAASH,EAAMG,QAASF,SAAUD,EAAMC,SAAUI,UAAU,WAClEK,EAAD,CAAOC,KAAM,OCtG7B,MAAMC,EAAU,CACZ,CACI,UACA,UACA,UACA,UACA,UACA,UACA,UACA,WAEJ,CACI,UACA,UACA,UACA,UACA,UACA,UACA,UACA,YAIFC,EAAerB,EAAOC;;;;;;;;;;;;;;;;;;;;;;;;;;;;;EA+BtBqB,EAAStB,EAAOC;;;;wBAIGO,GAAUA,EAAMe;;;;;;;;;;;;;;MAclCf,GACgB,UAAfA,EAAMQ,KACAN;;;;;;;gBAQAA;;;;EAMRc,EAAOxB,EAAOC;;;;;;;;;;;;;cAemBwB,MAAEA,WAAOR,UACtCS,EAAMC,aAGPN,EAAD,OACK,QAAD,CACIL,KAAK,QACLS,MAAAA,EACAC,IAAAA,EACAT,SAAWW,GAAOX,EAASW,EAAGC,cAAcJ,WAE/CH,EAAD,CACIC,OAAQE,EACRT,KAAK,QACLc,QAAS,kBAAM,WAAIC,kBAASC,YAC3BC,EAAD,CAASd,KAAM,QAGlB,MAAD,CAAKe,MAAM,aACN,MAAD,SAGHV,EAAD,KACKJ,EAAQe,KAAI,CAACC,EAAKC,MACd,MAAD,CAAKC,IAAKD,GACLD,EAAID,KAAI,CAACI,EAAQC,MACblB,EAAD,CACIC,OAAQgB,EACRvB,KAAK,QACLsB,IAAKE,EACLV,QAAS,IAAMb,EAASsB,IACvBA,IAAWd,KAAUP,EAAD,CAAOC,KAAM,mBCxIrDsB,EAAYzC,EAAOC;;;;;EAOnByC,EAAU1C,EAAOC;;;;;;;;;;;;;;;;;;;;;;;MAuBvBO,GACCA,EAAMmC,SACNjC;;;;;;MAMDF,GACCA,EAAMoC,OACNlC;;;;;aAQJF,SAEiDqC,KAAzC/B,yBAAUgC,GAA+BD,EAAbE,gKAAaF,EAAb,CAA5B,WAAU,mCAGRC,KAAkBL,EAAD,QAClBC,qHAADM,IAAaD,KACRE,EAAD,CAAY9B,KAAM,OACjB,OAAD,KAAOL"}