var e=Object.defineProperty,t=Object.getOwnPropertySymbols,s=Object.prototype.hasOwnProperty,r=Object.prototype.propertyIsEnumerable,i=(t,s,r)=>s in t?e(t,s,{enumerable:!0,configurable:!0,writable:!0,value:r}):t[s]=r,a=(e,a)=>{for(var n in a||(a={}))s.call(a,n)&&i(e,n,a[n]);if(t)for(var n of t(a))r.call(a,n)&&i(e,n,a[n]);return e};import{B as n,aa as o,e as c}from"./vendor.182b0579.js";var d=1e3,p=60*d,l=60*p,h=24*l,m=7*h,u=365.25*h,f=function(e,t){t=t||{};var s=typeof e;if("string"===s&&e.length>0)return function(e){if((e=String(e)).length>100)return;var t=/^(-?(?:\d+)?\.?\d+) *(milliseconds?|msecs?|ms|seconds?|secs?|s|minutes?|mins?|m|hours?|hrs?|h|days?|d|weeks?|w|years?|yrs?|y)?$/i.exec(e);if(!t)return;var s=parseFloat(t[1]);switch((t[2]||"ms").toLowerCase()){case"years":case"year":case"yrs":case"yr":case"y":return s*u;case"weeks":case"week":case"w":return s*m;case"days":case"day":case"d":return s*h;case"hours":case"hour":case"hrs":case"hr":case"h":return s*l;case"minutes":case"minute":case"mins":case"min":case"m":return s*p;case"seconds":case"second":case"secs":case"sec":case"s":return s*d;case"milliseconds":case"millisecond":case"msecs":case"msec":case"ms":return s;default:return}}(e);if("number"===s&&isFinite(e))return t.long?function(e){var t=Math.abs(e);if(t>=h)return g(e,t,h,"day");if(t>=l)return g(e,t,l,"hour");if(t>=p)return g(e,t,p,"minute");if(t>=d)return g(e,t,d,"second");return e+" ms"}(e):function(e){var t=Math.abs(e);if(t>=h)return Math.round(e/h)+"d";if(t>=l)return Math.round(e/l)+"h";if(t>=p)return Math.round(e/p)+"m";if(t>=d)return Math.round(e/d)+"s";return e+"ms"}(e);throw new Error("val is not a non-empty string or a valid number. val="+JSON.stringify(e))};function g(e,t,s,r){var i=t>=1.5*s;return Math.round(e/s)+" "+r+(i?"s":"")}var _=function(e){function t(e){let r,i,a,n=null;function o(...e){if(!o.enabled)return;const s=o,i=Number(new Date),a=i-(r||i);s.diff=a,s.prev=r,s.curr=i,r=i,e[0]=t.coerce(e[0]),"string"!=typeof e[0]&&e.unshift("%O");let n=0;e[0]=e[0].replace(/%([a-zA-Z%])/g,((r,i)=>{if("%%"===r)return"%";n++;const a=t.formatters[i];if("function"==typeof a){const t=e[n];r=a.call(s,t),e.splice(n,1),n--}return r})),t.formatArgs.call(s,e);(s.log||t.log).apply(s,e)}return o.namespace=e,o.useColors=t.useColors(),o.color=t.selectColor(e),o.extend=s,o.destroy=t.destroy,Object.defineProperty(o,"enabled",{enumerable:!0,configurable:!1,get:()=>null!==n?n:(i!==t.namespaces&&(i=t.namespaces,a=t.enabled(e)),a),set:e=>{n=e}}),"function"==typeof t.init&&t.init(o),o}function s(e,s){const r=t(this.namespace+(void 0===s?":":s)+e);return r.log=this.log,r}function r(e){return e.toString().substring(2,e.toString().length-2).replace(/\.\*\?$/,"*")}return t.debug=t,t.default=t,t.coerce=function(e){if(e instanceof Error)return e.stack||e.message;return e},t.disable=function(){const e=[...t.names.map(r),...t.skips.map(r).map((e=>"-"+e))].join(",");return t.enable(""),e},t.enable=function(e){let s;t.save(e),t.namespaces=e,t.names=[],t.skips=[];const r=("string"==typeof e?e:"").split(/[\s,]+/),i=r.length;for(s=0;s<i;s++)r[s]&&("-"===(e=r[s].replace(/\*/g,".*?"))[0]?t.skips.push(new RegExp("^"+e.substr(1)+"$")):t.names.push(new RegExp("^"+e+"$")))},t.enabled=function(e){if("*"===e[e.length-1])return!0;let s,r;for(s=0,r=t.skips.length;s<r;s++)if(t.skips[s].test(e))return!1;for(s=0,r=t.names.length;s<r;s++)if(t.names[s].test(e))return!0;return!1},t.humanize=f,t.destroy=function(){console.warn("Instance method `debug.destroy()` is deprecated and no longer does anything. It will be removed in the next major version of `debug`.")},Object.keys(e).forEach((s=>{t[s]=e[s]})),t.names=[],t.skips=[],t.formatters={},t.selectColor=function(e){let s=0;for(let t=0;t<e.length;t++)s=(s<<5)-s+e.charCodeAt(t),s|=0;return t.colors[Math.abs(s)%t.colors.length]},t.enable(t.load()),t},w=n((function(e,t){t.formatArgs=function(t){if(t[0]=(this.useColors?"%c":"")+this.namespace+(this.useColors?" %c":" ")+t[0]+(this.useColors?"%c ":" ")+"+"+e.exports.humanize(this.diff),!this.useColors)return;const s="color: "+this.color;t.splice(1,0,s,"color: inherit");let r=0,i=0;t[0].replace(/%[a-zA-Z%]/g,(e=>{"%%"!==e&&(r++,"%c"===e&&(i=r))})),t.splice(i,0,s)},t.save=function(e){try{e?t.storage.setItem("debug",e):t.storage.removeItem("debug")}catch(s){}},t.load=function(){let e;try{e=t.storage.getItem("debug")}catch(s){}!e&&"undefined"!=typeof process&&"env"in process&&(e={}.DEBUG);return e},t.useColors=function(){if("undefined"!=typeof window&&window.process&&("renderer"===window.process.type||window.process.__nwjs))return!0;if("undefined"!=typeof navigator&&navigator.userAgent&&navigator.userAgent.toLowerCase().match(/(edge|trident)\/(\d+)/))return!1;return"undefined"!=typeof document&&document.documentElement&&document.documentElement.style&&document.documentElement.style.WebkitAppearance||"undefined"!=typeof window&&window.console&&(window.console.firebug||window.console.exception&&window.console.table)||"undefined"!=typeof navigator&&navigator.userAgent&&navigator.userAgent.toLowerCase().match(/firefox\/(\d+)/)&&parseInt(RegExp.$1,10)>=31||"undefined"!=typeof navigator&&navigator.userAgent&&navigator.userAgent.toLowerCase().match(/applewebkit\/(\d+)/)},t.storage=function(){try{return localStorage}catch(e){}}(),t.destroy=(()=>{let e=!1;return()=>{e||(e=!0,console.warn("Instance method `debug.destroy()` is deprecated and no longer does anything. It will be removed in the next major version of `debug`."))}})(),t.colors=["#0000CC","#0000FF","#0033CC","#0033FF","#0066CC","#0066FF","#0099CC","#0099FF","#00CC00","#00CC33","#00CC66","#00CC99","#00CCCC","#00CCFF","#3300CC","#3300FF","#3333CC","#3333FF","#3366CC","#3366FF","#3399CC","#3399FF","#33CC00","#33CC33","#33CC66","#33CC99","#33CCCC","#33CCFF","#6600CC","#6600FF","#6633CC","#6633FF","#66CC00","#66CC33","#9900CC","#9900FF","#9933CC","#9933FF","#99CC00","#99CC33","#CC0000","#CC0033","#CC0066","#CC0099","#CC00CC","#CC00FF","#CC3300","#CC3333","#CC3366","#CC3399","#CC33CC","#CC33FF","#CC6600","#CC6633","#CC9900","#CC9933","#CCCC00","#CCCC33","#FF0000","#FF0033","#FF0066","#FF0099","#FF00CC","#FF00FF","#FF3300","#FF3333","#FF3366","#FF3399","#FF33CC","#FF33FF","#FF6600","#FF6633","#FF9900","#FF9933","#FFCC00","#FFCC33"],t.log=console.debug||console.log||(()=>{}),e.exports=_(t);const{formatters:s}=e.exports;s.j=function(e){try{return JSON.stringify(e)}catch(t){return"[UnexpectedJSONParseError]: "+t.message}}}));const b={"Amazon Silk":"amazon_silk","Android Browser":"android",Bada:"bada",BlackBerry:"blackberry",Chrome:"chrome",Chromium:"chromium",Electron:"electron",Epiphany:"epiphany",Firefox:"firefox",Focus:"focus",Generic:"generic","Google Search":"google_search",Googlebot:"googlebot","Internet Explorer":"ie","K-Meleon":"k_meleon",Maxthon:"maxthon","Microsoft Edge":"edge","MZ Browser":"mz","NAVER Whale Browser":"naver",Opera:"opera","Opera Coast":"opera_coast",PhantomJS:"phantomjs",Puffin:"puffin",QupZilla:"qupzilla",QQ:"qq",QQLite:"qqlite",Safari:"safari",Sailfish:"sailfish","Samsung Internet for Android":"samsung_internet",SeaMonkey:"seamonkey",Sleipnir:"sleipnir",Swing:"swing",Tizen:"tizen","UC Browser":"uc",Vivaldi:"vivaldi","WebOS Browser":"webos",WeChat:"wechat","Yandex Browser":"yandex",Roku:"roku"},y={amazon_silk:"Amazon Silk",android:"Android Browser",bada:"Bada",blackberry:"BlackBerry",chrome:"Chrome",chromium:"Chromium",electron:"Electron",epiphany:"Epiphany",firefox:"Firefox",focus:"Focus",generic:"Generic",googlebot:"Googlebot",google_search:"Google Search",ie:"Internet Explorer",k_meleon:"K-Meleon",maxthon:"Maxthon",edge:"Microsoft Edge",mz:"MZ Browser",naver:"NAVER Whale Browser",opera:"Opera",opera_coast:"Opera Coast",phantomjs:"PhantomJS",puffin:"Puffin",qupzilla:"QupZilla",qq:"QQ Browser",qqlite:"QQ Browser Lite",safari:"Safari",sailfish:"Sailfish",samsung_internet:"Samsung Internet for Android",seamonkey:"SeaMonkey",sleipnir:"Sleipnir",swing:"Swing",tizen:"Tizen",uc:"UC Browser",vivaldi:"Vivaldi",webos:"WebOS Browser",wechat:"WeChat",yandex:"Yandex Browser"},v={tablet:"tablet",mobile:"mobile",desktop:"desktop",tv:"tv"},S={WindowsPhone:"Windows Phone",Windows:"Windows",MacOS:"macOS",iOS:"iOS",Android:"Android",WebOS:"WebOS",BlackBerry:"BlackBerry",Bada:"Bada",Tizen:"Tizen",Linux:"Linux",ChromeOS:"Chrome OS",PlayStation4:"PlayStation 4",Roku:"Roku"},R={EdgeHTML:"EdgeHTML",Blink:"Blink",Trident:"Trident",Presto:"Presto",Gecko:"Gecko",WebKit:"WebKit"};class T{static getFirstMatch(e,t){const s=t.match(e);return s&&s.length>0&&s[1]||""}static getSecondMatch(e,t){const s=t.match(e);return s&&s.length>1&&s[2]||""}static matchAndReturnConst(e,t,s){if(e.test(t))return s}static getWindowsVersionName(e){switch(e){case"NT":return"NT";case"XP":return"XP";case"NT 5.0":return"2000";case"NT 5.1":return"XP";case"NT 5.2":return"2003";case"NT 6.0":return"Vista";case"NT 6.1":return"7";case"NT 6.2":return"8";case"NT 6.3":return"8.1";case"NT 10.0":return"10";default:return}}static getMacOSVersionName(e){const t=e.split(".").splice(0,2).map((e=>parseInt(e,10)||0));if(t.push(0),10===t[0])switch(t[1]){case 5:return"Leopard";case 6:return"Snow Leopard";case 7:return"Lion";case 8:return"Mountain Lion";case 9:return"Mavericks";case 10:return"Yosemite";case 11:return"El Capitan";case 12:return"Sierra";case 13:return"High Sierra";case 14:return"Mojave";case 15:return"Catalina";default:return}}static getAndroidVersionName(e){const t=e.split(".").splice(0,2).map((e=>parseInt(e,10)||0));if(t.push(0),!(1===t[0]&&t[1]<5))return 1===t[0]&&t[1]<6?"Cupcake":1===t[0]&&t[1]>=6?"Donut":2===t[0]&&t[1]<2?"Eclair":2===t[0]&&2===t[1]?"Froyo":2===t[0]&&t[1]>2?"Gingerbread":3===t[0]?"Honeycomb":4===t[0]&&t[1]<1?"Ice Cream Sandwich":4===t[0]&&t[1]<4?"Jelly Bean":4===t[0]&&t[1]>=4?"KitKat":5===t[0]?"Lollipop":6===t[0]?"Marshmallow":7===t[0]?"Nougat":8===t[0]?"Oreo":9===t[0]?"Pie":void 0}static getVersionPrecision(e){return e.split(".").length}static compareVersions(e,t,s=!1){const r=T.getVersionPrecision(e),i=T.getVersionPrecision(t);let a=Math.max(r,i),n=0;const o=T.map([e,t],(e=>{const t=a-T.getVersionPrecision(e),s=e+new Array(t+1).join(".0");return T.map(s.split("."),(e=>new Array(20-e.length).join("0")+e)).reverse()}));for(s&&(n=a-Math.min(r,i)),a-=1;a>=n;){if(o[0][a]>o[1][a])return 1;if(o[0][a]===o[1][a]){if(a===n)return 0;a-=1}else if(o[0][a]<o[1][a])return-1}}static map(e,t){const s=[];let r;if(Array.prototype.map)return Array.prototype.map.call(e,t);for(r=0;r<e.length;r+=1)s.push(t(e[r]));return s}static find(e,t){let s,r;if(Array.prototype.find)return Array.prototype.find.call(e,t);for(s=0,r=e.length;s<r;s+=1){const r=e[s];if(t(r,s))return r}}static assign(e,...t){const s=e;let r,i;if(Object.assign)return Object.assign(e,...t);for(r=0,i=t.length;r<i;r+=1){const e=t[r];if("object"==typeof e&&null!==e){Object.keys(e).forEach((t=>{s[t]=e[t]}))}}return e}static getBrowserAlias(e){return b[e]}static getBrowserTypeByAlias(e){return y[e]||""}}const C=/version\/(\d+(\.?_?\d+)+)/i,P=[{test:[/googlebot/i],describe(e){const t={name:"Googlebot"},s=T.getFirstMatch(/googlebot\/(\d+(\.\d+))/i,e)||T.getFirstMatch(C,e);return s&&(t.version=s),t}},{test:[/opera/i],describe(e){const t={name:"Opera"},s=T.getFirstMatch(C,e)||T.getFirstMatch(/(?:opera)[\s/](\d+(\.?_?\d+)+)/i,e);return s&&(t.version=s),t}},{test:[/opr\/|opios/i],describe(e){const t={name:"Opera"},s=T.getFirstMatch(/(?:opr|opios)[\s/](\S+)/i,e)||T.getFirstMatch(C,e);return s&&(t.version=s),t}},{test:[/SamsungBrowser/i],describe(e){const t={name:"Samsung Internet for Android"},s=T.getFirstMatch(C,e)||T.getFirstMatch(/(?:SamsungBrowser)[\s/](\d+(\.?_?\d+)+)/i,e);return s&&(t.version=s),t}},{test:[/Whale/i],describe(e){const t={name:"NAVER Whale Browser"},s=T.getFirstMatch(C,e)||T.getFirstMatch(/(?:whale)[\s/](\d+(?:\.\d+)+)/i,e);return s&&(t.version=s),t}},{test:[/MZBrowser/i],describe(e){const t={name:"MZ Browser"},s=T.getFirstMatch(/(?:MZBrowser)[\s/](\d+(?:\.\d+)+)/i,e)||T.getFirstMatch(C,e);return s&&(t.version=s),t}},{test:[/focus/i],describe(e){const t={name:"Focus"},s=T.getFirstMatch(/(?:focus)[\s/](\d+(?:\.\d+)+)/i,e)||T.getFirstMatch(C,e);return s&&(t.version=s),t}},{test:[/swing/i],describe(e){const t={name:"Swing"},s=T.getFirstMatch(/(?:swing)[\s/](\d+(?:\.\d+)+)/i,e)||T.getFirstMatch(C,e);return s&&(t.version=s),t}},{test:[/coast/i],describe(e){const t={name:"Opera Coast"},s=T.getFirstMatch(C,e)||T.getFirstMatch(/(?:coast)[\s/](\d+(\.?_?\d+)+)/i,e);return s&&(t.version=s),t}},{test:[/opt\/\d+(?:.?_?\d+)+/i],describe(e){const t={name:"Opera Touch"},s=T.getFirstMatch(/(?:opt)[\s/](\d+(\.?_?\d+)+)/i,e)||T.getFirstMatch(C,e);return s&&(t.version=s),t}},{test:[/yabrowser/i],describe(e){const t={name:"Yandex Browser"},s=T.getFirstMatch(/(?:yabrowser)[\s/](\d+(\.?_?\d+)+)/i,e)||T.getFirstMatch(C,e);return s&&(t.version=s),t}},{test:[/ucbrowser/i],describe(e){const t={name:"UC Browser"},s=T.getFirstMatch(C,e)||T.getFirstMatch(/(?:ucbrowser)[\s/](\d+(\.?_?\d+)+)/i,e);return s&&(t.version=s),t}},{test:[/Maxthon|mxios/i],describe(e){const t={name:"Maxthon"},s=T.getFirstMatch(C,e)||T.getFirstMatch(/(?:Maxthon|mxios)[\s/](\d+(\.?_?\d+)+)/i,e);return s&&(t.version=s),t}},{test:[/epiphany/i],describe(e){const t={name:"Epiphany"},s=T.getFirstMatch(C,e)||T.getFirstMatch(/(?:epiphany)[\s/](\d+(\.?_?\d+)+)/i,e);return s&&(t.version=s),t}},{test:[/puffin/i],describe(e){const t={name:"Puffin"},s=T.getFirstMatch(C,e)||T.getFirstMatch(/(?:puffin)[\s/](\d+(\.?_?\d+)+)/i,e);return s&&(t.version=s),t}},{test:[/sleipnir/i],describe(e){const t={name:"Sleipnir"},s=T.getFirstMatch(C,e)||T.getFirstMatch(/(?:sleipnir)[\s/](\d+(\.?_?\d+)+)/i,e);return s&&(t.version=s),t}},{test:[/k-meleon/i],describe(e){const t={name:"K-Meleon"},s=T.getFirstMatch(C,e)||T.getFirstMatch(/(?:k-meleon)[\s/](\d+(\.?_?\d+)+)/i,e);return s&&(t.version=s),t}},{test:[/micromessenger/i],describe(e){const t={name:"WeChat"},s=T.getFirstMatch(/(?:micromessenger)[\s/](\d+(\.?_?\d+)+)/i,e)||T.getFirstMatch(C,e);return s&&(t.version=s),t}},{test:[/qqbrowser/i],describe(e){const t={name:/qqbrowserlite/i.test(e)?"QQ Browser Lite":"QQ Browser"},s=T.getFirstMatch(/(?:qqbrowserlite|qqbrowser)[/](\d+(\.?_?\d+)+)/i,e)||T.getFirstMatch(C,e);return s&&(t.version=s),t}},{test:[/msie|trident/i],describe(e){const t={name:"Internet Explorer"},s=T.getFirstMatch(/(?:msie |rv:)(\d+(\.?_?\d+)+)/i,e);return s&&(t.version=s),t}},{test:[/\sedg\//i],describe(e){const t={name:"Microsoft Edge"},s=T.getFirstMatch(/\sedg\/(\d+(\.?_?\d+)+)/i,e);return s&&(t.version=s),t}},{test:[/edg([ea]|ios)/i],describe(e){const t={name:"Microsoft Edge"},s=T.getSecondMatch(/edg([ea]|ios)\/(\d+(\.?_?\d+)+)/i,e);return s&&(t.version=s),t}},{test:[/vivaldi/i],describe(e){const t={name:"Vivaldi"},s=T.getFirstMatch(/vivaldi\/(\d+(\.?_?\d+)+)/i,e);return s&&(t.version=s),t}},{test:[/seamonkey/i],describe(e){const t={name:"SeaMonkey"},s=T.getFirstMatch(/seamonkey\/(\d+(\.?_?\d+)+)/i,e);return s&&(t.version=s),t}},{test:[/sailfish/i],describe(e){const t={name:"Sailfish"},s=T.getFirstMatch(/sailfish\s?browser\/(\d+(\.\d+)?)/i,e);return s&&(t.version=s),t}},{test:[/silk/i],describe(e){const t={name:"Amazon Silk"},s=T.getFirstMatch(/silk\/(\d+(\.?_?\d+)+)/i,e);return s&&(t.version=s),t}},{test:[/phantom/i],describe(e){const t={name:"PhantomJS"},s=T.getFirstMatch(/phantomjs\/(\d+(\.?_?\d+)+)/i,e);return s&&(t.version=s),t}},{test:[/slimerjs/i],describe(e){const t={name:"SlimerJS"},s=T.getFirstMatch(/slimerjs\/(\d+(\.?_?\d+)+)/i,e);return s&&(t.version=s),t}},{test:[/blackberry|\bbb\d+/i,/rim\stablet/i],describe(e){const t={name:"BlackBerry"},s=T.getFirstMatch(C,e)||T.getFirstMatch(/blackberry[\d]+\/(\d+(\.?_?\d+)+)/i,e);return s&&(t.version=s),t}},{test:[/(web|hpw)[o0]s/i],describe(e){const t={name:"WebOS Browser"},s=T.getFirstMatch(C,e)||T.getFirstMatch(/w(?:eb)?[o0]sbrowser\/(\d+(\.?_?\d+)+)/i,e);return s&&(t.version=s),t}},{test:[/bada/i],describe(e){const t={name:"Bada"},s=T.getFirstMatch(/dolfin\/(\d+(\.?_?\d+)+)/i,e);return s&&(t.version=s),t}},{test:[/tizen/i],describe(e){const t={name:"Tizen"},s=T.getFirstMatch(/(?:tizen\s?)?browser\/(\d+(\.?_?\d+)+)/i,e)||T.getFirstMatch(C,e);return s&&(t.version=s),t}},{test:[/qupzilla/i],describe(e){const t={name:"QupZilla"},s=T.getFirstMatch(/(?:qupzilla)[\s/](\d+(\.?_?\d+)+)/i,e)||T.getFirstMatch(C,e);return s&&(t.version=s),t}},{test:[/firefox|iceweasel|fxios/i],describe(e){const t={name:"Firefox"},s=T.getFirstMatch(/(?:firefox|iceweasel|fxios)[\s/](\d+(\.?_?\d+)+)/i,e);return s&&(t.version=s),t}},{test:[/electron/i],describe(e){const t={name:"Electron"},s=T.getFirstMatch(/(?:electron)\/(\d+(\.?_?\d+)+)/i,e);return s&&(t.version=s),t}},{test:[/MiuiBrowser/i],describe(e){const t={name:"Miui"},s=T.getFirstMatch(/(?:MiuiBrowser)[\s/](\d+(\.?_?\d+)+)/i,e);return s&&(t.version=s),t}},{test:[/chromium/i],describe(e){const t={name:"Chromium"},s=T.getFirstMatch(/(?:chromium)[\s/](\d+(\.?_?\d+)+)/i,e)||T.getFirstMatch(C,e);return s&&(t.version=s),t}},{test:[/chrome|crios|crmo/i],describe(e){const t={name:"Chrome"},s=T.getFirstMatch(/(?:chrome|crios|crmo)\/(\d+(\.?_?\d+)+)/i,e);return s&&(t.version=s),t}},{test:[/GSA/i],describe(e){const t={name:"Google Search"},s=T.getFirstMatch(/(?:GSA)\/(\d+(\.?_?\d+)+)/i,e);return s&&(t.version=s),t}},{test(e){const t=!e.test(/like android/i),s=e.test(/android/i);return t&&s},describe(e){const t={name:"Android Browser"},s=T.getFirstMatch(C,e);return s&&(t.version=s),t}},{test:[/playstation 4/i],describe(e){const t={name:"PlayStation 4"},s=T.getFirstMatch(C,e);return s&&(t.version=s),t}},{test:[/safari|applewebkit/i],describe(e){const t={name:"Safari"},s=T.getFirstMatch(C,e);return s&&(t.version=s),t}},{test:[/.*/i],describe(e){const t=-1!==e.search("\\(")?/^(.*)\/(.*)[ \t]\((.*)/:/^(.*)\/(.*) /;return{name:T.getFirstMatch(t,e),version:T.getSecondMatch(t,e)}}}];var k=[{test:[/Roku\/DVP/],describe(e){const t=T.getFirstMatch(/Roku\/DVP-(\d+\.\d+)/i,e);return{name:S.Roku,version:t}}},{test:[/windows phone/i],describe(e){const t=T.getFirstMatch(/windows phone (?:os)?\s?(\d+(\.\d+)*)/i,e);return{name:S.WindowsPhone,version:t}}},{test:[/windows /i],describe(e){const t=T.getFirstMatch(/Windows ((NT|XP)( \d\d?.\d)?)/i,e),s=T.getWindowsVersionName(t);return{name:S.Windows,version:t,versionName:s}}},{test:[/Macintosh(.*?) FxiOS(.*?)\//],describe(e){const t={name:S.iOS},s=T.getSecondMatch(/(Version\/)(\d[\d.]+)/,e);return s&&(t.version=s),t}},{test:[/macintosh/i],describe(e){const t=T.getFirstMatch(/mac os x (\d+(\.?_?\d+)+)/i,e).replace(/[_\s]/g,"."),s=T.getMacOSVersionName(t),r={name:S.MacOS,version:t};return s&&(r.versionName=s),r}},{test:[/(ipod|iphone|ipad)/i],describe(e){const t=T.getFirstMatch(/os (\d+([_\s]\d+)*) like mac os x/i,e).replace(/[_\s]/g,".");return{name:S.iOS,version:t}}},{test(e){const t=!e.test(/like android/i),s=e.test(/android/i);return t&&s},describe(e){const t=T.getFirstMatch(/android[\s/-](\d+(\.\d+)*)/i,e),s=T.getAndroidVersionName(t),r={name:S.Android,version:t};return s&&(r.versionName=s),r}},{test:[/(web|hpw)[o0]s/i],describe(e){const t=T.getFirstMatch(/(?:web|hpw)[o0]s\/(\d+(\.\d+)*)/i,e),s={name:S.WebOS};return t&&t.length&&(s.version=t),s}},{test:[/blackberry|\bbb\d+/i,/rim\stablet/i],describe(e){const t=T.getFirstMatch(/rim\stablet\sos\s(\d+(\.\d+)*)/i,e)||T.getFirstMatch(/blackberry\d+\/(\d+([_\s]\d+)*)/i,e)||T.getFirstMatch(/\bbb(\d+)/i,e);return{name:S.BlackBerry,version:t}}},{test:[/bada/i],describe(e){const t=T.getFirstMatch(/bada\/(\d+(\.\d+)*)/i,e);return{name:S.Bada,version:t}}},{test:[/tizen/i],describe(e){const t=T.getFirstMatch(/tizen[/\s](\d+(\.\d+)*)/i,e);return{name:S.Tizen,version:t}}},{test:[/linux/i],describe:()=>({name:S.Linux})},{test:[/CrOS/],describe:()=>({name:S.ChromeOS})},{test:[/PlayStation 4/],describe(e){const t=T.getFirstMatch(/PlayStation 4[/\s](\d+(\.\d+)*)/i,e);return{name:S.PlayStation4,version:t}}}],D=[{test:[/googlebot/i],describe:()=>({type:"bot",vendor:"Google"})},{test:[/huawei/i],describe(e){const t=T.getFirstMatch(/(can-l01)/i,e)&&"Nova",s={type:v.mobile,vendor:"Huawei"};return t&&(s.model=t),s}},{test:[/nexus\s*(?:7|8|9|10).*/i],describe:()=>({type:v.tablet,vendor:"Nexus"})},{test:[/ipad/i],describe:()=>({type:v.tablet,vendor:"Apple",model:"iPad"})},{test:[/Macintosh(.*?) FxiOS(.*?)\//],describe:()=>({type:v.tablet,vendor:"Apple",model:"iPad"})},{test:[/kftt build/i],describe:()=>({type:v.tablet,vendor:"Amazon",model:"Kindle Fire HD 7"})},{test:[/silk/i],describe:()=>({type:v.tablet,vendor:"Amazon"})},{test:[/tablet(?! pc)/i],describe:()=>({type:v.tablet})},{test(e){const t=e.test(/ipod|iphone/i),s=e.test(/like (ipod|iphone)/i);return t&&!s},describe(e){const t=T.getFirstMatch(/(ipod|iphone)/i,e);return{type:v.mobile,vendor:"Apple",model:t}}},{test:[/nexus\s*[0-6].*/i,/galaxy nexus/i],describe:()=>({type:v.mobile,vendor:"Nexus"})},{test:[/[^-]mobi/i],describe:()=>({type:v.mobile})},{test:e=>"blackberry"===e.getBrowserName(!0),describe:()=>({type:v.mobile,vendor:"BlackBerry"})},{test:e=>"bada"===e.getBrowserName(!0),describe:()=>({type:v.mobile})},{test:e=>"windows phone"===e.getBrowserName(),describe:()=>({type:v.mobile,vendor:"Microsoft"})},{test(e){const t=Number(String(e.getOSVersion()).split(".")[0]);return"android"===e.getOSName(!0)&&t>=3},describe:()=>({type:v.tablet})},{test:e=>"android"===e.getOSName(!0),describe:()=>({type:v.mobile})},{test:e=>"macos"===e.getOSName(!0),describe:()=>({type:v.desktop,vendor:"Apple"})},{test:e=>"windows"===e.getOSName(!0),describe:()=>({type:v.desktop})},{test:e=>"linux"===e.getOSName(!0),describe:()=>({type:v.desktop})},{test:e=>"playstation 4"===e.getOSName(!0),describe:()=>({type:v.tv})},{test:e=>"roku"===e.getOSName(!0),describe:()=>({type:v.tv})}],x=[{test:e=>"microsoft edge"===e.getBrowserName(!0),describe(e){if(/\sedg\//i.test(e))return{name:R.Blink};const t=T.getFirstMatch(/edge\/(\d+(\.?_?\d+)+)/i,e);return{name:R.EdgeHTML,version:t}}},{test:[/trident/i],describe(e){const t={name:R.Trident},s=T.getFirstMatch(/trident\/(\d+(\.?_?\d+)+)/i,e);return s&&(t.version=s),t}},{test:e=>e.test(/presto/i),describe(e){const t={name:R.Presto},s=T.getFirstMatch(/presto\/(\d+(\.?_?\d+)+)/i,e);return s&&(t.version=s),t}},{test(e){const t=e.test(/gecko/i),s=e.test(/like gecko/i);return t&&!s},describe(e){const t={name:R.Gecko},s=T.getFirstMatch(/gecko\/(\d+(\.?_?\d+)+)/i,e);return s&&(t.version=s),t}},{test:[/(apple)?webkit\/537\.36/i],describe:()=>({name:R.Blink})},{test:[/(apple)?webkit/i],describe(e){const t={name:R.WebKit},s=T.getFirstMatch(/webkit\/(\d+(\.?_?\d+)+)/i,e);return s&&(t.version=s),t}}];class I{constructor(e,t=!1){if(null==e||""===e)throw new Error("UserAgent parameter can't be empty");this._ua=e,this.parsedResult={},!0!==t&&this.parse()}getUA(){return this._ua}test(e){return e.test(this._ua)}parseBrowser(){this.parsedResult.browser={};const e=T.find(P,(e=>{if("function"==typeof e.test)return e.test(this);if(e.test instanceof Array)return e.test.some((e=>this.test(e)));throw new Error("Browser's test function is not valid")}));return e&&(this.parsedResult.browser=e.describe(this.getUA())),this.parsedResult.browser}getBrowser(){return this.parsedResult.browser?this.parsedResult.browser:this.parseBrowser()}getBrowserName(e){return e?String(this.getBrowser().name).toLowerCase()||"":this.getBrowser().name||""}getBrowserVersion(){return this.getBrowser().version}getOS(){return this.parsedResult.os?this.parsedResult.os:this.parseOS()}parseOS(){this.parsedResult.os={};const e=T.find(k,(e=>{if("function"==typeof e.test)return e.test(this);if(e.test instanceof Array)return e.test.some((e=>this.test(e)));throw new Error("Browser's test function is not valid")}));return e&&(this.parsedResult.os=e.describe(this.getUA())),this.parsedResult.os}getOSName(e){const{name:t}=this.getOS();return e?String(t).toLowerCase()||"":t||""}getOSVersion(){return this.getOS().version}getPlatform(){return this.parsedResult.platform?this.parsedResult.platform:this.parsePlatform()}getPlatformType(e=!1){const{type:t}=this.getPlatform();return e?String(t).toLowerCase()||"":t||""}parsePlatform(){this.parsedResult.platform={};const e=T.find(D,(e=>{if("function"==typeof e.test)return e.test(this);if(e.test instanceof Array)return e.test.some((e=>this.test(e)));throw new Error("Browser's test function is not valid")}));return e&&(this.parsedResult.platform=e.describe(this.getUA())),this.parsedResult.platform}getEngine(){return this.parsedResult.engine?this.parsedResult.engine:this.parseEngine()}getEngineName(e){return e?String(this.getEngine().name).toLowerCase()||"":this.getEngine().name||""}parseEngine(){this.parsedResult.engine={};const e=T.find(x,(e=>{if("function"==typeof e.test)return e.test(this);if(e.test instanceof Array)return e.test.some((e=>this.test(e)));throw new Error("Browser's test function is not valid")}));return e&&(this.parsedResult.engine=e.describe(this.getUA())),this.parsedResult.engine}parse(){return this.parseBrowser(),this.parseOS(),this.parsePlatform(),this.parseEngine(),this}getResult(){return T.assign({},this.parsedResult)}satisfies(e){const t={};let s=0;const r={};let i=0;if(Object.keys(e).forEach((a=>{const n=e[a];"string"==typeof n?(r[a]=n,i+=1):"object"==typeof n&&(t[a]=n,s+=1)})),s>0){const e=Object.keys(t),s=T.find(e,(e=>this.isOS(e)));if(s){const e=this.satisfies(t[s]);if(void 0!==e)return e}const r=T.find(e,(e=>this.isPlatform(e)));if(r){const e=this.satisfies(t[r]);if(void 0!==e)return e}}if(i>0){const e=Object.keys(r),t=T.find(e,(e=>this.isBrowser(e,!0)));if(void 0!==t)return this.compareVersion(r[t])}}isBrowser(e,t=!1){const s=this.getBrowserName().toLowerCase();let r=e.toLowerCase();const i=T.getBrowserTypeByAlias(r);return t&&i&&(r=i.toLowerCase()),r===s}compareVersion(e){let t=[0],s=e,r=!1;const i=this.getBrowserVersion();if("string"==typeof i)return">"===e[0]||"<"===e[0]?(s=e.substr(1),"="===e[1]?(r=!0,s=e.substr(2)):t=[],">"===e[0]?t.push(1):t.push(-1)):"="===e[0]?s=e.substr(1):"~"===e[0]&&(r=!0,s=e.substr(1)),t.indexOf(T.compareVersions(i,s,r))>-1}isOS(e){return this.getOSName(!0)===String(e).toLowerCase()}isPlatform(e){return this.getPlatformType(!0)===String(e).toLowerCase()}isEngine(e){return this.getEngineName(!0)===String(e).toLowerCase()}is(e,t=!1){return this.isBrowser(e,t)||this.isOS(e)||this.isPlatform(e)}some(e=[]){return e.some((e=>this.is(e)))}}
/*!
 * Bowser - a browser detector
 * https://github.com/lancedikson/bowser
 * MIT License | (c) Dustin Diaz 2012-2015
 * MIT License | (c) Denis Demchenko 2015-2019
 */const E="mediasoup-client";class M{constructor(e){e?(this._debug=w(`${E}:${e}`),this._warn=w(`${E}:WARN:${e}`),this._error=w(`${E}:ERROR:${e}`)):(this._debug=w(E),this._warn=w(`${E}:WARN`),this._error=w(`${E}:ERROR`)),this._debug.log=console.info.bind(console),this._warn.log=console.warn.bind(console),this._error.log=console.error.bind(console)}get debug(){return this._debug}get warn(){return this._warn}get error(){return this._error}}var O,L="object"==typeof Reflect?Reflect:null,j=L&&"function"==typeof L.apply?L.apply:function(e,t,s){return Function.prototype.apply.call(e,t,s)};O=L&&"function"==typeof L.ownKeys?L.ownKeys:Object.getOwnPropertySymbols?function(e){return Object.getOwnPropertyNames(e).concat(Object.getOwnPropertySymbols(e))}:function(e){return Object.getOwnPropertyNames(e)};var F=Number.isNaN||function(e){return e!=e};function A(){A.init.call(this)}var B=A,N=function(e,t){return new Promise((function(s,r){function i(s){e.removeListener(t,a),r(s)}function a(){"function"==typeof e.removeListener&&e.removeListener("error",i),s([].slice.call(arguments))}J(e,t,a,{once:!0}),"error"!==t&&function(e,t,s){"function"==typeof e.on&&J(e,"error",t,s)}(e,i,{once:!0})}))};A.EventEmitter=A,A.prototype._events=void 0,A.prototype._eventsCount=0,A.prototype._maxListeners=void 0;var z=10;function $(e){if("function"!=typeof e)throw new TypeError('The "listener" argument must be of type Function. Received type '+typeof e)}function V(e){return void 0===e._maxListeners?A.defaultMaxListeners:e._maxListeners}function G(e,t,s,r){var i,a,n,o;if($(s),void 0===(a=e._events)?(a=e._events=Object.create(null),e._eventsCount=0):(void 0!==a.newListener&&(e.emit("newListener",t,s.listener?s.listener:s),a=e._events),n=a[t]),void 0===n)n=a[t]=s,++e._eventsCount;else if("function"==typeof n?n=a[t]=r?[s,n]:[n,s]:r?n.unshift(s):n.push(s),(i=V(e))>0&&n.length>i&&!n.warned){n.warned=!0;var c=new Error("Possible EventEmitter memory leak detected. "+n.length+" "+String(t)+" listeners added. Use emitter.setMaxListeners() to increase limit");c.name="MaxListenersExceededWarning",c.emitter=e,c.type=t,c.count=n.length,o=c,console&&console.warn&&console.warn(o)}return e}function K(){if(!this.fired)return this.target.removeListener(this.type,this.wrapFn),this.fired=!0,0===arguments.length?this.listener.call(this.target):this.listener.apply(this.target,arguments)}function q(e,t,s){var r={fired:!1,wrapFn:void 0,target:e,type:t,listener:s},i=K.bind(r);return i.listener=s,r.wrapFn=i,i}function U(e,t,s){var r=e._events;if(void 0===r)return[];var i=r[t];return void 0===i?[]:"function"==typeof i?s?[i.listener||i]:[i]:s?function(e){for(var t=new Array(e.length),s=0;s<t.length;++s)t[s]=e[s].listener||e[s];return t}(i):Q(i,i.length)}function W(e){var t=this._events;if(void 0!==t){var s=t[e];if("function"==typeof s)return 1;if(void 0!==s)return s.length}return 0}function Q(e,t){for(var s=new Array(t),r=0;r<t;++r)s[r]=e[r];return s}function J(e,t,s,r){if("function"==typeof e.on)r.once?e.once(t,s):e.on(t,s);else{if("function"!=typeof e.addEventListener)throw new TypeError('The "emitter" argument must be of type EventEmitter. Received type '+typeof e);e.addEventListener(t,(function i(a){r.once&&e.removeEventListener(t,i),s(a)}))}}Object.defineProperty(A,"defaultMaxListeners",{enumerable:!0,get:function(){return z},set:function(e){if("number"!=typeof e||e<0||F(e))throw new RangeError('The value of "defaultMaxListeners" is out of range. It must be a non-negative number. Received '+e+".");z=e}}),A.init=function(){void 0!==this._events&&this._events!==Object.getPrototypeOf(this)._events||(this._events=Object.create(null),this._eventsCount=0),this._maxListeners=this._maxListeners||void 0},A.prototype.setMaxListeners=function(e){if("number"!=typeof e||e<0||F(e))throw new RangeError('The value of "n" is out of range. It must be a non-negative number. Received '+e+".");return this._maxListeners=e,this},A.prototype.getMaxListeners=function(){return V(this)},A.prototype.emit=function(e){for(var t=[],s=1;s<arguments.length;s++)t.push(arguments[s]);var r="error"===e,i=this._events;if(void 0!==i)r=r&&void 0===i.error;else if(!r)return!1;if(r){var a;if(t.length>0&&(a=t[0]),a instanceof Error)throw a;var n=new Error("Unhandled error."+(a?" ("+a.message+")":""));throw n.context=a,n}var o=i[e];if(void 0===o)return!1;if("function"==typeof o)j(o,this,t);else{var c=o.length,d=Q(o,c);for(s=0;s<c;++s)j(d[s],this,t)}return!0},A.prototype.addListener=function(e,t){return G(this,e,t,!1)},A.prototype.on=A.prototype.addListener,A.prototype.prependListener=function(e,t){return G(this,e,t,!0)},A.prototype.once=function(e,t){return $(t),this.on(e,q(this,e,t)),this},A.prototype.prependOnceListener=function(e,t){return $(t),this.prependListener(e,q(this,e,t)),this},A.prototype.removeListener=function(e,t){var s,r,i,a,n;if($(t),void 0===(r=this._events))return this;if(void 0===(s=r[e]))return this;if(s===t||s.listener===t)0==--this._eventsCount?this._events=Object.create(null):(delete r[e],r.removeListener&&this.emit("removeListener",e,s.listener||t));else if("function"!=typeof s){for(i=-1,a=s.length-1;a>=0;a--)if(s[a]===t||s[a].listener===t){n=s[a].listener,i=a;break}if(i<0)return this;0===i?s.shift():function(e,t){for(;t+1<e.length;t++)e[t]=e[t+1];e.pop()}(s,i),1===s.length&&(r[e]=s[0]),void 0!==r.removeListener&&this.emit("removeListener",e,n||t)}return this},A.prototype.off=A.prototype.removeListener,A.prototype.removeAllListeners=function(e){var t,s,r;if(void 0===(s=this._events))return this;if(void 0===s.removeListener)return 0===arguments.length?(this._events=Object.create(null),this._eventsCount=0):void 0!==s[e]&&(0==--this._eventsCount?this._events=Object.create(null):delete s[e]),this;if(0===arguments.length){var i,a=Object.keys(s);for(r=0;r<a.length;++r)"removeListener"!==(i=a[r])&&this.removeAllListeners(i);return this.removeAllListeners("removeListener"),this._events=Object.create(null),this._eventsCount=0,this}if("function"==typeof(t=s[e]))this.removeListener(e,t);else if(void 0!==t)for(r=t.length-1;r>=0;r--)this.removeListener(e,t[r]);return this},A.prototype.listeners=function(e){return U(this,e,!0)},A.prototype.rawListeners=function(e){return U(this,e,!1)},A.listenerCount=function(e,t){return"function"==typeof e.listenerCount?e.listenerCount(t):W.call(e,t)},A.prototype.listenerCount=W,A.prototype.eventNames=function(){return this._eventsCount>0?O(this._events):[]},B.once=N;const H=new M("EnhancedEventEmitter");class Z extends B.EventEmitter{constructor(){super(),this.setMaxListeners(1/0)}safeEmit(e,...t){const s=this.listenerCount(e);try{return this.emit(e,...t)}catch(r){return H.error("safeEmit() | event listener threw an error [event:%s]:%o",e,r),Boolean(s)}}async safeEmitAsPromise(e,...t){return new Promise(((s,r)=>{try{this.emit(e,...t,s,r)}catch(i){H.error("safeEmitAsPromise() | event listener threw an error [event:%s]:%o",e,i),r(i)}}))}}class X extends Error{constructor(e){super(e),this.name="UnsupportedError",Error.hasOwnProperty("captureStackTrace")?Error.captureStackTrace(this,X):this.stack=new Error(e).stack}}class Y extends Error{constructor(e){super(e),this.name="InvalidStateError",Error.hasOwnProperty("captureStackTrace")?Error.captureStackTrace(this,Y):this.stack=new Error(e).stack}}function ee(e,t){return void 0===e?t:JSON.parse(JSON.stringify(e))}function te(){return Math.round(1e7*Math.random())}var se=n((function(e,t){const s=w("h264-profile-level-id");s.log=console.info.bind(console);t.ProfileConstrainedBaseline=1,t.ProfileBaseline=2,t.ProfileMain=3,t.ProfileConstrainedHigh=4,t.ProfileHigh=5;const r=10;t.Level1_b=0,t.Level1=10,t.Level1_1=11,t.Level1_2=12,t.Level1_3=13,t.Level2=20,t.Level2_1=21,t.Level2_2=22,t.Level3=30,t.Level3_1=31,t.Level3_2=32,t.Level4=40,t.Level4_1=41,t.Level4_2=42,t.Level5=50,t.Level5_1=51,t.Level5_2=52;class i{constructor(e,t){this.profile=e,this.level=t}}t.ProfileLevelId=i;const a=new i(1,31);class n{constructor(e){this._mask=~d("x",e),this._maskedValue=d("1",e)}isMatch(e){return this._maskedValue===(e&this._mask)}}class o{constructor(e,t,s){this.profile_idc=e,this.profile_iop=t,this.profile=s}}const c=[new o(66,new n("x1xx0000"),1),new o(77,new n("1xxx0000"),1),new o(88,new n("11xx0000"),1),new o(66,new n("x0xx0000"),2),new o(88,new n("10xx0000"),2),new o(77,new n("0x0x0000"),3),new o(100,new n("00000000"),5),new o(100,new n("00001100"),4)];function d(e,t){return(t[0]===e)<<7|(t[1]===e)<<6|(t[2]===e)<<5|(t[3]===e)<<4|(t[4]===e)<<3|(t[5]===e)<<2|(t[6]===e)<<1|(t[7]===e)<<0}function p(e={}){const t=e["level-asymmetry-allowed"];return 1===t||"1"===t}t.parseProfileLevelId=function(e){if("string"!=typeof e||6!==e.length)return null;const t=parseInt(e,16);if(0===t)return null;const r=255&t,a=t>>8&255,n=t>>16&255;let o;switch(r){case 11:o=0!=(16&a)?0:11;break;case 10:case 12:case 13:case 20:case 21:case 22:case 30:case 31:case 32:case 40:case 41:case 42:case 50:case 51:case 52:o=r;break;default:return s("parseProfileLevelId() | unrecognized level_idc:%s",r),null}for(const s of c)if(n===s.profile_idc&&s.profile_iop.isMatch(a))return new i(s.profile,o);return s("parseProfileLevelId() | unrecognized profile_idc/profile_iop combination"),null},t.profileLevelIdToString=function(e){if(0==e.level)switch(e.profile){case 1:return"42f00b";case 2:return"42100b";case 3:return"4d100b";default:return s("profileLevelIdToString() | Level 1_b not is allowed for profile:%s",e.profile),null}let t;switch(e.profile){case 1:t="42e0";break;case 2:t="4200";break;case 3:t="4d00";break;case 4:t="640c";break;case 5:t="6400";break;default:return s("profileLevelIdToString() | unrecognized profile:%s",e.profile),null}let r=e.level.toString(16);return 1===r.length&&(r=`0${r}`),`${t}${r}`},t.parseSdpProfileLevelId=function(e={}){const s=e["profile-level-id"];return s?t.parseProfileLevelId(s):a},t.isSameProfile=function(e={},s={}){const r=t.parseSdpProfileLevelId(e),i=t.parseSdpProfileLevelId(s);return Boolean(r&&i&&r.profile===i.profile)},t.generateProfileLevelIdForAnswer=function(e={},a={}){if(!e["profile-level-id"]&&!a["profile-level-id"])return s("generateProfileLevelIdForAnswer() | no profile-level-id in local and remote params"),null;const n=t.parseSdpProfileLevelId(e),o=t.parseSdpProfileLevelId(a);if(!n)throw new TypeError("invalid local_profile_level_id");if(!o)throw new TypeError("invalid remote_profile_level_id");if(n.profile!==o.profile)throw new TypeError("H264 Profile mismatch");const c=p(e)&&p(a),d=n.level,l=o.level,h=function(e,t){return 0===e?t!==r&&0!==t:0===t?e!==r:e<t}(m=d,u=l)?m:u;var m,u;const f=c?d:h;return s("generateProfileLevelIdForAnswer() | result: [profile:%s, level:%s]",n.profile,f),t.profileLevelIdToString(new i(n.profile,f))}}));function re(e){if("object"!=typeof e)throw new TypeError("caps is not an object");if(e.codecs&&!Array.isArray(e.codecs))throw new TypeError("caps.codecs is not an array");e.codecs||(e.codecs=[]);for(const t of e.codecs)ie(t);if(e.headerExtensions&&!Array.isArray(e.headerExtensions))throw new TypeError("caps.headerExtensions is not an array");e.headerExtensions||(e.headerExtensions=[]);for(const t of e.headerExtensions)ne(t)}function ie(e){const t=new RegExp("^(audio|video)/(.+)","i");if("object"!=typeof e)throw new TypeError("codec is not an object");if(!e.mimeType||"string"!=typeof e.mimeType)throw new TypeError("missing codec.mimeType");const s=t.exec(e.mimeType);if(!s)throw new TypeError("invalid codec.mimeType");if(e.kind=s[1].toLowerCase(),e.preferredPayloadType&&"number"!=typeof e.preferredPayloadType)throw new TypeError("invalid codec.preferredPayloadType");if("number"!=typeof e.clockRate)throw new TypeError("missing codec.clockRate");"audio"===e.kind?"number"!=typeof e.channels&&(e.channels=1):delete e.channels,e.parameters&&"object"==typeof e.parameters||(e.parameters={});for(const r of Object.keys(e.parameters)){let t=e.parameters[r];if(void 0===t&&(e.parameters[r]="",t=""),"string"!=typeof t&&"number"!=typeof t)throw new TypeError(`invalid codec parameter [key:${r}s, value:${t}]`);if("apt"===r&&"number"!=typeof t)throw new TypeError("invalid codec apt parameter")}e.rtcpFeedback&&Array.isArray(e.rtcpFeedback)||(e.rtcpFeedback=[]);for(const r of e.rtcpFeedback)ae(r)}function ae(e){if("object"!=typeof e)throw new TypeError("fb is not an object");if(!e.type||"string"!=typeof e.type)throw new TypeError("missing fb.type");e.parameter&&"string"==typeof e.parameter||(e.parameter="")}function ne(e){if("object"!=typeof e)throw new TypeError("ext is not an object");if("audio"!==e.kind&&"video"!==e.kind)throw new TypeError("invalid ext.kind");if(!e.uri||"string"!=typeof e.uri)throw new TypeError("missing ext.uri");if("number"!=typeof e.preferredId)throw new TypeError("missing ext.preferredId");if(e.preferredEncrypt&&"boolean"!=typeof e.preferredEncrypt)throw new TypeError("invalid ext.preferredEncrypt");if(e.preferredEncrypt||(e.preferredEncrypt=!1),e.direction&&"string"!=typeof e.direction)throw new TypeError("invalid ext.direction");e.direction||(e.direction="sendrecv")}function oe(e){if("object"!=typeof e)throw new TypeError("params is not an object");if(e.mid&&"string"!=typeof e.mid)throw new TypeError("params.mid is not a string");if(!Array.isArray(e.codecs))throw new TypeError("missing params.codecs");for(const t of e.codecs)ce(t);if(e.headerExtensions&&!Array.isArray(e.headerExtensions))throw new TypeError("params.headerExtensions is not an array");e.headerExtensions||(e.headerExtensions=[]);for(const t of e.headerExtensions)de(t);if(e.encodings&&!Array.isArray(e.encodings))throw new TypeError("params.encodings is not an array");e.encodings||(e.encodings=[]);for(const t of e.encodings)pe(t);if(e.rtcp&&"object"!=typeof e.rtcp)throw new TypeError("params.rtcp is not an object");e.rtcp||(e.rtcp={}),function(e){if("object"!=typeof e)throw new TypeError("rtcp is not an object");if(e.cname&&"string"!=typeof e.cname)throw new TypeError("invalid rtcp.cname");e.reducedSize&&"boolean"==typeof e.reducedSize||(e.reducedSize=!0)}(e.rtcp)}function ce(e){const t=new RegExp("^(audio|video)/(.+)","i");if("object"!=typeof e)throw new TypeError("codec is not an object");if(!e.mimeType||"string"!=typeof e.mimeType)throw new TypeError("missing codec.mimeType");const s=t.exec(e.mimeType);if(!s)throw new TypeError("invalid codec.mimeType");if("number"!=typeof e.payloadType)throw new TypeError("missing codec.payloadType");if("number"!=typeof e.clockRate)throw new TypeError("missing codec.clockRate");"audio"===s[1].toLowerCase()?"number"!=typeof e.channels&&(e.channels=1):delete e.channels,e.parameters&&"object"==typeof e.parameters||(e.parameters={});for(const r of Object.keys(e.parameters)){let t=e.parameters[r];if(void 0===t&&(e.parameters[r]="",t=""),"string"!=typeof t&&"number"!=typeof t)throw new TypeError(`invalid codec parameter [key:${r}s, value:${t}]`);if("apt"===r&&"number"!=typeof t)throw new TypeError("invalid codec apt parameter")}e.rtcpFeedback&&Array.isArray(e.rtcpFeedback)||(e.rtcpFeedback=[]);for(const r of e.rtcpFeedback)ae(r)}function de(e){if("object"!=typeof e)throw new TypeError("ext is not an object");if(!e.uri||"string"!=typeof e.uri)throw new TypeError("missing ext.uri");if("number"!=typeof e.id)throw new TypeError("missing ext.id");if(e.encrypt&&"boolean"!=typeof e.encrypt)throw new TypeError("invalid ext.encrypt");e.encrypt||(e.encrypt=!1),e.parameters&&"object"==typeof e.parameters||(e.parameters={});for(const t of Object.keys(e.parameters)){let s=e.parameters[t];if(void 0===s&&(e.parameters[t]="",s=""),"string"!=typeof s&&"number"!=typeof s)throw new TypeError("invalid header extension parameter")}}function pe(e){if("object"!=typeof e)throw new TypeError("encoding is not an object");if(e.ssrc&&"number"!=typeof e.ssrc)throw new TypeError("invalid encoding.ssrc");if(e.rid&&"string"!=typeof e.rid)throw new TypeError("invalid encoding.rid");if(e.rtx&&"object"!=typeof e.rtx)throw new TypeError("invalid encoding.rtx");if(e.rtx&&"number"!=typeof e.rtx.ssrc)throw new TypeError("missing encoding.rtx.ssrc");if(e.dtx&&"boolean"==typeof e.dtx||(e.dtx=!1),e.scalabilityMode&&"string"!=typeof e.scalabilityMode)throw new TypeError("invalid encoding.scalabilityMode")}function le(e){if("object"!=typeof e)throw new TypeError("caps is not an object");if(!e.numStreams||"object"!=typeof e.numStreams)throw new TypeError("missing caps.numStreams");!function(e){if("object"!=typeof e)throw new TypeError("numStreams is not an object");if("number"!=typeof e.OS)throw new TypeError("missing numStreams.OS");if("number"!=typeof e.MIS)throw new TypeError("missing numStreams.MIS")}(e.numStreams)}function he(e){if("object"!=typeof e)throw new TypeError("params is not an object");if("number"!=typeof e.streamId)throw new TypeError("missing params.streamId");let t=!1;if("boolean"==typeof e.ordered?t=!0:e.ordered=!0,e.maxPacketLifeTime&&"number"!=typeof e.maxPacketLifeTime)throw new TypeError("invalid params.maxPacketLifeTime");if(e.maxRetransmits&&"number"!=typeof e.maxRetransmits)throw new TypeError("invalid params.maxRetransmits");if(e.maxPacketLifeTime&&e.maxRetransmits)throw new TypeError("cannot provide both maxPacketLifeTime and maxRetransmits");if(t&&e.ordered&&(e.maxPacketLifeTime||e.maxRetransmits))throw new TypeError("cannot be ordered with maxPacketLifeTime or maxRetransmits");if(t||!e.maxPacketLifeTime&&!e.maxRetransmits||(e.ordered=!1),e.label&&"string"!=typeof e.label)throw new TypeError("invalid params.label");if(e.protocol&&"string"!=typeof e.protocol)throw new TypeError("invalid params.protocol")}function me(e,t){const s={mid:void 0,codecs:[],headerExtensions:[],encodings:[],rtcp:{}};for(const r of t.codecs){if(r.kind!==e)continue;const t={mimeType:r.mimeType,payloadType:r.localPayloadType,clockRate:r.clockRate,channels:r.channels,parameters:r.localParameters,rtcpFeedback:r.rtcpFeedback};if(s.codecs.push(t),r.localRtxPayloadType){const e={mimeType:`${r.kind}/rtx`,payloadType:r.localRtxPayloadType,clockRate:r.clockRate,parameters:{apt:r.localPayloadType},rtcpFeedback:[]};s.codecs.push(e)}}for(const r of t.headerExtensions){if(r.kind&&r.kind!==e||"sendrecv"!==r.direction&&"sendonly"!==r.direction)continue;const t={uri:r.uri,id:r.sendId,encrypt:r.encrypt,parameters:{}};s.headerExtensions.push(t)}return s}function ue(e,t){const s={mid:void 0,codecs:[],headerExtensions:[],encodings:[],rtcp:{}};for(const r of t.codecs){if(r.kind!==e)continue;const t={mimeType:r.mimeType,payloadType:r.localPayloadType,clockRate:r.clockRate,channels:r.channels,parameters:r.remoteParameters,rtcpFeedback:r.rtcpFeedback};if(s.codecs.push(t),r.localRtxPayloadType){const e={mimeType:`${r.kind}/rtx`,payloadType:r.localRtxPayloadType,clockRate:r.clockRate,parameters:{apt:r.localPayloadType},rtcpFeedback:[]};s.codecs.push(e)}}for(const r of t.headerExtensions){if(r.kind&&r.kind!==e||"sendrecv"!==r.direction&&"sendonly"!==r.direction)continue;const t={uri:r.uri,id:r.sendId,encrypt:r.encrypt,parameters:{}};s.headerExtensions.push(t)}if(s.headerExtensions.some((e=>"http://www.ietf.org/id/draft-holmer-rmcat-transport-wide-cc-extensions-01"===e.uri)))for(const r of s.codecs)r.rtcpFeedback=(r.rtcpFeedback||[]).filter((e=>"goog-remb"!==e.type));else if(s.headerExtensions.some((e=>"http://www.webrtc.org/experiments/rtp-hdrext/abs-send-time"===e.uri)))for(const r of s.codecs)r.rtcpFeedback=(r.rtcpFeedback||[]).filter((e=>"transport-cc"!==e.type));else for(const r of s.codecs)r.rtcpFeedback=(r.rtcpFeedback||[]).filter((e=>"transport-cc"!==e.type&&"goog-remb"!==e.type));return s}function fe(e,t){const s=[];if(t){for(let r=0;r<e.length;++r)if(we(e[r],t)){s.push(e[r]),_e(e[r+1])&&s.push(e[r+1]);break}if(0===s.length)throw new TypeError("no matching codec found")}else s.push(e[0]),_e(e[1])&&s.push(e[1]);return s}function ge(e,t){return t.codecs.some((t=>t.kind===e))}function _e(e){return!!e&&/.+\/rtx$/i.test(e.mimeType)}function we(e,t,{strict:s=!1,modify:r=!1}={}){const i=e.mimeType.toLowerCase();if(i!==t.mimeType.toLowerCase())return!1;if(e.clockRate!==t.clockRate)return!1;if(e.channels!==t.channels)return!1;switch(i){case"video/h264":if((e.parameters["packetization-mode"]||0)!==(t.parameters["packetization-mode"]||0))return!1;if(s){if(!se.isSameProfile(e.parameters,t.parameters))return!1;let s;try{s=se.generateProfileLevelIdForAnswer(e.parameters,t.parameters)}catch(a){return!1}r&&(s?(e.parameters["profile-level-id"]=s,t.parameters["profile-level-id"]=s):(delete e.parameters["profile-level-id"],delete t.parameters["profile-level-id"]))}break;case"video/vp9":if(s){if((e.parameters["profile-id"]||0)!==(t.parameters["profile-id"]||0))return!1}}return!0}function be(e,t){return(!e.kind||!t.kind||e.kind===t.kind)&&e.uri===t.uri}function ye(e,t){const s=[];for(const r of e.rtcpFeedback||[]){const e=(t.rtcpFeedback||[]).find((e=>e.type===r.type&&(e.parameter===r.parameter||!e.parameter&&!r.parameter)));e&&s.push(e)}return s}var ve=o&&o.__awaiter||function(e,t,s,r){return new(s||(s=Promise))((function(i,a){function n(e){try{c(r.next(e))}catch(t){a(t)}}function o(e){try{c(r.throw(e))}catch(t){a(t)}}function c(e){var t;e.done?i(e.value):(t=e.value,t instanceof s?t:new s((function(e){e(t)}))).then(n,o)}c((r=r.apply(e,t||[])).next())}))};var Se=class{constructor({ClosedErrorClass:e=Error,StoppedErrorClass:t=Error}={ClosedErrorClass:Error,StoppedErrorClass:Error}){this.closed=!1,this.pendingTasks=[],this.ClosedErrorClass=Error,this.StoppedErrorClass=Error,this.ClosedErrorClass=e,this.StoppedErrorClass=t}get size(){return this.pendingTasks.length}close(){if(!this.closed){this.closed=!0;for(const e of this.pendingTasks)e.stopped=!0,e.reject(new this.ClosedErrorClass("AwaitQueue closed"));this.pendingTasks.length=0}}push(e,t){return ve(this,void 0,void 0,(function*(){if(this.closed)throw new this.ClosedErrorClass("AwaitQueue closed");if("function"!=typeof e)throw new TypeError("given task is not a function");if(!e.name&&t)try{Object.defineProperty(e,"name",{value:t})}catch(s){}return new Promise(((s,r)=>{const i={task:e,name:t,resolve:s,reject:r,stopped:!1,enqueuedAt:new Date,executedAt:void 0};this.pendingTasks.push(i),1===this.pendingTasks.length&&this.next()}))}))}stop(){if(!this.closed){for(const e of this.pendingTasks)e.stopped=!0,e.reject(new this.StoppedErrorClass("AwaitQueue stopped"));this.pendingTasks.length=0}}dump(){const e=new Date;return this.pendingTasks.map((t=>({task:t.task,name:t.name,enqueuedTime:t.executedAt?t.executedAt.getTime()-t.enqueuedAt.getTime():e.getTime()-t.enqueuedAt.getTime(),executingTime:t.executedAt?e.getTime()-t.executedAt.getTime():0})))}next(){return ve(this,void 0,void 0,(function*(){const e=this.pendingTasks[0];e&&(yield this.executeTask(e),this.pendingTasks.shift(),this.next())}))}executeTask(e){return ve(this,void 0,void 0,(function*(){if(!e.stopped){e.executedAt=new Date;try{const t=yield e.task();if(e.stopped)return;e.resolve(t)}catch(t){if(e.stopped)return;e.reject(t)}}}))}};const Re=new M("Producer");class Te extends Z{constructor({id:e,localId:t,rtpSender:s,track:r,rtpParameters:i,stopTracks:a,disableTrackOnPause:n,zeroRtpOnPause:o,appData:c}){super(),this._closed=!1,this._observer=new Z,Re.debug("constructor()"),this._id=e,this._localId=t,this._rtpSender=s,this._track=r,this._kind=r.kind,this._rtpParameters=i,this._paused=!!n&&!r.enabled,this._maxSpatialLayer=void 0,this._stopTracks=a,this._disableTrackOnPause=n,this._zeroRtpOnPause=o,this._appData=c,this._onTrackEnded=this._onTrackEnded.bind(this),this._handleTrack()}get id(){return this._id}get localId(){return this._localId}get closed(){return this._closed}get kind(){return this._kind}get rtpSender(){return this._rtpSender}get track(){return this._track}get rtpParameters(){return this._rtpParameters}get paused(){return this._paused}get maxSpatialLayer(){return this._maxSpatialLayer}get appData(){return this._appData}set appData(e){throw new Error("cannot override appData object")}get observer(){return this._observer}close(){this._closed||(Re.debug("close()"),this._closed=!0,this._destroyTrack(),this.emit("@close"),this._observer.safeEmit("close"))}transportClosed(){this._closed||(Re.debug("transportClosed()"),this._closed=!0,this._destroyTrack(),this.safeEmit("transportclose"),this._observer.safeEmit("close"))}async getStats(){if(this._closed)throw new Y("closed");return this.safeEmitAsPromise("@getstats")}pause(){Re.debug("pause()"),this._closed?Re.error("pause() | Producer closed"):(this._paused=!0,this._track&&this._disableTrackOnPause&&(this._track.enabled=!1),this._zeroRtpOnPause&&this.safeEmitAsPromise("@replacetrack",null).catch((()=>{})),this._observer.safeEmit("pause"))}resume(){Re.debug("resume()"),this._closed?Re.error("resume() | Producer closed"):(this._paused=!1,this._track&&this._disableTrackOnPause&&(this._track.enabled=!0),this._zeroRtpOnPause&&this.safeEmitAsPromise("@replacetrack",this._track).catch((()=>{})),this._observer.safeEmit("resume"))}async replaceTrack({track:e}){if(Re.debug("replaceTrack() [track:%o]",e),this._closed){if(e&&this._stopTracks)try{e.stop()}catch(t){}throw new Y("closed")}if(e&&"ended"===e.readyState)throw new Y("track ended");e!==this._track?(this._zeroRtpOnPause&&this._paused||await this.safeEmitAsPromise("@replacetrack",e),this._destroyTrack(),this._track=e,this._track&&this._disableTrackOnPause&&(this._paused?this._paused&&(this._track.enabled=!1):this._track.enabled=!0),this._handleTrack()):Re.debug("replaceTrack() | same track, ignored")}async setMaxSpatialLayer(e){if(this._closed)throw new Y("closed");if("video"!==this._kind)throw new X("not a video Producer");if("number"!=typeof e)throw new TypeError("invalid spatialLayer");e!==this._maxSpatialLayer&&(await this.safeEmitAsPromise("@setmaxspatiallayer",e),this._maxSpatialLayer=e)}async setRtpEncodingParameters(e){if(this._closed)throw new Y("closed");if("object"!=typeof e)throw new TypeError("invalid params");await this.safeEmitAsPromise("@setrtpencodingparameters",e)}_onTrackEnded(){Re.debug('track "ended" event'),this.safeEmit("trackended"),this._observer.safeEmit("trackended")}_handleTrack(){this._track&&this._track.addEventListener("ended",this._onTrackEnded)}_destroyTrack(){if(this._track)try{this._track.removeEventListener("ended",this._onTrackEnded),this._stopTracks&&this._track.stop()}catch(e){}}}const Ce=new M("Consumer");class Pe extends Z{constructor({id:e,localId:t,producerId:s,rtpReceiver:r,track:i,rtpParameters:a,appData:n}){super(),this._closed=!1,this._observer=new Z,Ce.debug("constructor()"),this._id=e,this._localId=t,this._producerId=s,this._rtpReceiver=r,this._track=i,this._rtpParameters=a,this._paused=!i.enabled,this._appData=n,this._onTrackEnded=this._onTrackEnded.bind(this),this._handleTrack()}get id(){return this._id}get localId(){return this._localId}get producerId(){return this._producerId}get closed(){return this._closed}get kind(){return this._track.kind}get rtpReceiver(){return this._rtpReceiver}get track(){return this._track}get rtpParameters(){return this._rtpParameters}get paused(){return this._paused}get appData(){return this._appData}set appData(e){throw new Error("cannot override appData object")}get observer(){return this._observer}close(){this._closed||(Ce.debug("close()"),this._closed=!0,this._destroyTrack(),this.emit("@close"),this._observer.safeEmit("close"))}transportClosed(){this._closed||(Ce.debug("transportClosed()"),this._closed=!0,this._destroyTrack(),this.safeEmit("transportclose"),this._observer.safeEmit("close"))}async getStats(){if(this._closed)throw new Y("closed");return this.safeEmitAsPromise("@getstats")}pause(){Ce.debug("pause()"),this._closed?Ce.error("pause() | Consumer closed"):(this._paused=!0,this._track.enabled=!1,this._observer.safeEmit("pause"))}resume(){Ce.debug("resume()"),this._closed?Ce.error("resume() | Consumer closed"):(this._paused=!1,this._track.enabled=!0,this._observer.safeEmit("resume"))}_onTrackEnded(){Ce.debug('track "ended" event'),this.safeEmit("trackended"),this._observer.safeEmit("trackended")}_handleTrack(){this._track.addEventListener("ended",this._onTrackEnded)}_destroyTrack(){try{this._track.removeEventListener("ended",this._onTrackEnded),this._track.stop()}catch(e){}}}const ke=new M("DataProducer");class De extends Z{constructor({id:e,dataChannel:t,sctpStreamParameters:s,appData:r}){super(),this._closed=!1,this._observer=new Z,ke.debug("constructor()"),this._id=e,this._dataChannel=t,this._sctpStreamParameters=s,this._appData=r,this._handleDataChannel()}get id(){return this._id}get closed(){return this._closed}get sctpStreamParameters(){return this._sctpStreamParameters}get readyState(){return this._dataChannel.readyState}get label(){return this._dataChannel.label}get protocol(){return this._dataChannel.protocol}get bufferedAmount(){return this._dataChannel.bufferedAmount}get bufferedAmountLowThreshold(){return this._dataChannel.bufferedAmountLowThreshold}set bufferedAmountLowThreshold(e){this._dataChannel.bufferedAmountLowThreshold=e}get appData(){return this._appData}set appData(e){throw new Error("cannot override appData object")}get observer(){return this._observer}close(){this._closed||(ke.debug("close()"),this._closed=!0,this._dataChannel.close(),this.emit("@close"),this._observer.safeEmit("close"))}transportClosed(){this._closed||(ke.debug("transportClosed()"),this._closed=!0,this._dataChannel.close(),this.safeEmit("transportclose"),this._observer.safeEmit("close"))}send(e){if(ke.debug("send()"),this._closed)throw new Y("closed");this._dataChannel.send(e)}_handleDataChannel(){this._dataChannel.addEventListener("open",(()=>{this._closed||(ke.debug('DataChannel "open" event'),this.safeEmit("open"))})),this._dataChannel.addEventListener("error",(e=>{if(this._closed)return;let{error:t}=e;t||(t=new Error("unknown DataChannel error")),"sctp-failure"===t.errorDetail?ke.error("DataChannel SCTP error [sctpCauseCode:%s]: %s",t.sctpCauseCode,t.message):ke.error('DataChannel "error" event: %o',t),this.safeEmit("error",t)})),this._dataChannel.addEventListener("close",(()=>{this._closed||(ke.warn('DataChannel "close" event'),this._closed=!0,this.emit("@close"),this.safeEmit("close"))})),this._dataChannel.addEventListener("message",(()=>{this._closed||ke.warn('DataChannel "message" event in a DataProducer, message discarded')})),this._dataChannel.addEventListener("bufferedamountlow",(()=>{this._closed||this.safeEmit("bufferedamountlow")}))}}const xe=new M("DataConsumer");class Ie extends Z{constructor({id:e,dataProducerId:t,dataChannel:s,sctpStreamParameters:r,appData:i}){super(),this._closed=!1,this._observer=new Z,xe.debug("constructor()"),this._id=e,this._dataProducerId=t,this._dataChannel=s,this._sctpStreamParameters=r,this._appData=i,this._handleDataChannel()}get id(){return this._id}get dataProducerId(){return this._dataProducerId}get closed(){return this._closed}get sctpStreamParameters(){return this._sctpStreamParameters}get readyState(){return this._dataChannel.readyState}get label(){return this._dataChannel.label}get protocol(){return this._dataChannel.protocol}get binaryType(){return this._dataChannel.binaryType}set binaryType(e){this._dataChannel.binaryType=e}get appData(){return this._appData}set appData(e){throw new Error("cannot override appData object")}get observer(){return this._observer}close(){this._closed||(xe.debug("close()"),this._closed=!0,this._dataChannel.close(),this.emit("@close"),this._observer.safeEmit("close"))}transportClosed(){this._closed||(xe.debug("transportClosed()"),this._closed=!0,this._dataChannel.close(),this.safeEmit("transportclose"),this._observer.safeEmit("close"))}_handleDataChannel(){this._dataChannel.addEventListener("open",(()=>{this._closed||(xe.debug('DataChannel "open" event'),this.safeEmit("open"))})),this._dataChannel.addEventListener("error",(e=>{if(this._closed)return;let{error:t}=e;t||(t=new Error("unknown DataChannel error")),"sctp-failure"===t.errorDetail?xe.error("DataChannel SCTP error [sctpCauseCode:%s]: %s",t.sctpCauseCode,t.message):xe.error('DataChannel "error" event: %o',t),this.safeEmit("error",t)})),this._dataChannel.addEventListener("close",(()=>{this._closed||(xe.warn('DataChannel "close" event'),this._closed=!0,this.emit("@close"),this.safeEmit("close"))})),this._dataChannel.addEventListener("message",(e=>{this._closed||this.safeEmit("message",e.data)}))}}const Ee=new M("Transport");class Me extends Z{constructor({direction:e,id:t,iceParameters:s,iceCandidates:r,dtlsParameters:i,sctpParameters:a,iceServers:n,iceTransportPolicy:o,additionalSettings:c,proprietaryConstraints:d,appData:p,handlerFactory:l,extendedRtpCapabilities:h,canProduceByKind:m}){super(),this._closed=!1,this._connectionState="new",this._producers=new Map,this._consumers=new Map,this._dataProducers=new Map,this._dataConsumers=new Map,this._probatorConsumerCreated=!1,this._awaitQueue=new Se({ClosedErrorClass:Y}),this._observer=new Z,Ee.debug("constructor() [id:%s, direction:%s]",t,e),this._id=t,this._direction=e,this._extendedRtpCapabilities=h,this._canProduceByKind=m,this._maxSctpMessageSize=a?a.maxMessageSize:null,delete(c=ee(c,{})).iceServers,delete c.iceTransportPolicy,delete c.bundlePolicy,delete c.rtcpMuxPolicy,delete c.sdpSemantics,this._handler=l(),this._handler.run({direction:e,iceParameters:s,iceCandidates:r,dtlsParameters:i,sctpParameters:a,iceServers:n,iceTransportPolicy:o,additionalSettings:c,proprietaryConstraints:d,extendedRtpCapabilities:h}),this._appData=p,this._handleHandler()}get id(){return this._id}get closed(){return this._closed}get direction(){return this._direction}get handler(){return this._handler}get connectionState(){return this._connectionState}get appData(){return this._appData}set appData(e){throw new Error("cannot override appData object")}get observer(){return this._observer}close(){if(!this._closed){Ee.debug("close()"),this._closed=!0,this._awaitQueue.close(),this._handler.close();for(const e of this._producers.values())e.transportClosed();this._producers.clear();for(const e of this._consumers.values())e.transportClosed();this._consumers.clear();for(const e of this._dataProducers.values())e.transportClosed();this._dataProducers.clear();for(const e of this._dataConsumers.values())e.transportClosed();this._dataConsumers.clear(),this._observer.safeEmit("close")}}async getStats(){if(this._closed)throw new Y("closed");return this._handler.getTransportStats()}async restartIce({iceParameters:e}){if(Ee.debug("restartIce()"),this._closed)throw new Y("closed");if(!e)throw new TypeError("missing iceParameters");return this._awaitQueue.push((async()=>this._handler.restartIce(e)),"transport.restartIce()")}async updateIceServers({iceServers:e}={}){if(Ee.debug("updateIceServers()"),this._closed)throw new Y("closed");if(!Array.isArray(e))throw new TypeError("missing iceServers");return this._awaitQueue.push((async()=>this._handler.updateIceServers(e)),"transport.updateIceServers()")}async produce({track:e,encodings:t,codecOptions:s,codec:r,stopTracks:i=!0,disableTrackOnPause:a=!0,zeroRtpOnPause:n=!1,appData:o={}}={}){if(Ee.debug("produce() [track:%o]",e),!e)throw new TypeError("missing track");if("send"!==this._direction)throw new X("not a sending Transport");if(!this._canProduceByKind[e.kind])throw new X(`cannot produce ${e.kind}`);if("ended"===e.readyState)throw new Y("track ended");if(0===this.listenerCount("connect")&&"new"===this._connectionState)throw new TypeError('no "connect" listener set into this transport');if(0===this.listenerCount("produce"))throw new TypeError('no "produce" listener set into this transport');if(o&&"object"!=typeof o)throw new TypeError("if given, appData must be an object");return this._awaitQueue.push((async()=>{let c;if(t&&!Array.isArray(t))throw TypeError("encodings must be an array");t&&0===t.length?c=void 0:t&&(c=t.map((e=>{const t={active:!0};return!1===e.active&&(t.active=!1),"boolean"==typeof e.dtx&&(t.dtx=e.dtx),"string"==typeof e.scalabilityMode&&(t.scalabilityMode=e.scalabilityMode),"number"==typeof e.scaleResolutionDownBy&&(t.scaleResolutionDownBy=e.scaleResolutionDownBy),"number"==typeof e.maxBitrate&&(t.maxBitrate=e.maxBitrate),"number"==typeof e.maxFramerate&&(t.maxFramerate=e.maxFramerate),"boolean"==typeof e.adaptivePtime&&(t.adaptivePtime=e.adaptivePtime),"string"==typeof e.priority&&(t.priority=e.priority),"string"==typeof e.networkPriority&&(t.networkPriority=e.networkPriority),t})));const{localId:d,rtpParameters:p,rtpSender:l}=await this._handler.send({track:e,encodings:c,codecOptions:s,codec:r});try{oe(p);const{id:t}=await this.safeEmitAsPromise("produce",{kind:e.kind,rtpParameters:p,appData:o}),s=new Te({id:t,localId:d,rtpSender:l,track:e,rtpParameters:p,stopTracks:i,disableTrackOnPause:a,zeroRtpOnPause:n,appData:o});return this._producers.set(s.id,s),this._handleProducer(s),this._observer.safeEmit("newproducer",s),s}catch(h){throw this._handler.stopSending(d).catch((()=>{})),h}}),"transport.produce()").catch((t=>{if(i)try{e.stop()}catch(s){}throw t}))}async consume({id:e,producerId:t,kind:s,rtpParameters:r,appData:i={}}){if(Ee.debug("consume()"),r=ee(r,void 0),this._closed)throw new Y("closed");if("recv"!==this._direction)throw new X("not a receiving Transport");if("string"!=typeof e)throw new TypeError("missing id");if("string"!=typeof t)throw new TypeError("missing producerId");if("audio"!==s&&"video"!==s)throw new TypeError(`invalid kind '${s}'`);if(0===this.listenerCount("connect")&&"new"===this._connectionState)throw new TypeError('no "connect" listener set into this transport');if(i&&"object"!=typeof i)throw new TypeError("if given, appData must be an object");return this._awaitQueue.push((async()=>{if(!function(e,t){if(oe(e),0===e.codecs.length)return!1;const s=e.codecs[0];return t.codecs.some((e=>e.remotePayloadType===s.payloadType))}(r,this._extendedRtpCapabilities))throw new X("cannot consume this Producer");const{localId:a,rtpReceiver:n,track:o}=await this._handler.receive({trackId:e,kind:s,rtpParameters:r}),c=new Pe({id:e,localId:a,producerId:t,rtpReceiver:n,track:o,rtpParameters:r,appData:i});if(this._consumers.set(c.id,c),this._handleConsumer(c),!this._probatorConsumerCreated&&"video"===s)try{const e=function(e){oe(e=ee(e,{}));const t={mid:"probator",codecs:[],headerExtensions:[],encodings:[{ssrc:1234}],rtcp:{cname:"probator"}};return t.codecs.push(e.codecs[0]),t.codecs[0].payloadType=127,t.headerExtensions=e.headerExtensions,t}(c.rtpParameters);await this._handler.receive({trackId:"probator",kind:"video",rtpParameters:e}),Ee.debug("consume() | Consumer for RTP probation created"),this._probatorConsumerCreated=!0}catch(d){Ee.error("consume() | failed to create Consumer for RTP probation:%o",d)}return this._observer.safeEmit("newconsumer",c),c}),"transport.consume()")}async produceData({ordered:e=!0,maxPacketLifeTime:t,maxRetransmits:s,label:r="",protocol:i="",appData:a={}}={}){if(Ee.debug("produceData()"),"send"!==this._direction)throw new X("not a sending Transport");if(!this._maxSctpMessageSize)throw new X("SCTP not enabled by remote Transport");if(0===this.listenerCount("connect")&&"new"===this._connectionState)throw new TypeError('no "connect" listener set into this transport');if(0===this.listenerCount("producedata"))throw new TypeError('no "producedata" listener set into this transport');if(a&&"object"!=typeof a)throw new TypeError("if given, appData must be an object");return(t||s)&&(e=!1),this._awaitQueue.push((async()=>{const{dataChannel:n,sctpStreamParameters:o}=await this._handler.sendDataChannel({ordered:e,maxPacketLifeTime:t,maxRetransmits:s,label:r,protocol:i});he(o);const{id:c}=await this.safeEmitAsPromise("producedata",{sctpStreamParameters:o,label:r,protocol:i,appData:a}),d=new De({id:c,dataChannel:n,sctpStreamParameters:o,appData:a});return this._dataProducers.set(d.id,d),this._handleDataProducer(d),this._observer.safeEmit("newdataproducer",d),d}),"transport.produceData()")}async consumeData({id:e,dataProducerId:t,sctpStreamParameters:s,label:r="",protocol:i="",appData:a={}}){if(Ee.debug("consumeData()"),s=ee(s,void 0),this._closed)throw new Y("closed");if("recv"!==this._direction)throw new X("not a receiving Transport");if(!this._maxSctpMessageSize)throw new X("SCTP not enabled by remote Transport");if("string"!=typeof e)throw new TypeError("missing id");if("string"!=typeof t)throw new TypeError("missing dataProducerId");if(0===this.listenerCount("connect")&&"new"===this._connectionState)throw new TypeError('no "connect" listener set into this transport');if(a&&"object"!=typeof a)throw new TypeError("if given, appData must be an object");return he(s),this._awaitQueue.push((async()=>{const{dataChannel:n}=await this._handler.receiveDataChannel({sctpStreamParameters:s,label:r,protocol:i}),o=new Ie({id:e,dataProducerId:t,dataChannel:n,sctpStreamParameters:s,appData:a});return this._dataConsumers.set(o.id,o),this._handleDataConsumer(o),this._observer.safeEmit("newdataconsumer",o),o}),"transport.consumeData()")}_handleHandler(){const e=this._handler;e.on("@connect",(({dtlsParameters:e},t,s)=>{this._closed?s(new Y("closed")):this.safeEmit("connect",{dtlsParameters:e},t,s)})),e.on("@connectionstatechange",(e=>{e!==this._connectionState&&(Ee.debug("connection state changed to %s",e),this._connectionState=e,this._closed||this.safeEmit("connectionstatechange",e))}))}_handleProducer(e){e.on("@close",(()=>{this._producers.delete(e.id),this._closed||this._awaitQueue.push((async()=>this._handler.stopSending(e.localId)),"producer @close event").catch((e=>Ee.warn("producer.close() failed:%o",e)))})),e.on("@replacetrack",((t,s,r)=>{this._awaitQueue.push((async()=>this._handler.replaceTrack(e.localId,t)),"producer @replacetrack event").then(s).catch(r)})),e.on("@setmaxspatiallayer",((t,s,r)=>{this._awaitQueue.push((async()=>this._handler.setMaxSpatialLayer(e.localId,t)),"producer @setmaxspatiallayer event").then(s).catch(r)})),e.on("@setrtpencodingparameters",((t,s,r)=>{this._awaitQueue.push((async()=>this._handler.setRtpEncodingParameters(e.localId,t)),"producer @setrtpencodingparameters event").then(s).catch(r)})),e.on("@getstats",((t,s)=>{if(this._closed)return s(new Y("closed"));this._handler.getSenderStats(e.localId).then(t).catch(s)}))}_handleConsumer(e){e.on("@close",(()=>{this._consumers.delete(e.id),this._closed||this._awaitQueue.push((async()=>this._handler.stopReceiving(e.localId)),"consumer @close event").catch((()=>{}))})),e.on("@getstats",((t,s)=>{if(this._closed)return s(new Y("closed"));this._handler.getReceiverStats(e.localId).then(t).catch(s)}))}_handleDataProducer(e){e.on("@close",(()=>{this._dataProducers.delete(e.id)}))}_handleDataConsumer(e){e.on("@close",(()=>{this._dataConsumers.delete(e.id)}))}}var Oe=n((function(e){var t=e.exports={v:[{name:"version",reg:/^(\d*)$/}],o:[{name:"origin",reg:/^(\S*) (\d*) (\d*) (\S*) IP(\d) (\S*)/,names:["username","sessionId","sessionVersion","netType","ipVer","address"],format:"%s %s %d %s IP%d %s"}],s:[{name:"name"}],i:[{name:"description"}],u:[{name:"uri"}],e:[{name:"email"}],p:[{name:"phone"}],z:[{name:"timezones"}],r:[{name:"repeats"}],t:[{name:"timing",reg:/^(\d*) (\d*)/,names:["start","stop"],format:"%d %d"}],c:[{name:"connection",reg:/^IN IP(\d) (\S*)/,names:["version","ip"],format:"IN IP%d %s"}],b:[{push:"bandwidth",reg:/^(TIAS|AS|CT|RR|RS):(\d*)/,names:["type","limit"],format:"%s:%s"}],m:[{reg:/^(\w*) (\d*) ([\w/]*)(?: (.*))?/,names:["type","port","protocol","payloads"],format:"%s %d %s %s"}],a:[{push:"rtp",reg:/^rtpmap:(\d*) ([\w\-.]*)(?:\s*\/(\d*)(?:\s*\/(\S*))?)?/,names:["payload","codec","rate","encoding"],format:function(e){return e.encoding?"rtpmap:%d %s/%s/%s":e.rate?"rtpmap:%d %s/%s":"rtpmap:%d %s"}},{push:"fmtp",reg:/^fmtp:(\d*) ([\S| ]*)/,names:["payload","config"],format:"fmtp:%d %s"},{name:"control",reg:/^control:(.*)/,format:"control:%s"},{name:"rtcp",reg:/^rtcp:(\d*)(?: (\S*) IP(\d) (\S*))?/,names:["port","netType","ipVer","address"],format:function(e){return null!=e.address?"rtcp:%d %s IP%d %s":"rtcp:%d"}},{push:"rtcpFbTrrInt",reg:/^rtcp-fb:(\*|\d*) trr-int (\d*)/,names:["payload","value"],format:"rtcp-fb:%s trr-int %d"},{push:"rtcpFb",reg:/^rtcp-fb:(\*|\d*) ([\w-_]*)(?: ([\w-_]*))?/,names:["payload","type","subtype"],format:function(e){return null!=e.subtype?"rtcp-fb:%s %s %s":"rtcp-fb:%s %s"}},{push:"ext",reg:/^extmap:(\d+)(?:\/(\w+))?(?: (urn:ietf:params:rtp-hdrext:encrypt))? (\S*)(?: (\S*))?/,names:["value","direction","encrypt-uri","uri","config"],format:function(e){return"extmap:%d"+(e.direction?"/%s":"%v")+(e["encrypt-uri"]?" %s":"%v")+" %s"+(e.config?" %s":"")}},{name:"extmapAllowMixed",reg:/^(extmap-allow-mixed)/},{push:"crypto",reg:/^crypto:(\d*) ([\w_]*) (\S*)(?: (\S*))?/,names:["id","suite","config","sessionConfig"],format:function(e){return null!=e.sessionConfig?"crypto:%d %s %s %s":"crypto:%d %s %s"}},{name:"setup",reg:/^setup:(\w*)/,format:"setup:%s"},{name:"connectionType",reg:/^connection:(new|existing)/,format:"connection:%s"},{name:"mid",reg:/^mid:([^\s]*)/,format:"mid:%s"},{name:"msid",reg:/^msid:(.*)/,format:"msid:%s"},{name:"ptime",reg:/^ptime:(\d*(?:\.\d*)*)/,format:"ptime:%d"},{name:"maxptime",reg:/^maxptime:(\d*(?:\.\d*)*)/,format:"maxptime:%d"},{name:"direction",reg:/^(sendrecv|recvonly|sendonly|inactive)/},{name:"icelite",reg:/^(ice-lite)/},{name:"iceUfrag",reg:/^ice-ufrag:(\S*)/,format:"ice-ufrag:%s"},{name:"icePwd",reg:/^ice-pwd:(\S*)/,format:"ice-pwd:%s"},{name:"fingerprint",reg:/^fingerprint:(\S*) (\S*)/,names:["type","hash"],format:"fingerprint:%s %s"},{push:"candidates",reg:/^candidate:(\S*) (\d*) (\S*) (\d*) (\S*) (\d*) typ (\S*)(?: raddr (\S*) rport (\d*))?(?: tcptype (\S*))?(?: generation (\d*))?(?: network-id (\d*))?(?: network-cost (\d*))?/,names:["foundation","component","transport","priority","ip","port","type","raddr","rport","tcptype","generation","network-id","network-cost"],format:function(e){var t="candidate:%s %d %s %d %s %d typ %s";return t+=null!=e.raddr?" raddr %s rport %d":"%v%v",t+=null!=e.tcptype?" tcptype %s":"%v",null!=e.generation&&(t+=" generation %d"),t+=null!=e["network-id"]?" network-id %d":"%v",t+=null!=e["network-cost"]?" network-cost %d":"%v"}},{name:"endOfCandidates",reg:/^(end-of-candidates)/},{name:"remoteCandidates",reg:/^remote-candidates:(.*)/,format:"remote-candidates:%s"},{name:"iceOptions",reg:/^ice-options:(\S*)/,format:"ice-options:%s"},{push:"ssrcs",reg:/^ssrc:(\d*) ([\w_-]*)(?::(.*))?/,names:["id","attribute","value"],format:function(e){var t="ssrc:%d";return null!=e.attribute&&(t+=" %s",null!=e.value&&(t+=":%s")),t}},{push:"ssrcGroups",reg:/^ssrc-group:([\x21\x23\x24\x25\x26\x27\x2A\x2B\x2D\x2E\w]*) (.*)/,names:["semantics","ssrcs"],format:"ssrc-group:%s %s"},{name:"msidSemantic",reg:/^msid-semantic:\s?(\w*) (\S*)/,names:["semantic","token"],format:"msid-semantic: %s %s"},{push:"groups",reg:/^group:(\w*) (.*)/,names:["type","mids"],format:"group:%s %s"},{name:"rtcpMux",reg:/^(rtcp-mux)/},{name:"rtcpRsize",reg:/^(rtcp-rsize)/},{name:"sctpmap",reg:/^sctpmap:([\w_/]*) (\S*)(?: (\S*))?/,names:["sctpmapNumber","app","maxMessageSize"],format:function(e){return null!=e.maxMessageSize?"sctpmap:%s %s %s":"sctpmap:%s %s"}},{name:"xGoogleFlag",reg:/^x-google-flag:([^\s]*)/,format:"x-google-flag:%s"},{push:"rids",reg:/^rid:([\d\w]+) (\w+)(?: ([\S| ]*))?/,names:["id","direction","params"],format:function(e){return e.params?"rid:%s %s %s":"rid:%s %s"}},{push:"imageattrs",reg:new RegExp("^imageattr:(\\d+|\\*)[\\s\\t]+(send|recv)[\\s\\t]+(\\*|\\[\\S+\\](?:[\\s\\t]+\\[\\S+\\])*)(?:[\\s\\t]+(recv|send)[\\s\\t]+(\\*|\\[\\S+\\](?:[\\s\\t]+\\[\\S+\\])*))?"),names:["pt","dir1","attrs1","dir2","attrs2"],format:function(e){return"imageattr:%s %s %s"+(e.dir2?" %s %s":"")}},{name:"simulcast",reg:new RegExp("^simulcast:(send|recv) ([a-zA-Z0-9\\-_~;,]+)(?:\\s?(send|recv) ([a-zA-Z0-9\\-_~;,]+))?$"),names:["dir1","list1","dir2","list2"],format:function(e){return"simulcast:%s %s"+(e.dir2?" %s %s":"")}},{name:"simulcast_03",reg:/^simulcast:[\s\t]+([\S+\s\t]+)$/,names:["value"],format:"simulcast: %s"},{name:"framerate",reg:/^framerate:(\d+(?:$|\.\d+))/,format:"framerate:%s"},{name:"sourceFilter",reg:/^source-filter: *(excl|incl) (\S*) (IP4|IP6|\*) (\S*) (.*)/,names:["filterMode","netType","addressTypes","destAddress","srcList"],format:"source-filter: %s %s %s %s %s"},{name:"bundleOnly",reg:/^(bundle-only)/},{name:"label",reg:/^label:(.+)/,format:"label:%s"},{name:"sctpPort",reg:/^sctp-port:(\d+)$/,format:"sctp-port:%s"},{name:"maxMessageSize",reg:/^max-message-size:(\d+)$/,format:"max-message-size:%s"},{push:"tsRefClocks",reg:/^ts-refclk:([^\s=]*)(?:=(\S*))?/,names:["clksrc","clksrcExt"],format:function(e){return"ts-refclk:%s"+(null!=e.clksrcExt?"=%s":"")}},{name:"mediaClk",reg:/^mediaclk:(?:id=(\S*))? *([^\s=]*)(?:=(\S*))?(?: *rate=(\d+)\/(\d+))?/,names:["id","mediaClockName","mediaClockValue","rateNumerator","rateDenominator"],format:function(e){var t="mediaclk:";return t+=null!=e.id?"id=%s %s":"%v%s",t+=null!=e.mediaClockValue?"=%s":"",t+=null!=e.rateNumerator?" rate=%s":"",t+=null!=e.rateDenominator?"/%s":""}},{name:"keywords",reg:/^keywds:(.+)$/,format:"keywds:%s"},{name:"content",reg:/^content:(.+)/,format:"content:%s"},{name:"bfcpFloorCtrl",reg:/^floorctrl:(c-only|s-only|c-s)/,format:"floorctrl:%s"},{name:"bfcpConfId",reg:/^confid:(\d+)/,format:"confid:%s"},{name:"bfcpUserId",reg:/^userid:(\d+)/,format:"userid:%s"},{name:"bfcpFloorId",reg:/^floorid:(.+) (?:m-stream|mstrm):(.+)/,names:["id","mStream"],format:"floorid:%s mstrm:%s"},{push:"invalid",names:["value"]}]};Object.keys(t).forEach((function(e){t[e].forEach((function(e){e.reg||(e.reg=/(.*)/),e.format||(e.format="%s")}))}))})),Le=n((function(e,t){var s=function(e){return String(Number(e))===e?Number(e):e},r=function(e,t,r){var i=e.name&&e.names;e.push&&!t[e.push]?t[e.push]=[]:i&&!t[e.name]&&(t[e.name]={});var a=e.push?{}:i?t[e.name]:t;!function(e,t,r,i){if(i&&!r)t[i]=s(e[1]);else for(var a=0;a<r.length;a+=1)null!=e[a+1]&&(t[r[a]]=s(e[a+1]))}(r.match(e.reg),a,e.names,e.name),e.push&&t[e.push].push(a)},i=RegExp.prototype.test.bind(/^([a-z])=(.*)/);t.parse=function(e){var t={},s=[],a=t;return e.split(/(\r\n|\r|\n)/).filter(i).forEach((function(e){var t=e[0],i=e.slice(2);"m"===t&&(s.push({rtp:[],fmtp:[]}),a=s[s.length-1]);for(var n=0;n<(Oe[t]||[]).length;n+=1){var o=Oe[t][n];if(o.reg.test(i))return r(o,a,i)}})),t.media=s,t};var a=function(e,t){var r=t.split(/=(.+)/,2);return 2===r.length?e[r[0]]=s(r[1]):1===r.length&&t.length>1&&(e[r[0]]=void 0),e};t.parseParams=function(e){return e.split(/;\s?/).reduce(a,{})},t.parseFmtpConfig=t.parseParams,t.parsePayloads=function(e){return e.toString().split(" ").map(Number)},t.parseRemoteCandidates=function(e){for(var t=[],r=e.split(" ").map(s),i=0;i<r.length;i+=3)t.push({component:r[i],ip:r[i+1],port:r[i+2]});return t},t.parseImageAttributes=function(e){return e.split(" ").map((function(e){return e.substring(1,e.length-1).split(",").reduce(a,{})}))},t.parseSimulcastStreamList=function(e){return e.split(";").map((function(e){return e.split(",").map((function(e){var t,r=!1;return"~"!==e[0]?t=s(e):(t=s(e.substring(1,e.length)),r=!0),{scid:t,paused:r}}))}))}})),je=/%[sdv%]/g,Fe=function(e){var t=1,s=arguments,r=s.length;return e.replace(je,(function(e){if(t>=r)return e;var i=s[t];switch(t+=1,e){case"%%":return"%";case"%s":return String(i);case"%d":return Number(i);case"%v":return""}}))},Ae=function(e,t,s){var r=[e+"="+(t.format instanceof Function?t.format(t.push?s:s[t.name]):t.format)];if(t.names)for(var i=0;i<t.names.length;i+=1){var a=t.names[i];t.name?r.push(s[t.name][a]):r.push(s[t.names[i]])}else r.push(s[t.name]);return Fe.apply(null,r)},Be=["v","o","s","i","u","e","p","c","b","t","r","z","a"],Ne=["i","c","b","a"],ze=function(e,t){t=t||{},null==e.version&&(e.version=0),null==e.name&&(e.name=" "),e.media.forEach((function(e){null==e.payloads&&(e.payloads="")}));var s=t.outerOrder||Be,r=t.innerOrder||Ne,i=[];return s.forEach((function(t){Oe[t].forEach((function(s){s.name in e&&null!=e[s.name]?i.push(Ae(t,s,e)):s.push in e&&null!=e[s.push]&&e[s.push].forEach((function(e){i.push(Ae(t,s,e))}))}))})),e.media.forEach((function(e){i.push(Ae("m",Oe.m[0],e)),r.forEach((function(t){Oe[t].forEach((function(s){s.name in e&&null!=e[s.name]?i.push(Ae(t,s,e)):s.push in e&&null!=e[s.push]&&e[s.push].forEach((function(e){i.push(Ae(t,s,e))}))}))}))})),i.join("\r\n")+"\r\n"},$e=Le.parse,Ve=Le.parseParams;function Ge({sdpObject:e}){const t=new Map,s=[];let r=!1,i=!1;for(const a of e.media){const e=a.type;switch(e){case"audio":if(r)continue;r=!0;break;case"video":if(i)continue;i=!0;break;default:continue}for(const s of a.rtp){const r={kind:e,mimeType:`${e}/${s.codec}`,preferredPayloadType:s.payload,clockRate:s.rate,channels:s.encoding,parameters:{},rtcpFeedback:[]};t.set(r.preferredPayloadType,r)}for(const s of a.fmtp||[]){const e=Ve(s.config),r=t.get(s.payload);r&&(e&&e.hasOwnProperty("profile-level-id")&&(e["profile-level-id"]=String(e["profile-level-id"])),r.parameters=e)}for(const s of a.rtcpFb||[]){const e=t.get(s.payload);if(!e)continue;const r={type:s.type,parameter:s.subtype};r.parameter||delete r.parameter,e.rtcpFeedback.push(r)}for(const t of a.ext||[]){if(t["encrypt-uri"])continue;const r={kind:e,uri:t.uri,preferredId:t.value};s.push(r)}}return{codecs:Array.from(t.values()),headerExtensions:s}}function Ke({sdpObject:e}){const t=(e.media||[]).find((e=>e.iceUfrag&&0!==e.port));if(!t)throw new Error("no active media section found");const s=t.fingerprint||e.fingerprint;let r;switch(t.setup){case"active":r="client";break;case"passive":r="server";break;case"actpass":r="auto"}return{role:r,fingerprints:[{algorithm:s.type,value:s.hash}]}}function qe({offerMediaObject:e}){const t=(e.ssrcs||[]).find((e=>"cname"===e.attribute));return t?t.value:""}function Ue({offerRtpParameters:e,answerMediaObject:t}){for(const s of e.codecs){const e=s.mimeType.toLowerCase();if("audio/opus"!==e)continue;if(!(t.rtp||[]).find((e=>e.payload===s.payloadType)))continue;t.fmtp=t.fmtp||[];let r=t.fmtp.find((e=>e.payload===s.payloadType));r||(r={payload:s.payloadType,config:""},t.fmtp.push(r));const i=Ve(r.config);switch(e){case"audio/opus":{const e=s.parameters["sprop-stereo"];void 0!==e&&(i.stereo=e?1:0);break}}r.config="";for(const t of Object.keys(i))r.config&&(r.config+=";"),r.config+=`${t}=${i[t]}`}}function We({offerMediaObject:e}){const t=new Set;for(const i of e.ssrcs||[]){const e=i.id;t.add(e)}if(0===t.size)throw new Error("no a=ssrc lines found");const s=new Map;for(const i of e.ssrcGroups||[]){if("FID"!==i.semantics)continue;let[e,r]=i.ssrcs.split(/\s+/);e=Number(e),r=Number(r),t.has(e)&&(t.delete(e),t.delete(r),s.set(e,r))}for(const i of t)s.set(i,null);const r=[];for(const[i,a]of s){const e={ssrc:i};a&&(e.rtx={ssrc:a}),r.push(e)}return r}function Qe({offerMediaObject:e,numStreams:t}){if(t<=1)throw new TypeError("numStreams must be greater than 1");const s=(e.ssrcs||[]).find((e=>"msid"===e.attribute));if(!s)throw new Error("a=ssrc line with msid information not found");const[r,i]=s.value.split(" "),a=s.id;let n;(e.ssrcGroups||[]).some((e=>{if("FID"!==e.semantics)return!1;const t=e.ssrcs.split(/\s+/);return Number(t[0])===a&&(n=Number(t[1]),!0)}));const o=e.ssrcs.find((e=>"cname"===e.attribute));if(!o)throw new Error("a=ssrc line with cname information not found");const c=o.value,d=[],p=[];for(let l=0;l<t;++l)d.push(a+l),n&&p.push(n+l);e.ssrcGroups=[],e.ssrcs=[],e.ssrcGroups.push({semantics:"SIM",ssrcs:d.join(" ")});for(let l=0;l<d.length;++l){const t=d[l];e.ssrcs.push({id:t,attribute:"cname",value:c}),e.ssrcs.push({id:t,attribute:"msid",value:`${r} ${i}`})}for(let l=0;l<p.length;++l){const t=d[l],s=p[l];e.ssrcs.push({id:s,attribute:"cname",value:c}),e.ssrcs.push({id:s,attribute:"msid",value:`${r} ${i}`}),e.ssrcGroups.push({semantics:"FID",ssrcs:`${t} ${s}`})}}Le.parseFmtpConfig,Le.parsePayloads,Le.parseRemoteCandidates,Le.parseImageAttributes,Le.parseSimulcastStreamList;class Je extends Z{constructor(){super()}}class He{constructor({iceParameters:e,iceCandidates:t,dtlsParameters:s,planB:r=!1}){if(this._mediaObject={},this._planB=r,e&&this.setIceParameters(e),t){this._mediaObject.candidates=[];for(const e of t){const t={component:1};t.foundation=e.foundation,t.ip=e.ip,t.port=e.port,t.priority=e.priority,t.transport=e.protocol,t.type=e.type,e.tcpType&&(t.tcptype=e.tcpType),this._mediaObject.candidates.push(t)}this._mediaObject.endOfCandidates="end-of-candidates",this._mediaObject.iceOptions="renomination"}s&&this.setDtlsRole(s.role)}get mid(){return String(this._mediaObject.mid)}get closed(){return 0===this._mediaObject.port}getObject(){return this._mediaObject}setIceParameters(e){this._mediaObject.iceUfrag=e.usernameFragment,this._mediaObject.icePwd=e.password}disable(){this._mediaObject.direction="inactive",delete this._mediaObject.ext,delete this._mediaObject.ssrcs,delete this._mediaObject.ssrcGroups,delete this._mediaObject.simulcast,delete this._mediaObject.simulcast_03,delete this._mediaObject.rids}close(){this._mediaObject.direction="inactive",this._mediaObject.port=0,delete this._mediaObject.ext,delete this._mediaObject.ssrcs,delete this._mediaObject.ssrcGroups,delete this._mediaObject.simulcast,delete this._mediaObject.simulcast_03,delete this._mediaObject.rids,delete this._mediaObject.extmapAllowMixed}}class Ze extends He{constructor({iceParameters:e,iceCandidates:t,dtlsParameters:s,sctpParameters:r,plainRtpParameters:i,planB:a=!1,offerMediaObject:n,offerRtpParameters:o,answerRtpParameters:c,codecOptions:d,extmapAllowMixed:p=!1}){switch(super({iceParameters:e,iceCandidates:t,dtlsParameters:s,planB:a}),this._mediaObject.mid=String(n.mid),this._mediaObject.type=n.type,this._mediaObject.protocol=n.protocol,i?(this._mediaObject.connection={ip:i.ip,version:i.ipVersion},this._mediaObject.port=i.port):(this._mediaObject.connection={ip:"127.0.0.1",version:4},this._mediaObject.port=7),n.type){case"audio":case"video":this._mediaObject.direction="recvonly",this._mediaObject.rtp=[],this._mediaObject.rtcpFb=[],this._mediaObject.fmtp=[];for(const e of c.codecs){const t={payload:e.payloadType,codec:Ye(e),rate:e.clockRate};e.channels>1&&(t.encoding=e.channels),this._mediaObject.rtp.push(t);const s=ee(e.parameters,{});if(d){const{opusStereo:t,opusFec:r,opusDtx:i,opusMaxPlaybackRate:a,opusMaxAverageBitrate:n,opusPtime:c,videoGoogleStartBitrate:p,videoGoogleMaxBitrate:l,videoGoogleMinBitrate:h}=d,m=o.codecs.find((t=>t.payloadType===e.payloadType));switch(e.mimeType.toLowerCase()){case"audio/opus":void 0!==t&&(m.parameters["sprop-stereo"]=t?1:0,s.stereo=t?1:0),void 0!==r&&(m.parameters.useinbandfec=r?1:0,s.useinbandfec=r?1:0),void 0!==i&&(m.parameters.usedtx=i?1:0,s.usedtx=i?1:0),void 0!==a&&(s.maxplaybackrate=a),void 0!==n&&(s.maxaveragebitrate=n),void 0!==c&&(m.parameters.ptime=c,s.ptime=c);break;case"video/vp8":case"video/vp9":case"video/h264":case"video/h265":void 0!==p&&(s["x-google-start-bitrate"]=p),void 0!==l&&(s["x-google-max-bitrate"]=l),void 0!==h&&(s["x-google-min-bitrate"]=h)}}const r={payload:e.payloadType,config:""};for(const e of Object.keys(s))r.config&&(r.config+=";"),r.config+=`${e}=${s[e]}`;r.config&&this._mediaObject.fmtp.push(r);for(const i of e.rtcpFeedback)this._mediaObject.rtcpFb.push({payload:e.payloadType,type:i.type,subtype:i.parameter})}this._mediaObject.payloads=c.codecs.map((e=>e.payloadType)).join(" "),this._mediaObject.ext=[];for(const e of c.headerExtensions){(n.ext||[]).some((t=>t.uri===e.uri))&&this._mediaObject.ext.push({uri:e.uri,value:e.id})}if(p&&"extmap-allow-mixed"===n.extmapAllowMixed&&(this._mediaObject.extmapAllowMixed="extmap-allow-mixed"),n.simulcast){this._mediaObject.simulcast={dir1:"recv",list1:n.simulcast.list1},this._mediaObject.rids=[];for(const e of n.rids||[])"send"===e.direction&&this._mediaObject.rids.push({id:e.id,direction:"recv"})}else if(n.simulcast_03){this._mediaObject.simulcast_03={value:n.simulcast_03.value.replace(/send/g,"recv")},this._mediaObject.rids=[];for(const e of n.rids||[])"send"===e.direction&&this._mediaObject.rids.push({id:e.id,direction:"recv"})}this._mediaObject.rtcpMux="rtcp-mux",this._mediaObject.rtcpRsize="rtcp-rsize",this._planB&&"video"===this._mediaObject.type&&(this._mediaObject.xGoogleFlag="conference");break;case"application":"number"==typeof n.sctpPort?(this._mediaObject.payloads="webrtc-datachannel",this._mediaObject.sctpPort=r.port,this._mediaObject.maxMessageSize=r.maxMessageSize):n.sctpmap&&(this._mediaObject.payloads=r.port,this._mediaObject.sctpmap={app:"webrtc-datachannel",sctpmapNumber:r.port,maxMessageSize:r.maxMessageSize})}}setDtlsRole(e){switch(e){case"client":this._mediaObject.setup="active";break;case"server":this._mediaObject.setup="passive";break;case"auto":this._mediaObject.setup="actpass"}}}class Xe extends He{constructor({iceParameters:e,iceCandidates:t,dtlsParameters:s,sctpParameters:r,plainRtpParameters:i,planB:a=!1,mid:n,kind:o,offerRtpParameters:c,streamId:d,trackId:p,oldDataChannelSpec:l=!1}){switch(super({iceParameters:e,iceCandidates:t,dtlsParameters:s,planB:a}),this._mediaObject.mid=String(n),this._mediaObject.type=o,i?(this._mediaObject.connection={ip:i.ip,version:i.ipVersion},this._mediaObject.protocol="RTP/AVP",this._mediaObject.port=i.port):(this._mediaObject.connection={ip:"127.0.0.1",version:4},this._mediaObject.protocol=r?"UDP/DTLS/SCTP":"UDP/TLS/RTP/SAVPF",this._mediaObject.port=7),o){case"audio":case"video":{this._mediaObject.direction="sendonly",this._mediaObject.rtp=[],this._mediaObject.rtcpFb=[],this._mediaObject.fmtp=[],this._planB||(this._mediaObject.msid=`${d||"-"} ${p}`);for(const r of c.codecs){const e={payload:r.payloadType,codec:Ye(r),rate:r.clockRate};r.channels>1&&(e.encoding=r.channels),this._mediaObject.rtp.push(e);const t={payload:r.payloadType,config:""};for(const s of Object.keys(r.parameters))t.config&&(t.config+=";"),t.config+=`${s}=${r.parameters[s]}`;t.config&&this._mediaObject.fmtp.push(t);for(const s of r.rtcpFeedback)this._mediaObject.rtcpFb.push({payload:r.payloadType,type:s.type,subtype:s.parameter})}this._mediaObject.payloads=c.codecs.map((e=>e.payloadType)).join(" "),this._mediaObject.ext=[];for(const r of c.headerExtensions)this._mediaObject.ext.push({uri:r.uri,value:r.id});this._mediaObject.rtcpMux="rtcp-mux",this._mediaObject.rtcpRsize="rtcp-rsize";const e=c.encodings[0],t=e.ssrc,s=e.rtx&&e.rtx.ssrc?e.rtx.ssrc:void 0;this._mediaObject.ssrcs=[],this._mediaObject.ssrcGroups=[],c.rtcp.cname&&this._mediaObject.ssrcs.push({id:t,attribute:"cname",value:c.rtcp.cname}),this._planB&&this._mediaObject.ssrcs.push({id:t,attribute:"msid",value:`${d||"-"} ${p}`}),s&&(c.rtcp.cname&&this._mediaObject.ssrcs.push({id:s,attribute:"cname",value:c.rtcp.cname}),this._planB&&this._mediaObject.ssrcs.push({id:s,attribute:"msid",value:`${d||"-"} ${p}`}),this._mediaObject.ssrcGroups.push({semantics:"FID",ssrcs:`${t} ${s}`}));break}case"application":l?(this._mediaObject.payloads=r.port,this._mediaObject.sctpmap={app:"webrtc-datachannel",sctpmapNumber:r.port,maxMessageSize:r.maxMessageSize}):(this._mediaObject.payloads="webrtc-datachannel",this._mediaObject.sctpPort=r.port,this._mediaObject.maxMessageSize=r.maxMessageSize)}}setDtlsRole(e){this._mediaObject.setup="actpass"}planBReceive({offerRtpParameters:e,streamId:t,trackId:s}){const r=e.encodings[0],i=r.ssrc,a=r.rtx&&r.rtx.ssrc?r.rtx.ssrc:void 0,n=this._mediaObject.payloads.split(" ");for(const o of e.codecs){if(n.includes(String(o.payloadType)))continue;const e={payload:o.payloadType,codec:Ye(o),rate:o.clockRate};o.channels>1&&(e.encoding=o.channels),this._mediaObject.rtp.push(e);const t={payload:o.payloadType,config:""};for(const s of Object.keys(o.parameters))t.config&&(t.config+=";"),t.config+=`${s}=${o.parameters[s]}`;t.config&&this._mediaObject.fmtp.push(t);for(const s of o.rtcpFeedback)this._mediaObject.rtcpFb.push({payload:o.payloadType,type:s.type,subtype:s.parameter})}this._mediaObject.payloads+=` ${e.codecs.filter((e=>!this._mediaObject.payloads.includes(e.payloadType))).map((e=>e.payloadType)).join(" ")}`,this._mediaObject.payloads=this._mediaObject.payloads.trim(),e.rtcp.cname&&this._mediaObject.ssrcs.push({id:i,attribute:"cname",value:e.rtcp.cname}),this._mediaObject.ssrcs.push({id:i,attribute:"msid",value:`${t||"-"} ${s}`}),a&&(e.rtcp.cname&&this._mediaObject.ssrcs.push({id:a,attribute:"cname",value:e.rtcp.cname}),this._mediaObject.ssrcs.push({id:a,attribute:"msid",value:`${t||"-"} ${s}`}),this._mediaObject.ssrcGroups.push({semantics:"FID",ssrcs:`${i} ${a}`}))}planBStopReceiving({offerRtpParameters:e}){const t=e.encodings[0],s=t.ssrc,r=t.rtx&&t.rtx.ssrc?t.rtx.ssrc:void 0;this._mediaObject.ssrcs=this._mediaObject.ssrcs.filter((e=>e.id!==s&&e.id!==r)),r&&(this._mediaObject.ssrcGroups=this._mediaObject.ssrcGroups.filter((e=>e.ssrcs!==`${s} ${r}`)))}}function Ye(e){const t=new RegExp("^(audio|video)/(.+)","i").exec(e.mimeType);if(!t)throw new TypeError("invalid codec.mimeType");return t[2]}const et=new M("RemoteSdp");class tt{constructor({iceParameters:e,iceCandidates:t,dtlsParameters:s,sctpParameters:r,plainRtpParameters:i,planB:a=!1}){if(this._mediaSections=[],this._midToIndex=new Map,this._iceParameters=e,this._iceCandidates=t,this._dtlsParameters=s,this._sctpParameters=r,this._plainRtpParameters=i,this._planB=a,this._sdpObject={version:0,origin:{address:"0.0.0.0",ipVer:4,netType:"IN",sessionId:1e4,sessionVersion:0,username:"mediasoup-client"},name:"-",timing:{start:0,stop:0},media:[]},e&&e.iceLite&&(this._sdpObject.icelite="ice-lite"),s){this._sdpObject.msidSemantic={semantic:"WMS",token:"*"};const e=this._dtlsParameters.fingerprints.length;this._sdpObject.fingerprint={type:s.fingerprints[e-1].algorithm,hash:s.fingerprints[e-1].value},this._sdpObject.groups=[{type:"BUNDLE",mids:""}]}i&&(this._sdpObject.origin.address=i.ip,this._sdpObject.origin.ipVer=i.ipVersion)}updateIceParameters(e){et.debug("updateIceParameters() [iceParameters:%o]",e),this._iceParameters=e,this._sdpObject.icelite=e.iceLite?"ice-lite":void 0;for(const t of this._mediaSections)t.setIceParameters(e)}updateDtlsRole(e){et.debug("updateDtlsRole() [role:%s]",e),this._dtlsParameters.role=e;for(const t of this._mediaSections)t.setDtlsRole(e)}getNextMediaSectionIdx(){for(let e=0;e<this._mediaSections.length;++e){const t=this._mediaSections[e];if(t.closed)return{idx:e,reuseMid:t.mid}}return{idx:this._mediaSections.length}}send({offerMediaObject:e,reuseMid:t,offerRtpParameters:s,answerRtpParameters:r,codecOptions:i,extmapAllowMixed:a=!1}){const n=new Ze({iceParameters:this._iceParameters,iceCandidates:this._iceCandidates,dtlsParameters:this._dtlsParameters,plainRtpParameters:this._plainRtpParameters,planB:this._planB,offerMediaObject:e,offerRtpParameters:s,answerRtpParameters:r,codecOptions:i,extmapAllowMixed:a});t?this._replaceMediaSection(n,t):this._midToIndex.has(n.mid)?this._replaceMediaSection(n):this._addMediaSection(n)}receive({mid:e,kind:t,offerRtpParameters:s,streamId:r,trackId:i}){const a=this._midToIndex.get(e);let n;if(void 0!==a&&(n=this._mediaSections[a]),n)n.planBReceive({offerRtpParameters:s,streamId:r,trackId:i}),this._replaceMediaSection(n);else{n=new Xe({iceParameters:this._iceParameters,iceCandidates:this._iceCandidates,dtlsParameters:this._dtlsParameters,plainRtpParameters:this._plainRtpParameters,planB:this._planB,mid:e,kind:t,offerRtpParameters:s,streamId:r,trackId:i});const a=this._mediaSections.find((e=>e.closed));a?this._replaceMediaSection(n,a.mid):this._addMediaSection(n)}}disableMediaSection(e){const t=this._midToIndex.get(e);if(void 0===t)throw new Error(`no media section found with mid '${e}'`);this._mediaSections[t].disable()}closeMediaSection(e){const t=this._midToIndex.get(e);if(void 0===t)throw new Error(`no media section found with mid '${e}'`);const s=this._mediaSections[t];if(e===this._firstMid)return et.debug("closeMediaSection() | cannot close first media section, disabling it instead [mid:%s]",e),void this.disableMediaSection(e);s.close(),this._regenerateBundleMids()}planBStopReceiving({mid:e,offerRtpParameters:t}){const s=this._midToIndex.get(e);if(void 0===s)throw new Error(`no media section found with mid '${e}'`);const r=this._mediaSections[s];r.planBStopReceiving({offerRtpParameters:t}),this._replaceMediaSection(r)}sendSctpAssociation({offerMediaObject:e}){const t=new Ze({iceParameters:this._iceParameters,iceCandidates:this._iceCandidates,dtlsParameters:this._dtlsParameters,sctpParameters:this._sctpParameters,plainRtpParameters:this._plainRtpParameters,offerMediaObject:e});this._addMediaSection(t)}receiveSctpAssociation({oldDataChannelSpec:e=!1}={}){const t=new Xe({iceParameters:this._iceParameters,iceCandidates:this._iceCandidates,dtlsParameters:this._dtlsParameters,sctpParameters:this._sctpParameters,plainRtpParameters:this._plainRtpParameters,mid:"datachannel",kind:"application",oldDataChannelSpec:e});this._addMediaSection(t)}getSdp(){return this._sdpObject.origin.sessionVersion++,ze(this._sdpObject)}_addMediaSection(e){this._firstMid||(this._firstMid=e.mid),this._mediaSections.push(e),this._midToIndex.set(e.mid,this._mediaSections.length-1),this._sdpObject.media.push(e.getObject()),this._regenerateBundleMids()}_replaceMediaSection(e,t){if("string"==typeof t){const s=this._midToIndex.get(t);if(void 0===s)throw new Error(`no media section found for reuseMid '${t}'`);const r=this._mediaSections[s];this._mediaSections[s]=e,this._midToIndex.delete(r.mid),this._midToIndex.set(e.mid,s),this._sdpObject.media[s]=e.getObject(),this._regenerateBundleMids()}else{const t=this._midToIndex.get(e.mid);if(void 0===t)throw new Error(`no media section found with mid '${e.mid}'`);this._mediaSections[t]=e,this._sdpObject.media[t]=e.getObject()}}_regenerateBundleMids(){this._dtlsParameters&&(this._sdpObject.groups[0].mids=this._mediaSections.filter((e=>!e.closed)).map((e=>e.mid)).join(" "))}}const st=new RegExp("^[LS]([1-9]\\d{0,1})T([1-9]\\d{0,1})");function rt(e){const t=st.exec(e||"");return t?{spatialLayers:Number(t[1]),temporalLayers:Number(t[2])}:{spatialLayers:1,temporalLayers:1}}const it=new M("Chrome74"),at={OS:1024,MIS:1024};class nt extends Je{constructor(){super(),this._mapMidTransceiver=new Map,this._sendStream=new MediaStream,this._hasDataChannelMediaSection=!1,this._nextSendSctpStreamId=0,this._transportReady=!1}static createFactory(){return()=>new nt}get name(){return"Chrome74"}close(){if(it.debug("close()"),this._pc)try{this._pc.close()}catch(e){}}async getNativeRtpCapabilities(){it.debug("getNativeRtpCapabilities()");const e=new RTCPeerConnection({iceServers:[],iceTransportPolicy:"all",bundlePolicy:"max-bundle",rtcpMuxPolicy:"require",sdpSemantics:"unified-plan"});try{e.addTransceiver("audio"),e.addTransceiver("video");const s=await e.createOffer();try{e.close()}catch(t){}const r=$e(s.sdp);return Ge({sdpObject:r})}catch(t){try{e.close()}catch(s){}throw t}}async getNativeSctpCapabilities(){return it.debug("getNativeSctpCapabilities()"),{numStreams:at}}run({direction:e,iceParameters:t,iceCandidates:s,dtlsParameters:r,sctpParameters:i,iceServers:n,iceTransportPolicy:o,additionalSettings:c,proprietaryConstraints:d,extendedRtpCapabilities:p}){it.debug("run()"),this._direction=e,this._remoteSdp=new tt({iceParameters:t,iceCandidates:s,dtlsParameters:r,sctpParameters:i}),this._sendingRtpParametersByKind={audio:me("audio",p),video:me("video",p)},this._sendingRemoteRtpParametersByKind={audio:ue("audio",p),video:ue("video",p)},this._pc=new RTCPeerConnection(a({iceServers:n||[],iceTransportPolicy:o||"all",bundlePolicy:"max-bundle",rtcpMuxPolicy:"require",sdpSemantics:"unified-plan"},c),d),this._pc.addEventListener("iceconnectionstatechange",(()=>{switch(this._pc.iceConnectionState){case"checking":this.emit("@connectionstatechange","connecting");break;case"connected":case"completed":this.emit("@connectionstatechange","connected");break;case"failed":this.emit("@connectionstatechange","failed");break;case"disconnected":this.emit("@connectionstatechange","disconnected");break;case"closed":this.emit("@connectionstatechange","closed")}}))}async updateIceServers(e){it.debug("updateIceServers()");const t=this._pc.getConfiguration();t.iceServers=e,this._pc.setConfiguration(t)}async restartIce(e){if(it.debug("restartIce()"),this._remoteSdp.updateIceParameters(e),this._transportReady)if("send"===this._direction){const e=await this._pc.createOffer({iceRestart:!0});it.debug("restartIce() | calling pc.setLocalDescription() [offer:%o]",e),await this._pc.setLocalDescription(e);const t={type:"answer",sdp:this._remoteSdp.getSdp()};it.debug("restartIce() | calling pc.setRemoteDescription() [answer:%o]",t),await this._pc.setRemoteDescription(t)}else{const e={type:"offer",sdp:this._remoteSdp.getSdp()};it.debug("restartIce() | calling pc.setRemoteDescription() [offer:%o]",e),await this._pc.setRemoteDescription(e);const t=await this._pc.createAnswer();it.debug("restartIce() | calling pc.setLocalDescription() [answer:%o]",t),await this._pc.setLocalDescription(t)}}async getTransportStats(){return this._pc.getStats()}async send({track:e,encodings:t,codecOptions:s,codec:r}){this._assertSendDirection(),it.debug("send() [kind:%s, track.id:%s]",e.kind,e.id),t&&t.length>1&&t.forEach(((e,t)=>{e.rid=`r${t}`}));const i=ee(this._sendingRtpParametersByKind[e.kind],{});i.codecs=fe(i.codecs,r);const a=ee(this._sendingRemoteRtpParametersByKind[e.kind],{});a.codecs=fe(a.codecs,r);const n=this._remoteSdp.getNextMediaSectionIdx(),o=this._pc.addTransceiver(e,{direction:"sendonly",streams:[this._sendStream],sendEncodings:t});let c,d=await this._pc.createOffer(),p=$e(d.sdp);this._transportReady||await this._setupTransport({localDtlsRole:"server",localSdpObject:p});let l=!1;const h=rt((t||[{}])[0].scalabilityMode);t&&1===t.length&&h.spatialLayers>1&&"video/vp9"===i.codecs[0].mimeType.toLowerCase()&&(it.debug("send() | enabling legacy simulcast for VP9 SVC"),l=!0,p=$e(d.sdp),c=p.media[n.idx],Qe({offerMediaObject:c,numStreams:h.spatialLayers}),d={type:"offer",sdp:ze(p)}),it.debug("send() | calling pc.setLocalDescription() [offer:%o]",d),await this._pc.setLocalDescription(d);const m=o.mid;if(i.mid=m,p=$e(this._pc.localDescription.sdp),c=p.media[n.idx],i.rtcp.cname=qe({offerMediaObject:c}),t)if(1===t.length){let e=We({offerMediaObject:c});Object.assign(e[0],t[0]),l&&(e=[e[0]]),i.encodings=e}else i.encodings=t;else i.encodings=We({offerMediaObject:c});if(i.encodings.length>1&&("video/vp8"===i.codecs[0].mimeType.toLowerCase()||"video/h264"===i.codecs[0].mimeType.toLowerCase()))for(const f of i.encodings)f.scalabilityMode="S1T3";this._remoteSdp.send({offerMediaObject:c,reuseMid:n.reuseMid,offerRtpParameters:i,answerRtpParameters:a,codecOptions:s,extmapAllowMixed:!0});const u={type:"answer",sdp:this._remoteSdp.getSdp()};return it.debug("send() | calling pc.setRemoteDescription() [answer:%o]",u),await this._pc.setRemoteDescription(u),this._mapMidTransceiver.set(m,o),{localId:m,rtpParameters:i,rtpSender:o.sender}}async stopSending(e){this._assertSendDirection(),it.debug("stopSending() [localId:%s]",e);const t=this._mapMidTransceiver.get(e);if(!t)throw new Error("associated RTCRtpTransceiver not found");t.sender.replaceTrack(null),this._pc.removeTrack(t.sender),this._remoteSdp.closeMediaSection(t.mid);const s=await this._pc.createOffer();it.debug("stopSending() | calling pc.setLocalDescription() [offer:%o]",s),await this._pc.setLocalDescription(s);const r={type:"answer",sdp:this._remoteSdp.getSdp()};it.debug("stopSending() | calling pc.setRemoteDescription() [answer:%o]",r),await this._pc.setRemoteDescription(r)}async replaceTrack(e,t){this._assertSendDirection(),t?it.debug("replaceTrack() [localId:%s, track.id:%s]",e,t.id):it.debug("replaceTrack() [localId:%s, no track]",e);const s=this._mapMidTransceiver.get(e);if(!s)throw new Error("associated RTCRtpTransceiver not found");await s.sender.replaceTrack(t)}async setMaxSpatialLayer(e,t){this._assertSendDirection(),it.debug("setMaxSpatialLayer() [localId:%s, spatialLayer:%s]",e,t);const s=this._mapMidTransceiver.get(e);if(!s)throw new Error("associated RTCRtpTransceiver not found");const r=s.sender.getParameters();r.encodings.forEach(((e,s)=>{e.active=s<=t})),await s.sender.setParameters(r)}async setRtpEncodingParameters(e,t){this._assertSendDirection(),it.debug("setRtpEncodingParameters() [localId:%s, params:%o]",e,t);const s=this._mapMidTransceiver.get(e);if(!s)throw new Error("associated RTCRtpTransceiver not found");const r=s.sender.getParameters();r.encodings.forEach(((e,s)=>{r.encodings[s]=a(a({},e),t)})),await s.sender.setParameters(r)}async getSenderStats(e){this._assertSendDirection();const t=this._mapMidTransceiver.get(e);if(!t)throw new Error("associated RTCRtpTransceiver not found");return t.sender.getStats()}async sendDataChannel({ordered:e,maxPacketLifeTime:t,maxRetransmits:s,label:r,protocol:i}){this._assertSendDirection();const a={negotiated:!0,id:this._nextSendSctpStreamId,ordered:e,maxPacketLifeTime:t,maxRetransmits:s,protocol:i};it.debug("sendDataChannel() [options:%o]",a);const n=this._pc.createDataChannel(r,a);if(this._nextSendSctpStreamId=++this._nextSendSctpStreamId%at.MIS,!this._hasDataChannelMediaSection){const e=await this._pc.createOffer(),t=$e(e.sdp),s=t.media.find((e=>"application"===e.type));this._transportReady||await this._setupTransport({localDtlsRole:"server",localSdpObject:t}),it.debug("sendDataChannel() | calling pc.setLocalDescription() [offer:%o]",e),await this._pc.setLocalDescription(e),this._remoteSdp.sendSctpAssociation({offerMediaObject:s});const r={type:"answer",sdp:this._remoteSdp.getSdp()};it.debug("sendDataChannel() | calling pc.setRemoteDescription() [answer:%o]",r),await this._pc.setRemoteDescription(r),this._hasDataChannelMediaSection=!0}return{dataChannel:n,sctpStreamParameters:{streamId:a.id,ordered:a.ordered,maxPacketLifeTime:a.maxPacketLifeTime,maxRetransmits:a.maxRetransmits}}}async receive({trackId:e,kind:t,rtpParameters:s}){this._assertRecvDirection(),it.debug("receive() [trackId:%s, kind:%s]",e,t);const r=s.mid||String(this._mapMidTransceiver.size);this._remoteSdp.receive({mid:r,kind:t,offerRtpParameters:s,streamId:s.rtcp.cname,trackId:e});const i={type:"offer",sdp:this._remoteSdp.getSdp()};it.debug("receive() | calling pc.setRemoteDescription() [offer:%o]",i),await this._pc.setRemoteDescription(i);let a=await this._pc.createAnswer();const n=$e(a.sdp);Ue({offerRtpParameters:s,answerMediaObject:n.media.find((e=>String(e.mid)===r))}),a={type:"answer",sdp:ze(n)},this._transportReady||await this._setupTransport({localDtlsRole:"client",localSdpObject:n}),it.debug("receive() | calling pc.setLocalDescription() [answer:%o]",a),await this._pc.setLocalDescription(a);const o=this._pc.getTransceivers().find((e=>e.mid===r));if(!o)throw new Error("new RTCRtpTransceiver not found");return this._mapMidTransceiver.set(r,o),{localId:r,track:o.receiver.track,rtpReceiver:o.receiver}}async stopReceiving(e){this._assertRecvDirection(),it.debug("stopReceiving() [localId:%s]",e);const t=this._mapMidTransceiver.get(e);if(!t)throw new Error("associated RTCRtpTransceiver not found");this._remoteSdp.closeMediaSection(t.mid);const s={type:"offer",sdp:this._remoteSdp.getSdp()};it.debug("stopReceiving() | calling pc.setRemoteDescription() [offer:%o]",s),await this._pc.setRemoteDescription(s);const r=await this._pc.createAnswer();it.debug("stopReceiving() | calling pc.setLocalDescription() [answer:%o]",r),await this._pc.setLocalDescription(r)}async getReceiverStats(e){this._assertRecvDirection();const t=this._mapMidTransceiver.get(e);if(!t)throw new Error("associated RTCRtpTransceiver not found");return t.receiver.getStats()}async receiveDataChannel({sctpStreamParameters:e,label:t,protocol:s}){this._assertRecvDirection();const{streamId:r,ordered:i,maxPacketLifeTime:a,maxRetransmits:n}=e,o={negotiated:!0,id:r,ordered:i,maxPacketLifeTime:a,maxRetransmits:n,protocol:s};it.debug("receiveDataChannel() [options:%o]",o);const c=this._pc.createDataChannel(t,o);if(!this._hasDataChannelMediaSection){this._remoteSdp.receiveSctpAssociation();const e={type:"offer",sdp:this._remoteSdp.getSdp()};it.debug("receiveDataChannel() | calling pc.setRemoteDescription() [offer:%o]",e),await this._pc.setRemoteDescription(e);const t=await this._pc.createAnswer();if(!this._transportReady){const e=$e(t.sdp);await this._setupTransport({localDtlsRole:"client",localSdpObject:e})}it.debug("receiveDataChannel() | calling pc.setRemoteDescription() [answer:%o]",t),await this._pc.setLocalDescription(t),this._hasDataChannelMediaSection=!0}return{dataChannel:c}}async _setupTransport({localDtlsRole:e,localSdpObject:t}){t||(t=$e(this._pc.localDescription.sdp));const s=Ke({sdpObject:t});s.role=e,this._remoteSdp.updateDtlsRole("client"===e?"server":"client"),await this.safeEmitAsPromise("@connect",{dtlsParameters:s}),this._transportReady=!0}_assertSendDirection(){if("send"!==this._direction)throw new Error('method can just be called for handlers with "send" direction')}_assertRecvDirection(){if("recv"!==this._direction)throw new Error('method can just be called for handlers with "recv" direction')}}const ot=new M("Chrome70"),ct={OS:1024,MIS:1024};class dt extends Je{constructor(){super(),this._mapMidTransceiver=new Map,this._sendStream=new MediaStream,this._hasDataChannelMediaSection=!1,this._nextSendSctpStreamId=0,this._transportReady=!1}static createFactory(){return()=>new dt}get name(){return"Chrome70"}close(){if(ot.debug("close()"),this._pc)try{this._pc.close()}catch(e){}}async getNativeRtpCapabilities(){ot.debug("getNativeRtpCapabilities()");const e=new RTCPeerConnection({iceServers:[],iceTransportPolicy:"all",bundlePolicy:"max-bundle",rtcpMuxPolicy:"require",sdpSemantics:"unified-plan"});try{e.addTransceiver("audio"),e.addTransceiver("video");const s=await e.createOffer();try{e.close()}catch(t){}const r=$e(s.sdp);return Ge({sdpObject:r})}catch(t){try{e.close()}catch(s){}throw t}}async getNativeSctpCapabilities(){return ot.debug("getNativeSctpCapabilities()"),{numStreams:ct}}run({direction:e,iceParameters:t,iceCandidates:s,dtlsParameters:r,sctpParameters:i,iceServers:n,iceTransportPolicy:o,additionalSettings:c,proprietaryConstraints:d,extendedRtpCapabilities:p}){ot.debug("run()"),this._direction=e,this._remoteSdp=new tt({iceParameters:t,iceCandidates:s,dtlsParameters:r,sctpParameters:i}),this._sendingRtpParametersByKind={audio:me("audio",p),video:me("video",p)},this._sendingRemoteRtpParametersByKind={audio:ue("audio",p),video:ue("video",p)},this._pc=new RTCPeerConnection(a({iceServers:n||[],iceTransportPolicy:o||"all",bundlePolicy:"max-bundle",rtcpMuxPolicy:"require",sdpSemantics:"unified-plan"},c),d),this._pc.addEventListener("iceconnectionstatechange",(()=>{switch(this._pc.iceConnectionState){case"checking":this.emit("@connectionstatechange","connecting");break;case"connected":case"completed":this.emit("@connectionstatechange","connected");break;case"failed":this.emit("@connectionstatechange","failed");break;case"disconnected":this.emit("@connectionstatechange","disconnected");break;case"closed":this.emit("@connectionstatechange","closed")}}))}async updateIceServers(e){ot.debug("updateIceServers()");const t=this._pc.getConfiguration();t.iceServers=e,this._pc.setConfiguration(t)}async restartIce(e){if(ot.debug("restartIce()"),this._remoteSdp.updateIceParameters(e),this._transportReady)if("send"===this._direction){const e=await this._pc.createOffer({iceRestart:!0});ot.debug("restartIce() | calling pc.setLocalDescription() [offer:%o]",e),await this._pc.setLocalDescription(e);const t={type:"answer",sdp:this._remoteSdp.getSdp()};ot.debug("restartIce() | calling pc.setRemoteDescription() [answer:%o]",t),await this._pc.setRemoteDescription(t)}else{const e={type:"offer",sdp:this._remoteSdp.getSdp()};ot.debug("restartIce() | calling pc.setRemoteDescription() [offer:%o]",e),await this._pc.setRemoteDescription(e);const t=await this._pc.createAnswer();ot.debug("restartIce() | calling pc.setLocalDescription() [answer:%o]",t),await this._pc.setLocalDescription(t)}}async getTransportStats(){return this._pc.getStats()}async send({track:e,encodings:t,codecOptions:s,codec:r}){this._assertSendDirection(),ot.debug("send() [kind:%s, track.id:%s]",e.kind,e.id);const i=ee(this._sendingRtpParametersByKind[e.kind],{});i.codecs=fe(i.codecs,r);const a=ee(this._sendingRemoteRtpParametersByKind[e.kind],{});a.codecs=fe(a.codecs,r);const n=this._remoteSdp.getNextMediaSectionIdx(),o=this._pc.addTransceiver(e,{direction:"sendonly",streams:[this._sendStream]});let c,d=await this._pc.createOffer(),p=$e(d.sdp);this._transportReady||await this._setupTransport({localDtlsRole:"server",localSdpObject:p}),t&&t.length>1&&(ot.debug("send() | enabling legacy simulcast"),p=$e(d.sdp),c=p.media[n.idx],Qe({offerMediaObject:c,numStreams:t.length}),d={type:"offer",sdp:ze(p)});let l=!1;const h=rt((t||[{}])[0].scalabilityMode);if(t&&1===t.length&&h.spatialLayers>1&&"video/vp9"===i.codecs[0].mimeType.toLowerCase()&&(ot.debug("send() | enabling legacy simulcast for VP9 SVC"),l=!0,p=$e(d.sdp),c=p.media[n.idx],Qe({offerMediaObject:c,numStreams:h.spatialLayers}),d={type:"offer",sdp:ze(p)}),ot.debug("send() | calling pc.setLocalDescription() [offer:%o]",d),await this._pc.setLocalDescription(d),t){ot.debug("send() | applying given encodings");const e=o.sender.getParameters();for(let s=0;s<(e.encodings||[]).length;++s){const r=e.encodings[s],i=t[s];if(!i)break;e.encodings[s]=Object.assign(r,i)}await o.sender.setParameters(e)}const m=o.mid;if(i.mid=m,p=$e(this._pc.localDescription.sdp),c=p.media[n.idx],i.rtcp.cname=qe({offerMediaObject:c}),i.encodings=We({offerMediaObject:c}),t)for(let f=0;f<i.encodings.length;++f)t[f]&&Object.assign(i.encodings[f],t[f]);if(l&&(i.encodings=[i.encodings[0]]),i.encodings.length>1&&("video/vp8"===i.codecs[0].mimeType.toLowerCase()||"video/h264"===i.codecs[0].mimeType.toLowerCase()))for(const f of i.encodings)f.scalabilityMode="S1T3";this._remoteSdp.send({offerMediaObject:c,reuseMid:n.reuseMid,offerRtpParameters:i,answerRtpParameters:a,codecOptions:s});const u={type:"answer",sdp:this._remoteSdp.getSdp()};return ot.debug("send() | calling pc.setRemoteDescription() [answer:%o]",u),await this._pc.setRemoteDescription(u),this._mapMidTransceiver.set(m,o),{localId:m,rtpParameters:i,rtpSender:o.sender}}async stopSending(e){this._assertSendDirection(),ot.debug("stopSending() [localId:%s]",e);const t=this._mapMidTransceiver.get(e);if(!t)throw new Error("associated RTCRtpTransceiver not found");t.sender.replaceTrack(null),this._pc.removeTrack(t.sender),this._remoteSdp.closeMediaSection(t.mid);const s=await this._pc.createOffer();ot.debug("stopSending() | calling pc.setLocalDescription() [offer:%o]",s),await this._pc.setLocalDescription(s);const r={type:"answer",sdp:this._remoteSdp.getSdp()};ot.debug("stopSending() | calling pc.setRemoteDescription() [answer:%o]",r),await this._pc.setRemoteDescription(r)}async replaceTrack(e,t){this._assertSendDirection(),t?ot.debug("replaceTrack() [localId:%s, track.id:%s]",e,t.id):ot.debug("replaceTrack() [localId:%s, no track]",e);const s=this._mapMidTransceiver.get(e);if(!s)throw new Error("associated RTCRtpTransceiver not found");await s.sender.replaceTrack(t)}async setMaxSpatialLayer(e,t){this._assertSendDirection(),ot.debug("setMaxSpatialLayer() [localId:%s, spatialLayer:%s]",e,t);const s=this._mapMidTransceiver.get(e);if(!s)throw new Error("associated RTCRtpTransceiver not found");const r=s.sender.getParameters();r.encodings.forEach(((e,s)=>{e.active=s<=t})),await s.sender.setParameters(r)}async setRtpEncodingParameters(e,t){this._assertSendDirection(),ot.debug("setRtpEncodingParameters() [localId:%s, params:%o]",e,t);const s=this._mapMidTransceiver.get(e);if(!s)throw new Error("associated RTCRtpTransceiver not found");const r=s.sender.getParameters();r.encodings.forEach(((e,s)=>{r.encodings[s]=a(a({},e),t)})),await s.sender.setParameters(r)}async getSenderStats(e){this._assertSendDirection();const t=this._mapMidTransceiver.get(e);if(!t)throw new Error("associated RTCRtpTransceiver not found");return t.sender.getStats()}async sendDataChannel({ordered:e,maxPacketLifeTime:t,maxRetransmits:s,label:r,protocol:i}){this._assertSendDirection();const a={negotiated:!0,id:this._nextSendSctpStreamId,ordered:e,maxPacketLifeTime:t,maxRetransmitTime:t,maxRetransmits:s,protocol:i};ot.debug("sendDataChannel() [options:%o]",a);const n=this._pc.createDataChannel(r,a);if(this._nextSendSctpStreamId=++this._nextSendSctpStreamId%ct.MIS,!this._hasDataChannelMediaSection){const e=await this._pc.createOffer(),t=$e(e.sdp),s=t.media.find((e=>"application"===e.type));this._transportReady||await this._setupTransport({localDtlsRole:"server",localSdpObject:t}),ot.debug("sendDataChannel() | calling pc.setLocalDescription() [offer:%o]",e),await this._pc.setLocalDescription(e),this._remoteSdp.sendSctpAssociation({offerMediaObject:s});const r={type:"answer",sdp:this._remoteSdp.getSdp()};ot.debug("sendDataChannel() | calling pc.setRemoteDescription() [answer:%o]",r),await this._pc.setRemoteDescription(r),this._hasDataChannelMediaSection=!0}return{dataChannel:n,sctpStreamParameters:{streamId:a.id,ordered:a.ordered,maxPacketLifeTime:a.maxPacketLifeTime,maxRetransmits:a.maxRetransmits}}}async receive({trackId:e,kind:t,rtpParameters:s}){this._assertRecvDirection(),ot.debug("receive() [trackId:%s, kind:%s]",e,t);const r=s.mid||String(this._mapMidTransceiver.size);this._remoteSdp.receive({mid:r,kind:t,offerRtpParameters:s,streamId:s.rtcp.cname,trackId:e});const i={type:"offer",sdp:this._remoteSdp.getSdp()};ot.debug("receive() | calling pc.setRemoteDescription() [offer:%o]",i),await this._pc.setRemoteDescription(i);let a=await this._pc.createAnswer();const n=$e(a.sdp);Ue({offerRtpParameters:s,answerMediaObject:n.media.find((e=>String(e.mid)===r))}),a={type:"answer",sdp:ze(n)},this._transportReady||await this._setupTransport({localDtlsRole:"client",localSdpObject:n}),ot.debug("receive() | calling pc.setLocalDescription() [answer:%o]",a),await this._pc.setLocalDescription(a);const o=this._pc.getTransceivers().find((e=>e.mid===r));if(!o)throw new Error("new RTCRtpTransceiver not found");return this._mapMidTransceiver.set(r,o),{localId:r,track:o.receiver.track,rtpReceiver:o.receiver}}async stopReceiving(e){this._assertRecvDirection(),ot.debug("stopReceiving() [localId:%s]",e);const t=this._mapMidTransceiver.get(e);if(!t)throw new Error("associated RTCRtpTransceiver not found");this._remoteSdp.closeMediaSection(t.mid);const s={type:"offer",sdp:this._remoteSdp.getSdp()};ot.debug("stopReceiving() | calling pc.setRemoteDescription() [offer:%o]",s),await this._pc.setRemoteDescription(s);const r=await this._pc.createAnswer();ot.debug("stopReceiving() | calling pc.setLocalDescription() [answer:%o]",r),await this._pc.setLocalDescription(r)}async getReceiverStats(e){this._assertRecvDirection();const t=this._mapMidTransceiver.get(e);if(!t)throw new Error("associated RTCRtpTransceiver not found");return t.receiver.getStats()}async receiveDataChannel({sctpStreamParameters:e,label:t,protocol:s}){this._assertRecvDirection();const{streamId:r,ordered:i,maxPacketLifeTime:a,maxRetransmits:n}=e,o={negotiated:!0,id:r,ordered:i,maxPacketLifeTime:a,maxRetransmitTime:a,maxRetransmits:n,protocol:s};ot.debug("receiveDataChannel() [options:%o]",o);const c=this._pc.createDataChannel(t,o);if(!this._hasDataChannelMediaSection){this._remoteSdp.receiveSctpAssociation();const e={type:"offer",sdp:this._remoteSdp.getSdp()};ot.debug("receiveDataChannel() | calling pc.setRemoteDescription() [offer:%o]",e),await this._pc.setRemoteDescription(e);const t=await this._pc.createAnswer();if(!this._transportReady){const e=$e(t.sdp);await this._setupTransport({localDtlsRole:"client",localSdpObject:e})}ot.debug("receiveDataChannel() | calling pc.setRemoteDescription() [answer:%o]",t),await this._pc.setLocalDescription(t),this._hasDataChannelMediaSection=!0}return{dataChannel:c}}async _setupTransport({localDtlsRole:e,localSdpObject:t}){t||(t=$e(this._pc.localDescription.sdp));const s=Ke({sdpObject:t});s.role=e,this._remoteSdp.updateDtlsRole("client"===e?"server":"client"),await this.safeEmitAsPromise("@connect",{dtlsParameters:s}),this._transportReady=!0}_assertSendDirection(){if("send"!==this._direction)throw new Error('method can just be called for handlers with "send" direction')}_assertRecvDirection(){if("recv"!==this._direction)throw new Error('method can just be called for handlers with "recv" direction')}}function pt({offerMediaObject:e,track:t}){const s=new Set;for(const a of e.ssrcs||[]){if("msid"!==a.attribute)continue;if(a.value.split(" ")[1]===t.id){const e=a.id;s.add(e)}}if(0===s.size)throw new Error(`a=ssrc line with msid information not found [track.id:${t.id}]`);const r=new Map;for(const a of e.ssrcGroups||[]){if("FID"!==a.semantics)continue;let[e,t]=a.ssrcs.split(/\s+/);e=Number(e),t=Number(t),s.has(e)&&(s.delete(e),s.delete(t),r.set(e,t))}for(const a of s)r.set(a,null);const i=[];for(const[a,n]of r){const e={ssrc:a};n&&(e.rtx={ssrc:n}),i.push(e)}return i}function lt({offerMediaObject:e,track:t,numStreams:s}){if(s<=1)throw new TypeError("numStreams must be greater than 1");let r,i,a;if(!(e.ssrcs||[]).find((e=>{if("msid"!==e.attribute)return!1;return e.value.split(" ")[1]===t.id&&(r=e.id,a=e.value.split(" ")[0],!0)})))throw new Error(`a=ssrc line with msid information not found [track.id:${t.id}]`);(e.ssrcGroups||[]).some((e=>{if("FID"!==e.semantics)return!1;const t=e.ssrcs.split(/\s+/);return Number(t[0])===r&&(i=Number(t[1]),!0)}));const n=e.ssrcs.find((e=>"cname"===e.attribute&&e.id===r));if(!n)throw new Error(`a=ssrc line with cname information not found [track.id:${t.id}]`);const o=n.value,c=[],d=[];for(let p=0;p<s;++p)c.push(r+p),i&&d.push(i+p);e.ssrcGroups=e.ssrcGroups||[],e.ssrcs=e.ssrcs||[],e.ssrcGroups.push({semantics:"SIM",ssrcs:c.join(" ")});for(let p=0;p<c.length;++p){const s=c[p];e.ssrcs.push({id:s,attribute:"cname",value:o}),e.ssrcs.push({id:s,attribute:"msid",value:`${a} ${t.id}`})}for(let p=0;p<d.length;++p){const s=c[p],r=d[p];e.ssrcs.push({id:r,attribute:"cname",value:o}),e.ssrcs.push({id:r,attribute:"msid",value:`${a} ${t.id}`}),e.ssrcGroups.push({semantics:"FID",ssrcs:`${s} ${r}`})}}const ht=new M("Chrome67"),mt={OS:1024,MIS:1024};class ut extends Je{constructor(){super(),this._sendStream=new MediaStream,this._mapSendLocalIdRtpSender=new Map,this._nextSendLocalId=0,this._mapRecvLocalIdInfo=new Map,this._hasDataChannelMediaSection=!1,this._nextSendSctpStreamId=0,this._transportReady=!1}static createFactory(){return()=>new ut}get name(){return"Chrome67"}close(){if(ht.debug("close()"),this._pc)try{this._pc.close()}catch(e){}}async getNativeRtpCapabilities(){ht.debug("getNativeRtpCapabilities()");const e=new RTCPeerConnection({iceServers:[],iceTransportPolicy:"all",bundlePolicy:"max-bundle",rtcpMuxPolicy:"require",sdpSemantics:"plan-b"});try{const s=await e.createOffer({offerToReceiveAudio:!0,offerToReceiveVideo:!0});try{e.close()}catch(t){}const r=$e(s.sdp);return Ge({sdpObject:r})}catch(t){try{e.close()}catch(s){}throw t}}async getNativeSctpCapabilities(){return ht.debug("getNativeSctpCapabilities()"),{numStreams:mt}}run({direction:e,iceParameters:t,iceCandidates:s,dtlsParameters:r,sctpParameters:i,iceServers:n,iceTransportPolicy:o,additionalSettings:c,proprietaryConstraints:d,extendedRtpCapabilities:p}){ht.debug("run()"),this._direction=e,this._remoteSdp=new tt({iceParameters:t,iceCandidates:s,dtlsParameters:r,sctpParameters:i,planB:!0}),this._sendingRtpParametersByKind={audio:me("audio",p),video:me("video",p)},this._sendingRemoteRtpParametersByKind={audio:ue("audio",p),video:ue("video",p)},this._pc=new RTCPeerConnection(a({iceServers:n||[],iceTransportPolicy:o||"all",bundlePolicy:"max-bundle",rtcpMuxPolicy:"require",sdpSemantics:"plan-b"},c),d),this._pc.addEventListener("iceconnectionstatechange",(()=>{switch(this._pc.iceConnectionState){case"checking":this.emit("@connectionstatechange","connecting");break;case"connected":case"completed":this.emit("@connectionstatechange","connected");break;case"failed":this.emit("@connectionstatechange","failed");break;case"disconnected":this.emit("@connectionstatechange","disconnected");break;case"closed":this.emit("@connectionstatechange","closed")}}))}async updateIceServers(e){ht.debug("updateIceServers()");const t=this._pc.getConfiguration();t.iceServers=e,this._pc.setConfiguration(t)}async restartIce(e){if(ht.debug("restartIce()"),this._remoteSdp.updateIceParameters(e),this._transportReady)if("send"===this._direction){const e=await this._pc.createOffer({iceRestart:!0});ht.debug("restartIce() | calling pc.setLocalDescription() [offer:%o]",e),await this._pc.setLocalDescription(e);const t={type:"answer",sdp:this._remoteSdp.getSdp()};ht.debug("restartIce() | calling pc.setRemoteDescription() [answer:%o]",t),await this._pc.setRemoteDescription(t)}else{const e={type:"offer",sdp:this._remoteSdp.getSdp()};ht.debug("restartIce() | calling pc.setRemoteDescription() [offer:%o]",e),await this._pc.setRemoteDescription(e);const t=await this._pc.createAnswer();ht.debug("restartIce() | calling pc.setLocalDescription() [answer:%o]",t),await this._pc.setLocalDescription(t)}}async getTransportStats(){return this._pc.getStats()}async send({track:e,encodings:t,codecOptions:s,codec:r}){this._assertSendDirection(),ht.debug("send() [kind:%s, track.id:%s]",e.kind,e.id),r&&ht.warn("send() | codec selection is not available in %s handler",this.name),this._sendStream.addTrack(e),this._pc.addTrack(e,this._sendStream);let i,a=await this._pc.createOffer(),n=$e(a.sdp);const o=ee(this._sendingRtpParametersByKind[e.kind],{});o.codecs=fe(o.codecs);const c=ee(this._sendingRemoteRtpParametersByKind[e.kind],{});if(c.codecs=fe(c.codecs),this._transportReady||await this._setupTransport({localDtlsRole:"server",localSdpObject:n}),"video"===e.kind&&t&&t.length>1&&(ht.debug("send() | enabling simulcast"),n=$e(a.sdp),i=n.media.find((e=>"video"===e.type)),lt({offerMediaObject:i,track:e,numStreams:t.length}),a={type:"offer",sdp:ze(n)}),ht.debug("send() | calling pc.setLocalDescription() [offer:%o]",a),await this._pc.setLocalDescription(a),n=$e(this._pc.localDescription.sdp),i=n.media.find((t=>t.type===e.kind)),o.rtcp.cname=qe({offerMediaObject:i}),o.encodings=pt({offerMediaObject:i,track:e}),t)for(let h=0;h<o.encodings.length;++h)t[h]&&Object.assign(o.encodings[h],t[h]);if(o.encodings.length>1&&"video/vp8"===o.codecs[0].mimeType.toLowerCase())for(const h of o.encodings)h.scalabilityMode="S1T3";this._remoteSdp.send({offerMediaObject:i,offerRtpParameters:o,answerRtpParameters:c,codecOptions:s});const d={type:"answer",sdp:this._remoteSdp.getSdp()};ht.debug("send() | calling pc.setRemoteDescription() [answer:%o]",d),await this._pc.setRemoteDescription(d);const p=String(this._nextSendLocalId);this._nextSendLocalId++;const l=this._pc.getSenders().find((t=>t.track===e));return this._mapSendLocalIdRtpSender.set(p,l),{localId:p,rtpParameters:o,rtpSender:l}}async stopSending(e){this._assertSendDirection(),ht.debug("stopSending() [localId:%s]",e);const t=this._mapSendLocalIdRtpSender.get(e);if(!t)throw new Error("associated RTCRtpSender not found");this._pc.removeTrack(t),t.track&&this._sendStream.removeTrack(t.track),this._mapSendLocalIdRtpSender.delete(e);const s=await this._pc.createOffer();ht.debug("stopSending() | calling pc.setLocalDescription() [offer:%o]",s);try{await this._pc.setLocalDescription(s)}catch(i){if(0===this._sendStream.getTracks().length)return void ht.warn("stopSending() | ignoring expected error due no sending tracks: %s",i.toString());throw i}if("stable"===this._pc.signalingState)return;const r={type:"answer",sdp:this._remoteSdp.getSdp()};ht.debug("stopSending() | calling pc.setRemoteDescription() [answer:%o]",r),await this._pc.setRemoteDescription(r)}async replaceTrack(e,t){this._assertSendDirection(),t?ht.debug("replaceTrack() [localId:%s, track.id:%s]",e,t.id):ht.debug("replaceTrack() [localId:%s, no track]",e);const s=this._mapSendLocalIdRtpSender.get(e);if(!s)throw new Error("associated RTCRtpSender not found");const r=s.track;await s.replaceTrack(t),r&&this._sendStream.removeTrack(r),t&&this._sendStream.addTrack(t)}async setMaxSpatialLayer(e,t){this._assertSendDirection(),ht.debug("setMaxSpatialLayer() [localId:%s, spatialLayer:%s]",e,t);const s=this._mapSendLocalIdRtpSender.get(e);if(!s)throw new Error("associated RTCRtpSender not found");const r=s.getParameters();r.encodings.forEach(((e,s)=>{e.active=s<=t})),await s.setParameters(r)}async setRtpEncodingParameters(e,t){this._assertSendDirection(),ht.debug("setRtpEncodingParameters() [localId:%s, params:%o]",e,t);const s=this._mapSendLocalIdRtpSender.get(e);if(!s)throw new Error("associated RTCRtpSender not found");const r=s.getParameters();r.encodings.forEach(((e,s)=>{r.encodings[s]=a(a({},e),t)})),await s.setParameters(r)}async getSenderStats(e){this._assertSendDirection();const t=this._mapSendLocalIdRtpSender.get(e);if(!t)throw new Error("associated RTCRtpSender not found");return t.getStats()}async sendDataChannel({ordered:e,maxPacketLifeTime:t,maxRetransmits:s,label:r,protocol:i}){this._assertSendDirection();const a={negotiated:!0,id:this._nextSendSctpStreamId,ordered:e,maxPacketLifeTime:t,maxRetransmitTime:t,maxRetransmits:s,protocol:i};ht.debug("sendDataChannel() [options:%o]",a);const n=this._pc.createDataChannel(r,a);if(this._nextSendSctpStreamId=++this._nextSendSctpStreamId%mt.MIS,!this._hasDataChannelMediaSection){const e=await this._pc.createOffer(),t=$e(e.sdp),s=t.media.find((e=>"application"===e.type));this._transportReady||await this._setupTransport({localDtlsRole:"server",localSdpObject:t}),ht.debug("sendDataChannel() | calling pc.setLocalDescription() [offer:%o]",e),await this._pc.setLocalDescription(e),this._remoteSdp.sendSctpAssociation({offerMediaObject:s});const r={type:"answer",sdp:this._remoteSdp.getSdp()};ht.debug("sendDataChannel() | calling pc.setRemoteDescription() [answer:%o]",r),await this._pc.setRemoteDescription(r),this._hasDataChannelMediaSection=!0}return{dataChannel:n,sctpStreamParameters:{streamId:a.id,ordered:a.ordered,maxPacketLifeTime:a.maxPacketLifeTime,maxRetransmits:a.maxRetransmits}}}async receive({trackId:e,kind:t,rtpParameters:s}){this._assertRecvDirection(),ht.debug("receive() [trackId:%s, kind:%s]",e,t);const r=e,i=t;this._remoteSdp.receive({mid:i,kind:t,offerRtpParameters:s,streamId:s.rtcp.cname,trackId:e});const a={type:"offer",sdp:this._remoteSdp.getSdp()};ht.debug("receive() | calling pc.setRemoteDescription() [offer:%o]",a),await this._pc.setRemoteDescription(a);let n=await this._pc.createAnswer();const o=$e(n.sdp);Ue({offerRtpParameters:s,answerMediaObject:o.media.find((e=>String(e.mid)===i))}),n={type:"answer",sdp:ze(o)},this._transportReady||await this._setupTransport({localDtlsRole:"client",localSdpObject:o}),ht.debug("receive() | calling pc.setLocalDescription() [answer:%o]",n),await this._pc.setLocalDescription(n);const c=this._pc.getReceivers().find((e=>e.track&&e.track.id===r));if(!c)throw new Error("new RTCRtpReceiver not");return this._mapRecvLocalIdInfo.set(r,{mid:i,rtpParameters:s,rtpReceiver:c}),{localId:r,track:c.track,rtpReceiver:c}}async stopReceiving(e){this._assertRecvDirection(),ht.debug("stopReceiving() [localId:%s]",e);const{mid:t,rtpParameters:s}=this._mapRecvLocalIdInfo.get(e)||{};this._mapRecvLocalIdInfo.delete(e),this._remoteSdp.planBStopReceiving({mid:t,offerRtpParameters:s});const r={type:"offer",sdp:this._remoteSdp.getSdp()};ht.debug("stopReceiving() | calling pc.setRemoteDescription() [offer:%o]",r),await this._pc.setRemoteDescription(r);const i=await this._pc.createAnswer();ht.debug("stopReceiving() | calling pc.setLocalDescription() [answer:%o]",i),await this._pc.setLocalDescription(i)}async getReceiverStats(e){this._assertRecvDirection();const{rtpReceiver:t}=this._mapRecvLocalIdInfo.get(e)||{};if(!t)throw new Error("associated RTCRtpReceiver not found");return t.getStats()}async receiveDataChannel({sctpStreamParameters:e,label:t,protocol:s}){this._assertRecvDirection();const{streamId:r,ordered:i,maxPacketLifeTime:a,maxRetransmits:n}=e,o={negotiated:!0,id:r,ordered:i,maxPacketLifeTime:a,maxRetransmitTime:a,maxRetransmits:n,protocol:s};ht.debug("receiveDataChannel() [options:%o]",o);const c=this._pc.createDataChannel(t,o);if(!this._hasDataChannelMediaSection){this._remoteSdp.receiveSctpAssociation({oldDataChannelSpec:!0});const e={type:"offer",sdp:this._remoteSdp.getSdp()};ht.debug("receiveDataChannel() | calling pc.setRemoteDescription() [offer:%o]",e),await this._pc.setRemoteDescription(e);const t=await this._pc.createAnswer();if(!this._transportReady){const e=$e(t.sdp);await this._setupTransport({localDtlsRole:"client",localSdpObject:e})}ht.debug("receiveDataChannel() | calling pc.setRemoteDescription() [answer:%o]",t),await this._pc.setLocalDescription(t),this._hasDataChannelMediaSection=!0}return{dataChannel:c}}async _setupTransport({localDtlsRole:e,localSdpObject:t}){t||(t=$e(this._pc.localDescription.sdp));const s=Ke({sdpObject:t});s.role=e,this._remoteSdp.updateDtlsRole("client"===e?"server":"client"),await this.safeEmitAsPromise("@connect",{dtlsParameters:s}),this._transportReady=!0}_assertSendDirection(){if("send"!==this._direction)throw new Error('method can just be called for handlers with "send" direction')}_assertRecvDirection(){if("recv"!==this._direction)throw new Error('method can just be called for handlers with "recv" direction')}}const ft=new M("Chrome55"),gt={OS:1024,MIS:1024};class _t extends Je{constructor(){super(),this._sendStream=new MediaStream,this._mapSendLocalIdTrack=new Map,this._nextSendLocalId=0,this._mapRecvLocalIdInfo=new Map,this._hasDataChannelMediaSection=!1,this._nextSendSctpStreamId=0,this._transportReady=!1}static createFactory(){return()=>new _t}get name(){return"Chrome55"}close(){if(ft.debug("close()"),this._pc)try{this._pc.close()}catch(e){}}async getNativeRtpCapabilities(){ft.debug("getNativeRtpCapabilities()");const e=new RTCPeerConnection({iceServers:[],iceTransportPolicy:"all",bundlePolicy:"max-bundle",rtcpMuxPolicy:"require",sdpSemantics:"plan-b"});try{const s=await e.createOffer({offerToReceiveAudio:!0,offerToReceiveVideo:!0});try{e.close()}catch(t){}const r=$e(s.sdp);return Ge({sdpObject:r})}catch(t){try{e.close()}catch(s){}throw t}}async getNativeSctpCapabilities(){return ft.debug("getNativeSctpCapabilities()"),{numStreams:gt}}run({direction:e,iceParameters:t,iceCandidates:s,dtlsParameters:r,sctpParameters:i,iceServers:n,iceTransportPolicy:o,additionalSettings:c,proprietaryConstraints:d,extendedRtpCapabilities:p}){ft.debug("run()"),this._direction=e,this._remoteSdp=new tt({iceParameters:t,iceCandidates:s,dtlsParameters:r,sctpParameters:i,planB:!0}),this._sendingRtpParametersByKind={audio:me("audio",p),video:me("video",p)},this._sendingRemoteRtpParametersByKind={audio:ue("audio",p),video:ue("video",p)},this._pc=new RTCPeerConnection(a({iceServers:n||[],iceTransportPolicy:o||"all",bundlePolicy:"max-bundle",rtcpMuxPolicy:"require",sdpSemantics:"plan-b"},c),d),this._pc.addEventListener("iceconnectionstatechange",(()=>{switch(this._pc.iceConnectionState){case"checking":this.emit("@connectionstatechange","connecting");break;case"connected":case"completed":this.emit("@connectionstatechange","connected");break;case"failed":this.emit("@connectionstatechange","failed");break;case"disconnected":this.emit("@connectionstatechange","disconnected");break;case"closed":this.emit("@connectionstatechange","closed")}}))}async updateIceServers(e){ft.debug("updateIceServers()");const t=this._pc.getConfiguration();t.iceServers=e,this._pc.setConfiguration(t)}async restartIce(e){if(ft.debug("restartIce()"),this._remoteSdp.updateIceParameters(e),this._transportReady)if("send"===this._direction){const e=await this._pc.createOffer({iceRestart:!0});ft.debug("restartIce() | calling pc.setLocalDescription() [offer:%o]",e),await this._pc.setLocalDescription(e);const t={type:"answer",sdp:this._remoteSdp.getSdp()};ft.debug("restartIce() | calling pc.setRemoteDescription() [answer:%o]",t),await this._pc.setRemoteDescription(t)}else{const e={type:"offer",sdp:this._remoteSdp.getSdp()};ft.debug("restartIce() | calling pc.setRemoteDescription() [offer:%o]",e),await this._pc.setRemoteDescription(e);const t=await this._pc.createAnswer();ft.debug("restartIce() | calling pc.setLocalDescription() [answer:%o]",t),await this._pc.setLocalDescription(t)}}async getTransportStats(){return this._pc.getStats()}async send({track:e,encodings:t,codecOptions:s,codec:r}){this._assertSendDirection(),ft.debug("send() [kind:%s, track.id:%s]",e.kind,e.id),r&&ft.warn("send() | codec selection is not available in %s handler",this.name),this._sendStream.addTrack(e),this._pc.addStream(this._sendStream);let i,a=await this._pc.createOffer(),n=$e(a.sdp);const o=ee(this._sendingRtpParametersByKind[e.kind],{});o.codecs=fe(o.codecs);const c=ee(this._sendingRemoteRtpParametersByKind[e.kind],{});if(c.codecs=fe(c.codecs),this._transportReady||await this._setupTransport({localDtlsRole:"server",localSdpObject:n}),"video"===e.kind&&t&&t.length>1&&(ft.debug("send() | enabling simulcast"),n=$e(a.sdp),i=n.media.find((e=>"video"===e.type)),lt({offerMediaObject:i,track:e,numStreams:t.length}),a={type:"offer",sdp:ze(n)}),ft.debug("send() | calling pc.setLocalDescription() [offer:%o]",a),await this._pc.setLocalDescription(a),n=$e(this._pc.localDescription.sdp),i=n.media.find((t=>t.type===e.kind)),o.rtcp.cname=qe({offerMediaObject:i}),o.encodings=pt({offerMediaObject:i,track:e}),t)for(let l=0;l<o.encodings.length;++l)t[l]&&Object.assign(o.encodings[l],t[l]);if(o.encodings.length>1&&"video/vp8"===o.codecs[0].mimeType.toLowerCase())for(const l of o.encodings)l.scalabilityMode="S1T3";this._remoteSdp.send({offerMediaObject:i,offerRtpParameters:o,answerRtpParameters:c,codecOptions:s});const d={type:"answer",sdp:this._remoteSdp.getSdp()};ft.debug("send() | calling pc.setRemoteDescription() [answer:%o]",d),await this._pc.setRemoteDescription(d);const p=String(this._nextSendLocalId);return this._nextSendLocalId++,this._mapSendLocalIdTrack.set(p,e),{localId:p,rtpParameters:o}}async stopSending(e){this._assertSendDirection(),ft.debug("stopSending() [localId:%s]",e);const t=this._mapSendLocalIdTrack.get(e);if(!t)throw new Error("track not found");this._mapSendLocalIdTrack.delete(e),this._sendStream.removeTrack(t),this._pc.addStream(this._sendStream);const s=await this._pc.createOffer();ft.debug("stopSending() | calling pc.setLocalDescription() [offer:%o]",s);try{await this._pc.setLocalDescription(s)}catch(i){if(0===this._sendStream.getTracks().length)return void ft.warn("stopSending() | ignoring expected error due no sending tracks: %s",i.toString());throw i}if("stable"===this._pc.signalingState)return;const r={type:"answer",sdp:this._remoteSdp.getSdp()};ft.debug("stopSending() | calling pc.setRemoteDescription() [answer:%o]",r),await this._pc.setRemoteDescription(r)}async replaceTrack(e,t){throw new X("not implemented")}async setMaxSpatialLayer(e,t){throw new X(" not implemented")}async setRtpEncodingParameters(e,t){throw new X("not supported")}async getSenderStats(e){throw new X("not implemented")}async sendDataChannel({ordered:e,maxPacketLifeTime:t,maxRetransmits:s,label:r,protocol:i}){this._assertSendDirection();const a={negotiated:!0,id:this._nextSendSctpStreamId,ordered:e,maxPacketLifeTime:t,maxRetransmitTime:t,maxRetransmits:s,protocol:i};ft.debug("sendDataChannel() [options:%o]",a);const n=this._pc.createDataChannel(r,a);if(this._nextSendSctpStreamId=++this._nextSendSctpStreamId%gt.MIS,!this._hasDataChannelMediaSection){const e=await this._pc.createOffer(),t=$e(e.sdp),s=t.media.find((e=>"application"===e.type));this._transportReady||await this._setupTransport({localDtlsRole:"server",localSdpObject:t}),ft.debug("sendDataChannel() | calling pc.setLocalDescription() [offer:%o]",e),await this._pc.setLocalDescription(e),this._remoteSdp.sendSctpAssociation({offerMediaObject:s});const r={type:"answer",sdp:this._remoteSdp.getSdp()};ft.debug("sendDataChannel() | calling pc.setRemoteDescription() [answer:%o]",r),await this._pc.setRemoteDescription(r),this._hasDataChannelMediaSection=!0}return{dataChannel:n,sctpStreamParameters:{streamId:a.id,ordered:a.ordered,maxPacketLifeTime:a.maxPacketLifeTime,maxRetransmits:a.maxRetransmits}}}async receive({trackId:e,kind:t,rtpParameters:s}){this._assertRecvDirection(),ft.debug("receive() [trackId:%s, kind:%s]",e,t);const r=e,i=t,a=s.rtcp.cname;this._remoteSdp.receive({mid:i,kind:t,offerRtpParameters:s,streamId:a,trackId:e});const n={type:"offer",sdp:this._remoteSdp.getSdp()};ft.debug("receive() | calling pc.setRemoteDescription() [offer:%o]",n),await this._pc.setRemoteDescription(n);let o=await this._pc.createAnswer();const c=$e(o.sdp);Ue({offerRtpParameters:s,answerMediaObject:c.media.find((e=>String(e.mid)===i))}),o={type:"answer",sdp:ze(c)},this._transportReady||await this._setupTransport({localDtlsRole:"client",localSdpObject:c}),ft.debug("receive() | calling pc.setLocalDescription() [answer:%o]",o),await this._pc.setLocalDescription(o);const d=this._pc.getRemoteStreams().find((e=>e.id===a)).getTrackById(r);if(!d)throw new Error("remote track not found");return this._mapRecvLocalIdInfo.set(r,{mid:i,rtpParameters:s}),{localId:r,track:d}}async stopReceiving(e){this._assertRecvDirection(),ft.debug("stopReceiving() [localId:%s]",e);const{mid:t,rtpParameters:s}=this._mapRecvLocalIdInfo.get(e)||{};this._mapRecvLocalIdInfo.delete(e),this._remoteSdp.planBStopReceiving({mid:t,offerRtpParameters:s});const r={type:"offer",sdp:this._remoteSdp.getSdp()};ft.debug("stopReceiving() | calling pc.setRemoteDescription() [offer:%o]",r),await this._pc.setRemoteDescription(r);const i=await this._pc.createAnswer();ft.debug("stopReceiving() | calling pc.setLocalDescription() [answer:%o]",i),await this._pc.setLocalDescription(i)}async getReceiverStats(e){throw new X("not implemented")}async receiveDataChannel({sctpStreamParameters:e,label:t,protocol:s}){this._assertRecvDirection();const{streamId:r,ordered:i,maxPacketLifeTime:a,maxRetransmits:n}=e,o={negotiated:!0,id:r,ordered:i,maxPacketLifeTime:a,maxRetransmitTime:a,maxRetransmits:n,protocol:s};ft.debug("receiveDataChannel() [options:%o]",o);const c=this._pc.createDataChannel(t,o);if(!this._hasDataChannelMediaSection){this._remoteSdp.receiveSctpAssociation({oldDataChannelSpec:!0});const e={type:"offer",sdp:this._remoteSdp.getSdp()};ft.debug("receiveDataChannel() | calling pc.setRemoteDescription() [offer:%o]",e),await this._pc.setRemoteDescription(e);const t=await this._pc.createAnswer();if(!this._transportReady){const e=$e(t.sdp);await this._setupTransport({localDtlsRole:"client",localSdpObject:e})}ft.debug("receiveDataChannel() | calling pc.setRemoteDescription() [answer:%o]",t),await this._pc.setLocalDescription(t),this._hasDataChannelMediaSection=!0}return{dataChannel:c}}async _setupTransport({localDtlsRole:e,localSdpObject:t}){t||(t=$e(this._pc.localDescription.sdp));const s=Ke({sdpObject:t});s.role=e,this._remoteSdp.updateDtlsRole("client"===e?"server":"client"),await this.safeEmitAsPromise("@connect",{dtlsParameters:s}),this._transportReady=!0}_assertSendDirection(){if("send"!==this._direction)throw new Error('method can just be called for handlers with "send" direction')}_assertRecvDirection(){if("recv"!==this._direction)throw new Error('method can just be called for handlers with "recv" direction')}}const wt=new M("Firefox60"),bt={OS:16,MIS:2048};class yt extends Je{constructor(){super(),this._mapMidTransceiver=new Map,this._sendStream=new MediaStream,this._hasDataChannelMediaSection=!1,this._nextSendSctpStreamId=0,this._transportReady=!1}static createFactory(){return()=>new yt}get name(){return"Firefox60"}close(){if(wt.debug("close()"),this._pc)try{this._pc.close()}catch(e){}}async getNativeRtpCapabilities(){wt.debug("getNativeRtpCapabilities()");const e=new RTCPeerConnection({iceServers:[],iceTransportPolicy:"all",bundlePolicy:"max-bundle",rtcpMuxPolicy:"require"}),t=document.createElement("canvas");t.getContext("2d");const s=t.captureStream().getVideoTracks()[0];try{e.addTransceiver("audio",{direction:"sendrecv"});const i=e.addTransceiver(s,{direction:"sendrecv"}),a=i.sender.getParameters(),n=[{rid:"r0",maxBitrate:1e5},{rid:"r1",maxBitrate:5e5}];a.encodings=n,await i.sender.setParameters(a);const o=await e.createOffer();try{t.remove()}catch(r){}try{s.stop()}catch(r){}try{e.close()}catch(r){}const c=$e(o.sdp);return Ge({sdpObject:c})}catch(r){try{t.remove()}catch(i){}try{s.stop()}catch(i){}try{e.close()}catch(i){}throw r}}async getNativeSctpCapabilities(){return wt.debug("getNativeSctpCapabilities()"),{numStreams:bt}}run({direction:e,iceParameters:t,iceCandidates:s,dtlsParameters:r,sctpParameters:i,iceServers:n,iceTransportPolicy:o,additionalSettings:c,proprietaryConstraints:d,extendedRtpCapabilities:p}){wt.debug("run()"),this._direction=e,this._remoteSdp=new tt({iceParameters:t,iceCandidates:s,dtlsParameters:r,sctpParameters:i}),this._sendingRtpParametersByKind={audio:me("audio",p),video:me("video",p)},this._sendingRemoteRtpParametersByKind={audio:ue("audio",p),video:ue("video",p)},this._pc=new RTCPeerConnection(a({iceServers:n||[],iceTransportPolicy:o||"all",bundlePolicy:"max-bundle",rtcpMuxPolicy:"require"},c),d),this._pc.addEventListener("iceconnectionstatechange",(()=>{switch(this._pc.iceConnectionState){case"checking":this.emit("@connectionstatechange","connecting");break;case"connected":case"completed":this.emit("@connectionstatechange","connected");break;case"failed":this.emit("@connectionstatechange","failed");break;case"disconnected":this.emit("@connectionstatechange","disconnected");break;case"closed":this.emit("@connectionstatechange","closed")}}))}async updateIceServers(e){throw new X("not supported")}async restartIce(e){if(wt.debug("restartIce()"),this._remoteSdp.updateIceParameters(e),this._transportReady)if("send"===this._direction){const e=await this._pc.createOffer({iceRestart:!0});wt.debug("restartIce() | calling pc.setLocalDescription() [offer:%o]",e),await this._pc.setLocalDescription(e);const t={type:"answer",sdp:this._remoteSdp.getSdp()};wt.debug("restartIce() | calling pc.setRemoteDescription() [answer:%o]",t),await this._pc.setRemoteDescription(t)}else{const e={type:"offer",sdp:this._remoteSdp.getSdp()};wt.debug("restartIce() | calling pc.setRemoteDescription() [offer:%o]",e),await this._pc.setRemoteDescription(e);const t=await this._pc.createAnswer();wt.debug("restartIce() | calling pc.setLocalDescription() [answer:%o]",t),await this._pc.setLocalDescription(t)}}async getTransportStats(){return this._pc.getStats()}async send({track:e,encodings:t,codecOptions:s,codec:r}){this._assertSendDirection(),wt.debug("send() [kind:%s, track.id:%s]",e.kind,e.id),t&&(t=ee(t,[])).length>1&&(t.forEach(((e,t)=>{e.rid=`r${t}`})),t.reverse());const i=ee(this._sendingRtpParametersByKind[e.kind],{});i.codecs=fe(i.codecs,r);const a=ee(this._sendingRemoteRtpParametersByKind[e.kind],{});a.codecs=fe(a.codecs,r);const n=this._pc.addTransceiver(e,{direction:"sendonly",streams:[this._sendStream]});if(t){const e=n.sender.getParameters();e.encodings=t,await n.sender.setParameters(e)}const o=await this._pc.createOffer();let c=$e(o.sdp);this._transportReady||await this._setupTransport({localDtlsRole:"client",localSdpObject:c}),wt.debug("send() | calling pc.setLocalDescription() [offer:%o]",o),await this._pc.setLocalDescription(o);const d=n.mid;i.mid=d,c=$e(this._pc.localDescription.sdp);const p=c.media[c.media.length-1];if(i.rtcp.cname=qe({offerMediaObject:p}),t)if(1===t.length){const e=We({offerMediaObject:p});Object.assign(e[0],t[0]),i.encodings=e}else i.encodings=t.reverse();else i.encodings=We({offerMediaObject:p});if(i.encodings.length>1&&("video/vp8"===i.codecs[0].mimeType.toLowerCase()||"video/h264"===i.codecs[0].mimeType.toLowerCase()))for(const h of i.encodings)h.scalabilityMode="S1T3";this._remoteSdp.send({offerMediaObject:p,offerRtpParameters:i,answerRtpParameters:a,codecOptions:s,extmapAllowMixed:!0});const l={type:"answer",sdp:this._remoteSdp.getSdp()};return wt.debug("send() | calling pc.setRemoteDescription() [answer:%o]",l),await this._pc.setRemoteDescription(l),this._mapMidTransceiver.set(d,n),{localId:d,rtpParameters:i,rtpSender:n.sender}}async stopSending(e){wt.debug("stopSending() [localId:%s]",e);const t=this._mapMidTransceiver.get(e);if(!t)throw new Error("associated transceiver not found");t.sender.replaceTrack(null),this._pc.removeTrack(t.sender),this._remoteSdp.disableMediaSection(t.mid);const s=await this._pc.createOffer();wt.debug("stopSending() | calling pc.setLocalDescription() [offer:%o]",s),await this._pc.setLocalDescription(s);const r={type:"answer",sdp:this._remoteSdp.getSdp()};wt.debug("stopSending() | calling pc.setRemoteDescription() [answer:%o]",r),await this._pc.setRemoteDescription(r)}async replaceTrack(e,t){this._assertSendDirection(),t?wt.debug("replaceTrack() [localId:%s, track.id:%s]",e,t.id):wt.debug("replaceTrack() [localId:%s, no track]",e);const s=this._mapMidTransceiver.get(e);if(!s)throw new Error("associated RTCRtpTransceiver not found");await s.sender.replaceTrack(t)}async setMaxSpatialLayer(e,t){this._assertSendDirection(),wt.debug("setMaxSpatialLayer() [localId:%s, spatialLayer:%s]",e,t);const s=this._mapMidTransceiver.get(e);if(!s)throw new Error("associated transceiver not found");const r=s.sender.getParameters();t=r.encodings.length-1-t,r.encodings.forEach(((e,s)=>{e.active=s>=t})),await s.sender.setParameters(r)}async setRtpEncodingParameters(e,t){this._assertSendDirection(),wt.debug("setRtpEncodingParameters() [localId:%s, params:%o]",e,t);const s=this._mapMidTransceiver.get(e);if(!s)throw new Error("associated RTCRtpTransceiver not found");const r=s.sender.getParameters();r.encodings.forEach(((e,s)=>{r.encodings[s]=a(a({},e),t)})),await s.sender.setParameters(r)}async getSenderStats(e){this._assertSendDirection();const t=this._mapMidTransceiver.get(e);if(!t)throw new Error("associated RTCRtpTransceiver not found");return t.sender.getStats()}async sendDataChannel({ordered:e,maxPacketLifeTime:t,maxRetransmits:s,label:r,protocol:i}){this._assertSendDirection();const a={negotiated:!0,id:this._nextSendSctpStreamId,ordered:e,maxPacketLifeTime:t,maxRetransmits:s,protocol:i};wt.debug("sendDataChannel() [options:%o]",a);const n=this._pc.createDataChannel(r,a);if(this._nextSendSctpStreamId=++this._nextSendSctpStreamId%bt.MIS,!this._hasDataChannelMediaSection){const e=await this._pc.createOffer(),t=$e(e.sdp),s=t.media.find((e=>"application"===e.type));this._transportReady||await this._setupTransport({localDtlsRole:"server",localSdpObject:t}),wt.debug("sendDataChannel() | calling pc.setLocalDescription() [offer:%o]",e),await this._pc.setLocalDescription(e),this._remoteSdp.sendSctpAssociation({offerMediaObject:s});const r={type:"answer",sdp:this._remoteSdp.getSdp()};wt.debug("sendDataChannel() | calling pc.setRemoteDescription() [answer:%o]",r),await this._pc.setRemoteDescription(r),this._hasDataChannelMediaSection=!0}return{dataChannel:n,sctpStreamParameters:{streamId:a.id,ordered:a.ordered,maxPacketLifeTime:a.maxPacketLifeTime,maxRetransmits:a.maxRetransmits}}}async receive({trackId:e,kind:t,rtpParameters:s}){this._assertRecvDirection(),wt.debug("receive() [trackId:%s, kind:%s]",e,t);const r=s.mid||String(this._mapMidTransceiver.size);this._remoteSdp.receive({mid:r,kind:t,offerRtpParameters:s,streamId:s.rtcp.cname,trackId:e});const i={type:"offer",sdp:this._remoteSdp.getSdp()};wt.debug("receive() | calling pc.setRemoteDescription() [offer:%o]",i),await this._pc.setRemoteDescription(i);let a=await this._pc.createAnswer();const n=$e(a.sdp);Ue({offerRtpParameters:s,answerMediaObject:n.media.find((e=>String(e.mid)===r))}),a={type:"answer",sdp:ze(n)},this._transportReady||await this._setupTransport({localDtlsRole:"client",localSdpObject:n}),wt.debug("receive() | calling pc.setLocalDescription() [answer:%o]",a),await this._pc.setLocalDescription(a);const o=this._pc.getTransceivers().find((e=>e.mid===r));if(!o)throw new Error("new RTCRtpTransceiver not found");return this._mapMidTransceiver.set(r,o),{localId:r,track:o.receiver.track,rtpReceiver:o.receiver}}async stopReceiving(e){this._assertRecvDirection(),wt.debug("stopReceiving() [localId:%s]",e);const t=this._mapMidTransceiver.get(e);if(!t)throw new Error("associated RTCRtpTransceiver not found");this._remoteSdp.closeMediaSection(t.mid);const s={type:"offer",sdp:this._remoteSdp.getSdp()};wt.debug("stopReceiving() | calling pc.setRemoteDescription() [offer:%o]",s),await this._pc.setRemoteDescription(s);const r=await this._pc.createAnswer();wt.debug("stopReceiving() | calling pc.setLocalDescription() [answer:%o]",r),await this._pc.setLocalDescription(r)}async getReceiverStats(e){this._assertRecvDirection();const t=this._mapMidTransceiver.get(e);if(!t)throw new Error("associated RTCRtpTransceiver not found");return t.receiver.getStats()}async receiveDataChannel({sctpStreamParameters:e,label:t,protocol:s}){this._assertRecvDirection();const{streamId:r,ordered:i,maxPacketLifeTime:a,maxRetransmits:n}=e,o={negotiated:!0,id:r,ordered:i,maxPacketLifeTime:a,maxRetransmits:n,protocol:s};wt.debug("receiveDataChannel() [options:%o]",o);const c=this._pc.createDataChannel(t,o);if(!this._hasDataChannelMediaSection){this._remoteSdp.receiveSctpAssociation();const e={type:"offer",sdp:this._remoteSdp.getSdp()};wt.debug("receiveDataChannel() | calling pc.setRemoteDescription() [offer:%o]",e),await this._pc.setRemoteDescription(e);const t=await this._pc.createAnswer();if(!this._transportReady){const e=$e(t.sdp);await this._setupTransport({localDtlsRole:"client",localSdpObject:e})}wt.debug("receiveDataChannel() | calling pc.setRemoteDescription() [answer:%o]",t),await this._pc.setLocalDescription(t),this._hasDataChannelMediaSection=!0}return{dataChannel:c}}async _setupTransport({localDtlsRole:e,localSdpObject:t}){t||(t=$e(this._pc.localDescription.sdp));const s=Ke({sdpObject:t});s.role=e,this._remoteSdp.updateDtlsRole("client"===e?"server":"client"),await this.safeEmitAsPromise("@connect",{dtlsParameters:s}),this._transportReady=!0}_assertSendDirection(){if("send"!==this._direction)throw new Error('method can just be called for handlers with "send" direction')}_assertRecvDirection(){if("recv"!==this._direction)throw new Error('method can just be called for handlers with "recv" direction')}}const vt=new M("Safari12"),St={OS:1024,MIS:1024};class Rt extends Je{constructor(){super(),this._mapMidTransceiver=new Map,this._sendStream=new MediaStream,this._hasDataChannelMediaSection=!1,this._nextSendSctpStreamId=0,this._transportReady=!1}static createFactory(){return()=>new Rt}get name(){return"Safari12"}close(){if(vt.debug("close()"),this._pc)try{this._pc.close()}catch(e){}}async getNativeRtpCapabilities(){vt.debug("getNativeRtpCapabilities()");const e=new RTCPeerConnection({iceServers:[],iceTransportPolicy:"all",bundlePolicy:"max-bundle",rtcpMuxPolicy:"require"});try{e.addTransceiver("audio"),e.addTransceiver("video");const s=await e.createOffer();try{e.close()}catch(t){}const r=$e(s.sdp);return Ge({sdpObject:r})}catch(t){try{e.close()}catch(s){}throw t}}async getNativeSctpCapabilities(){return vt.debug("getNativeSctpCapabilities()"),{numStreams:St}}run({direction:e,iceParameters:t,iceCandidates:s,dtlsParameters:r,sctpParameters:i,iceServers:n,iceTransportPolicy:o,additionalSettings:c,proprietaryConstraints:d,extendedRtpCapabilities:p}){vt.debug("run()"),this._direction=e,this._remoteSdp=new tt({iceParameters:t,iceCandidates:s,dtlsParameters:r,sctpParameters:i}),this._sendingRtpParametersByKind={audio:me("audio",p),video:me("video",p)},this._sendingRemoteRtpParametersByKind={audio:ue("audio",p),video:ue("video",p)},this._pc=new RTCPeerConnection(a({iceServers:n||[],iceTransportPolicy:o||"all",bundlePolicy:"max-bundle",rtcpMuxPolicy:"require"},c),d),this._pc.addEventListener("iceconnectionstatechange",(()=>{switch(this._pc.iceConnectionState){case"checking":this.emit("@connectionstatechange","connecting");break;case"connected":case"completed":this.emit("@connectionstatechange","connected");break;case"failed":this.emit("@connectionstatechange","failed");break;case"disconnected":this.emit("@connectionstatechange","disconnected");break;case"closed":this.emit("@connectionstatechange","closed")}}))}async updateIceServers(e){vt.debug("updateIceServers()");const t=this._pc.getConfiguration();t.iceServers=e,this._pc.setConfiguration(t)}async restartIce(e){if(vt.debug("restartIce()"),this._remoteSdp.updateIceParameters(e),this._transportReady)if("send"===this._direction){const e=await this._pc.createOffer({iceRestart:!0});vt.debug("restartIce() | calling pc.setLocalDescription() [offer:%o]",e),await this._pc.setLocalDescription(e);const t={type:"answer",sdp:this._remoteSdp.getSdp()};vt.debug("restartIce() | calling pc.setRemoteDescription() [answer:%o]",t),await this._pc.setRemoteDescription(t)}else{const e={type:"offer",sdp:this._remoteSdp.getSdp()};vt.debug("restartIce() | calling pc.setRemoteDescription() [offer:%o]",e),await this._pc.setRemoteDescription(e);const t=await this._pc.createAnswer();vt.debug("restartIce() | calling pc.setLocalDescription() [answer:%o]",t),await this._pc.setLocalDescription(t)}}async getTransportStats(){return this._pc.getStats()}async send({track:e,encodings:t,codecOptions:s,codec:r}){this._assertSendDirection(),vt.debug("send() [kind:%s, track.id:%s]",e.kind,e.id);const i=ee(this._sendingRtpParametersByKind[e.kind],{});i.codecs=fe(i.codecs,r);const a=ee(this._sendingRemoteRtpParametersByKind[e.kind],{});a.codecs=fe(a.codecs,r);const n=this._remoteSdp.getNextMediaSectionIdx(),o=this._pc.addTransceiver(e,{direction:"sendonly",streams:[this._sendStream]});let c,d=await this._pc.createOffer(),p=$e(d.sdp);this._transportReady||await this._setupTransport({localDtlsRole:"server",localSdpObject:p}),t&&t.length>1&&(vt.debug("send() | enabling legacy simulcast"),p=$e(d.sdp),c=p.media[n.idx],Qe({offerMediaObject:c,numStreams:t.length}),d={type:"offer",sdp:ze(p)}),vt.debug("send() | calling pc.setLocalDescription() [offer:%o]",d),await this._pc.setLocalDescription(d);const l=o.mid;if(i.mid=l,p=$e(this._pc.localDescription.sdp),c=p.media[n.idx],i.rtcp.cname=qe({offerMediaObject:c}),i.encodings=We({offerMediaObject:c}),t)for(let m=0;m<i.encodings.length;++m)t[m]&&Object.assign(i.encodings[m],t[m]);if(i.encodings.length>1&&("video/vp8"===i.codecs[0].mimeType.toLowerCase()||"video/h264"===i.codecs[0].mimeType.toLowerCase()))for(const m of i.encodings)m.scalabilityMode="S1T3";this._remoteSdp.send({offerMediaObject:c,reuseMid:n.reuseMid,offerRtpParameters:i,answerRtpParameters:a,codecOptions:s});const h={type:"answer",sdp:this._remoteSdp.getSdp()};return vt.debug("send() | calling pc.setRemoteDescription() [answer:%o]",h),await this._pc.setRemoteDescription(h),this._mapMidTransceiver.set(l,o),{localId:l,rtpParameters:i,rtpSender:o.sender}}async stopSending(e){this._assertSendDirection(),vt.debug("stopSending() [localId:%s]",e);const t=this._mapMidTransceiver.get(e);if(!t)throw new Error("associated RTCRtpTransceiver not found");t.sender.replaceTrack(null),this._pc.removeTrack(t.sender),this._remoteSdp.closeMediaSection(t.mid);const s=await this._pc.createOffer();vt.debug("stopSending() | calling pc.setLocalDescription() [offer:%o]",s),await this._pc.setLocalDescription(s);const r={type:"answer",sdp:this._remoteSdp.getSdp()};vt.debug("stopSending() | calling pc.setRemoteDescription() [answer:%o]",r),await this._pc.setRemoteDescription(r)}async replaceTrack(e,t){this._assertSendDirection(),t?vt.debug("replaceTrack() [localId:%s, track.id:%s]",e,t.id):vt.debug("replaceTrack() [localId:%s, no track]",e);const s=this._mapMidTransceiver.get(e);if(!s)throw new Error("associated RTCRtpTransceiver not found");await s.sender.replaceTrack(t)}async setMaxSpatialLayer(e,t){this._assertSendDirection(),vt.debug("setMaxSpatialLayer() [localId:%s, spatialLayer:%s]",e,t);const s=this._mapMidTransceiver.get(e);if(!s)throw new Error("associated RTCRtpTransceiver not found");const r=s.sender.getParameters();r.encodings.forEach(((e,s)=>{e.active=s<=t})),await s.sender.setParameters(r)}async setRtpEncodingParameters(e,t){this._assertSendDirection(),vt.debug("setRtpEncodingParameters() [localId:%s, params:%o]",e,t);const s=this._mapMidTransceiver.get(e);if(!s)throw new Error("associated RTCRtpTransceiver not found");const r=s.sender.getParameters();r.encodings.forEach(((e,s)=>{r.encodings[s]=a(a({},e),t)})),await s.sender.setParameters(r)}async getSenderStats(e){this._assertSendDirection();const t=this._mapMidTransceiver.get(e);if(!t)throw new Error("associated RTCRtpTransceiver not found");return t.sender.getStats()}async sendDataChannel({ordered:e,maxPacketLifeTime:t,maxRetransmits:s,label:r,protocol:i}){this._assertSendDirection();const a={negotiated:!0,id:this._nextSendSctpStreamId,ordered:e,maxPacketLifeTime:t,maxRetransmits:s,protocol:i};vt.debug("sendDataChannel() [options:%o]",a);const n=this._pc.createDataChannel(r,a);if(this._nextSendSctpStreamId=++this._nextSendSctpStreamId%St.MIS,!this._hasDataChannelMediaSection){const e=await this._pc.createOffer(),t=$e(e.sdp),s=t.media.find((e=>"application"===e.type));this._transportReady||await this._setupTransport({localDtlsRole:"server",localSdpObject:t}),vt.debug("sendDataChannel() | calling pc.setLocalDescription() [offer:%o]",e),await this._pc.setLocalDescription(e),this._remoteSdp.sendSctpAssociation({offerMediaObject:s});const r={type:"answer",sdp:this._remoteSdp.getSdp()};vt.debug("sendDataChannel() | calling pc.setRemoteDescription() [answer:%o]",r),await this._pc.setRemoteDescription(r),this._hasDataChannelMediaSection=!0}return{dataChannel:n,sctpStreamParameters:{streamId:a.id,ordered:a.ordered,maxPacketLifeTime:a.maxPacketLifeTime,maxRetransmits:a.maxRetransmits}}}async receive({trackId:e,kind:t,rtpParameters:s}){this._assertRecvDirection(),vt.debug("receive() [trackId:%s, kind:%s]",e,t);const r=s.mid||String(this._mapMidTransceiver.size);this._remoteSdp.receive({mid:r,kind:t,offerRtpParameters:s,streamId:s.rtcp.cname,trackId:e});const i={type:"offer",sdp:this._remoteSdp.getSdp()};vt.debug("receive() | calling pc.setRemoteDescription() [offer:%o]",i),await this._pc.setRemoteDescription(i);let a=await this._pc.createAnswer();const n=$e(a.sdp);Ue({offerRtpParameters:s,answerMediaObject:n.media.find((e=>String(e.mid)===r))}),a={type:"answer",sdp:ze(n)},this._transportReady||await this._setupTransport({localDtlsRole:"client",localSdpObject:n}),vt.debug("receive() | calling pc.setLocalDescription() [answer:%o]",a),await this._pc.setLocalDescription(a);const o=this._pc.getTransceivers().find((e=>e.mid===r));if(!o)throw new Error("new RTCRtpTransceiver not found");return this._mapMidTransceiver.set(r,o),{localId:r,track:o.receiver.track,rtpReceiver:o.receiver}}async stopReceiving(e){this._assertRecvDirection(),vt.debug("stopReceiving() [localId:%s]",e);const t=this._mapMidTransceiver.get(e);if(!t)throw new Error("associated RTCRtpTransceiver not found");this._remoteSdp.closeMediaSection(t.mid);const s={type:"offer",sdp:this._remoteSdp.getSdp()};vt.debug("stopReceiving() | calling pc.setRemoteDescription() [offer:%o]",s),await this._pc.setRemoteDescription(s);const r=await this._pc.createAnswer();vt.debug("stopReceiving() | calling pc.setLocalDescription() [answer:%o]",r),await this._pc.setLocalDescription(r)}async getReceiverStats(e){this._assertRecvDirection();const t=this._mapMidTransceiver.get(e);if(!t)throw new Error("associated RTCRtpTransceiver not found");return t.receiver.getStats()}async receiveDataChannel({sctpStreamParameters:e,label:t,protocol:s}){this._assertRecvDirection();const{streamId:r,ordered:i,maxPacketLifeTime:a,maxRetransmits:n}=e,o={negotiated:!0,id:r,ordered:i,maxPacketLifeTime:a,maxRetransmits:n,protocol:s};vt.debug("receiveDataChannel() [options:%o]",o);const c=this._pc.createDataChannel(t,o);if(!this._hasDataChannelMediaSection){this._remoteSdp.receiveSctpAssociation();const e={type:"offer",sdp:this._remoteSdp.getSdp()};vt.debug("receiveDataChannel() | calling pc.setRemoteDescription() [offer:%o]",e),await this._pc.setRemoteDescription(e);const t=await this._pc.createAnswer();if(!this._transportReady){const e=$e(t.sdp);await this._setupTransport({localDtlsRole:"client",localSdpObject:e})}vt.debug("receiveDataChannel() | calling pc.setRemoteDescription() [answer:%o]",t),await this._pc.setLocalDescription(t),this._hasDataChannelMediaSection=!0}return{dataChannel:c}}async _setupTransport({localDtlsRole:e,localSdpObject:t}){t||(t=$e(this._pc.localDescription.sdp));const s=Ke({sdpObject:t});s.role=e,this._remoteSdp.updateDtlsRole("client"===e?"server":"client"),await this.safeEmitAsPromise("@connect",{dtlsParameters:s}),this._transportReady=!0}_assertSendDirection(){if("send"!==this._direction)throw new Error('method can just be called for handlers with "send" direction')}_assertRecvDirection(){if("recv"!==this._direction)throw new Error('method can just be called for handlers with "recv" direction')}}const Tt=new M("Safari11"),Ct={OS:1024,MIS:1024};class Pt extends Je{constructor(){super(),this._sendStream=new MediaStream,this._mapSendLocalIdRtpSender=new Map,this._nextSendLocalId=0,this._mapRecvLocalIdInfo=new Map,this._hasDataChannelMediaSection=!1,this._nextSendSctpStreamId=0,this._transportReady=!1}static createFactory(){return()=>new Pt}get name(){return"Safari11"}close(){if(Tt.debug("close()"),this._pc)try{this._pc.close()}catch(e){}}async getNativeRtpCapabilities(){Tt.debug("getNativeRtpCapabilities()");const e=new RTCPeerConnection({iceServers:[],iceTransportPolicy:"all",bundlePolicy:"max-bundle",rtcpMuxPolicy:"require",sdpSemantics:"plan-b"});try{const s=await e.createOffer({offerToReceiveAudio:!0,offerToReceiveVideo:!0});try{e.close()}catch(t){}const r=$e(s.sdp);return Ge({sdpObject:r})}catch(t){try{e.close()}catch(s){}throw t}}async getNativeSctpCapabilities(){return Tt.debug("getNativeSctpCapabilities()"),{numStreams:Ct}}run({direction:e,iceParameters:t,iceCandidates:s,dtlsParameters:r,sctpParameters:i,iceServers:n,iceTransportPolicy:o,additionalSettings:c,proprietaryConstraints:d,extendedRtpCapabilities:p}){Tt.debug("run()"),this._direction=e,this._remoteSdp=new tt({iceParameters:t,iceCandidates:s,dtlsParameters:r,sctpParameters:i,planB:!0}),this._sendingRtpParametersByKind={audio:me("audio",p),video:me("video",p)},this._sendingRemoteRtpParametersByKind={audio:ue("audio",p),video:ue("video",p)},this._pc=new RTCPeerConnection(a({iceServers:n||[],iceTransportPolicy:o||"all",bundlePolicy:"max-bundle",rtcpMuxPolicy:"require"},c),d),this._pc.addEventListener("iceconnectionstatechange",(()=>{switch(this._pc.iceConnectionState){case"checking":this.emit("@connectionstatechange","connecting");break;case"connected":case"completed":this.emit("@connectionstatechange","connected");break;case"failed":this.emit("@connectionstatechange","failed");break;case"disconnected":this.emit("@connectionstatechange","disconnected");break;case"closed":this.emit("@connectionstatechange","closed")}}))}async updateIceServers(e){Tt.debug("updateIceServers()");const t=this._pc.getConfiguration();t.iceServers=e,this._pc.setConfiguration(t)}async restartIce(e){if(Tt.debug("restartIce()"),this._remoteSdp.updateIceParameters(e),this._transportReady)if("send"===this._direction){const e=await this._pc.createOffer({iceRestart:!0});Tt.debug("restartIce() | calling pc.setLocalDescription() [offer:%o]",e),await this._pc.setLocalDescription(e);const t={type:"answer",sdp:this._remoteSdp.getSdp()};Tt.debug("restartIce() | calling pc.setRemoteDescription() [answer:%o]",t),await this._pc.setRemoteDescription(t)}else{const e={type:"offer",sdp:this._remoteSdp.getSdp()};Tt.debug("restartIce() | calling pc.setRemoteDescription() [offer:%o]",e),await this._pc.setRemoteDescription(e);const t=await this._pc.createAnswer();Tt.debug("restartIce() | calling pc.setLocalDescription() [answer:%o]",t),await this._pc.setLocalDescription(t)}}async getTransportStats(){return this._pc.getStats()}async send({track:e,encodings:t,codecOptions:s,codec:r}){this._assertSendDirection(),Tt.debug("send() [kind:%s, track.id:%s]",e.kind,e.id),r&&Tt.warn("send() | codec selection is not available in %s handler",this.name),this._sendStream.addTrack(e),this._pc.addTrack(e,this._sendStream);let i,a=await this._pc.createOffer(),n=$e(a.sdp);const o=ee(this._sendingRtpParametersByKind[e.kind],{});o.codecs=fe(o.codecs);const c=ee(this._sendingRemoteRtpParametersByKind[e.kind],{});if(c.codecs=fe(c.codecs),this._transportReady||await this._setupTransport({localDtlsRole:"server",localSdpObject:n}),"video"===e.kind&&t&&t.length>1&&(Tt.debug("send() | enabling simulcast"),n=$e(a.sdp),i=n.media.find((e=>"video"===e.type)),lt({offerMediaObject:i,track:e,numStreams:t.length}),a={type:"offer",sdp:ze(n)}),Tt.debug("send() | calling pc.setLocalDescription() [offer:%o]",a),await this._pc.setLocalDescription(a),n=$e(this._pc.localDescription.sdp),i=n.media.find((t=>t.type===e.kind)),o.rtcp.cname=qe({offerMediaObject:i}),o.encodings=pt({offerMediaObject:i,track:e}),t)for(let h=0;h<o.encodings.length;++h)t[h]&&Object.assign(o.encodings[h],t[h]);if(o.encodings.length>1&&"video/vp8"===o.codecs[0].mimeType.toLowerCase())for(const h of o.encodings)h.scalabilityMode="S1T3";this._remoteSdp.send({offerMediaObject:i,offerRtpParameters:o,answerRtpParameters:c,codecOptions:s});const d={type:"answer",sdp:this._remoteSdp.getSdp()};Tt.debug("send() | calling pc.setRemoteDescription() [answer:%o]",d),await this._pc.setRemoteDescription(d);const p=String(this._nextSendLocalId);this._nextSendLocalId++;const l=this._pc.getSenders().find((t=>t.track===e));return this._mapSendLocalIdRtpSender.set(p,l),{localId:p,rtpParameters:o,rtpSender:l}}async stopSending(e){this._assertSendDirection();const t=this._mapSendLocalIdRtpSender.get(e);if(!t)throw new Error("associated RTCRtpSender not found");t.track&&this._sendStream.removeTrack(t.track),this._mapSendLocalIdRtpSender.delete(e);const s=await this._pc.createOffer();Tt.debug("stopSending() | calling pc.setLocalDescription() [offer:%o]",s);try{await this._pc.setLocalDescription(s)}catch(i){if(0===this._sendStream.getTracks().length)return void Tt.warn("stopSending() | ignoring expected error due no sending tracks: %s",i.toString());throw i}if("stable"===this._pc.signalingState)return;const r={type:"answer",sdp:this._remoteSdp.getSdp()};Tt.debug("stopSending() | calling pc.setRemoteDescription() [answer:%o]",r),await this._pc.setRemoteDescription(r)}async replaceTrack(e,t){this._assertSendDirection(),t?Tt.debug("replaceTrack() [localId:%s, track.id:%s]",e,t.id):Tt.debug("replaceTrack() [localId:%s, no track]",e);const s=this._mapSendLocalIdRtpSender.get(e);if(!s)throw new Error("associated RTCRtpSender not found");const r=s.track;await s.replaceTrack(t),r&&this._sendStream.removeTrack(r),t&&this._sendStream.addTrack(t)}async setMaxSpatialLayer(e,t){this._assertSendDirection(),Tt.debug("setMaxSpatialLayer() [localId:%s, spatialLayer:%s]",e,t);const s=this._mapSendLocalIdRtpSender.get(e);if(!s)throw new Error("associated RTCRtpSender not found");const r=s.getParameters();r.encodings.forEach(((e,s)=>{e.active=s<=t})),await s.setParameters(r)}async setRtpEncodingParameters(e,t){this._assertSendDirection(),Tt.debug("setRtpEncodingParameters() [localId:%s, params:%o]",e,t);const s=this._mapSendLocalIdRtpSender.get(e);if(!s)throw new Error("associated RTCRtpSender not found");const r=s.getParameters();r.encodings.forEach(((e,s)=>{r.encodings[s]=a(a({},e),t)})),await s.setParameters(r)}async getSenderStats(e){this._assertSendDirection();const t=this._mapSendLocalIdRtpSender.get(e);if(!t)throw new Error("associated RTCRtpSender not found");return t.getStats()}async sendDataChannel({ordered:e,maxPacketLifeTime:t,maxRetransmits:s,label:r,protocol:i}){this._assertSendDirection();const a={negotiated:!0,id:this._nextSendSctpStreamId,ordered:e,maxPacketLifeTime:t,maxRetransmits:s,protocol:i};Tt.debug("sendDataChannel() [options:%o]",a);const n=this._pc.createDataChannel(r,a);if(this._nextSendSctpStreamId=++this._nextSendSctpStreamId%Ct.MIS,!this._hasDataChannelMediaSection){const e=await this._pc.createOffer(),t=$e(e.sdp),s=t.media.find((e=>"application"===e.type));this._transportReady||await this._setupTransport({localDtlsRole:"server",localSdpObject:t}),Tt.debug("sendDataChannel() | calling pc.setLocalDescription() [offer:%o]",e),await this._pc.setLocalDescription(e),this._remoteSdp.sendSctpAssociation({offerMediaObject:s});const r={type:"answer",sdp:this._remoteSdp.getSdp()};Tt.debug("sendDataChannel() | calling pc.setRemoteDescription() [answer:%o]",r),await this._pc.setRemoteDescription(r),this._hasDataChannelMediaSection=!0}return{dataChannel:n,sctpStreamParameters:{streamId:a.id,ordered:a.ordered,maxPacketLifeTime:a.maxPacketLifeTime,maxRetransmits:a.maxRetransmits}}}async receive({trackId:e,kind:t,rtpParameters:s}){this._assertRecvDirection(),Tt.debug("receive() [trackId:%s, kind:%s]",e,t);const r=e,i=t;this._remoteSdp.receive({mid:i,kind:t,offerRtpParameters:s,streamId:s.rtcp.cname,trackId:e});const a={type:"offer",sdp:this._remoteSdp.getSdp()};Tt.debug("receive() | calling pc.setRemoteDescription() [offer:%o]",a),await this._pc.setRemoteDescription(a);let n=await this._pc.createAnswer();const o=$e(n.sdp);Ue({offerRtpParameters:s,answerMediaObject:o.media.find((e=>String(e.mid)===i))}),n={type:"answer",sdp:ze(o)},this._transportReady||await this._setupTransport({localDtlsRole:"client",localSdpObject:o}),Tt.debug("receive() | calling pc.setLocalDescription() [answer:%o]",n),await this._pc.setLocalDescription(n);const c=this._pc.getReceivers().find((e=>e.track&&e.track.id===r));if(!c)throw new Error("new RTCRtpReceiver not");return this._mapRecvLocalIdInfo.set(r,{mid:i,rtpParameters:s,rtpReceiver:c}),{localId:r,track:c.track,rtpReceiver:c}}async stopReceiving(e){this._assertRecvDirection(),Tt.debug("stopReceiving() [localId:%s]",e);const{mid:t,rtpParameters:s}=this._mapRecvLocalIdInfo.get(e)||{};this._mapRecvLocalIdInfo.delete(e),this._remoteSdp.planBStopReceiving({mid:t,offerRtpParameters:s});const r={type:"offer",sdp:this._remoteSdp.getSdp()};Tt.debug("stopReceiving() | calling pc.setRemoteDescription() [offer:%o]",r),await this._pc.setRemoteDescription(r);const i=await this._pc.createAnswer();Tt.debug("stopReceiving() | calling pc.setLocalDescription() [answer:%o]",i),await this._pc.setLocalDescription(i)}async getReceiverStats(e){this._assertRecvDirection();const{rtpReceiver:t}=this._mapRecvLocalIdInfo.get(e)||{};if(!t)throw new Error("associated RTCRtpReceiver not found");return t.getStats()}async receiveDataChannel({sctpStreamParameters:e,label:t,protocol:s}){this._assertRecvDirection();const{streamId:r,ordered:i,maxPacketLifeTime:a,maxRetransmits:n}=e,o={negotiated:!0,id:r,ordered:i,maxPacketLifeTime:a,maxRetransmits:n,protocol:s};Tt.debug("receiveDataChannel() [options:%o]",o);const c=this._pc.createDataChannel(t,o);if(!this._hasDataChannelMediaSection){this._remoteSdp.receiveSctpAssociation({oldDataChannelSpec:!0});const e={type:"offer",sdp:this._remoteSdp.getSdp()};Tt.debug("receiveDataChannel() | calling pc.setRemoteDescription() [offer:%o]",e),await this._pc.setRemoteDescription(e);const t=await this._pc.createAnswer();if(!this._transportReady){const e=$e(t.sdp);await this._setupTransport({localDtlsRole:"client",localSdpObject:e})}Tt.debug("receiveDataChannel() | calling pc.setRemoteDescription() [answer:%o]",t),await this._pc.setLocalDescription(t),this._hasDataChannelMediaSection=!0}return{dataChannel:c}}async _setupTransport({localDtlsRole:e,localSdpObject:t}){t||(t=$e(this._pc.localDescription.sdp));const s=Ke({sdpObject:t});s.role=e,this._remoteSdp.updateDtlsRole("client"===e?"server":"client"),await this.safeEmitAsPromise("@connect",{dtlsParameters:s}),this._transportReady=!0}_assertSendDirection(){if("send"!==this._direction)throw new Error('method can just be called for handlers with "send" direction')}_assertRecvDirection(){if("recv"!==this._direction)throw new Error('method can just be called for handlers with "recv" direction')}}function kt(e){const t=ee(e,{});t.mid&&(t.muxId=t.mid,delete t.mid);for(const s of t.codecs)s.channels&&(s.numChannels=s.channels,delete s.channels),s.mimeType&&!s.name&&(s.name=s.mimeType.split("/")[1]),delete s.mimeType;return t}const Dt=new M("Edge11");class xt extends Je{constructor(){super(),this._rtpSenders=new Map,this._rtpReceivers=new Map,this._nextSendLocalId=0,this._transportReady=!1}static createFactory(){return()=>new xt}get name(){return"Edge11"}close(){Dt.debug("close()");try{this._iceGatherer.close()}catch(e){}try{this._iceTransport.stop()}catch(e){}try{this._dtlsTransport.stop()}catch(e){}for(const t of this._rtpSenders.values())try{t.stop()}catch(e){}for(const t of this._rtpReceivers.values())try{t.stop()}catch(e){}}async getNativeRtpCapabilities(){return Dt.debug("getNativeRtpCapabilities()"),function(){const e=ee(RTCRtpReceiver.getCapabilities(),{});for(const t of e.codecs){if(t.channels=t.numChannels,delete t.numChannels,t.mimeType=t.mimeType||`${t.kind}/${t.name}`,t.parameters){const e=t.parameters;e.apt&&(e.apt=Number(e.apt)),e["packetization-mode"]&&(e["packetization-mode"]=Number(e["packetization-mode"]))}for(const e of t.rtcpFeedback||[])e.parameter||(e.parameter="")}return e}()}async getNativeSctpCapabilities(){return Dt.debug("getNativeSctpCapabilities()"),{numStreams:{OS:0,MIS:0}}}run({direction:e,iceParameters:t,iceCandidates:s,dtlsParameters:r,sctpParameters:i,iceServers:a,iceTransportPolicy:n,additionalSettings:o,proprietaryConstraints:c,extendedRtpCapabilities:d}){Dt.debug("run()"),this._sendingRtpParametersByKind={audio:me("audio",d),video:me("video",d)},this._remoteIceParameters=t,this._remoteIceCandidates=s,this._remoteDtlsParameters=r,this._cname=`CNAME-${te()}`,this._setIceGatherer({iceServers:a,iceTransportPolicy:n}),this._setIceTransport(),this._setDtlsTransport()}async updateIceServers(e){throw new X("not supported")}async restartIce(e){if(Dt.debug("restartIce()"),this._remoteIceParameters=e,this._transportReady){Dt.debug("restartIce() | calling iceTransport.start()"),this._iceTransport.start(this._iceGatherer,e,"controlling");for(const e of this._remoteIceCandidates)this._iceTransport.addRemoteCandidate(e);this._iceTransport.addRemoteCandidate({})}}async getTransportStats(){return this._iceTransport.getStats()}async send({track:e,encodings:t,codecOptions:s,codec:r}){Dt.debug("send() [kind:%s, track.id:%s]",e.kind,e.id),this._transportReady||await this._setupTransport({localDtlsRole:"server"}),Dt.debug("send() | calling new RTCRtpSender()");const i=new RTCRtpSender(e,this._dtlsTransport),a=ee(this._sendingRtpParametersByKind[e.kind],{});a.codecs=fe(a.codecs,r);const n=a.codecs.some((e=>/.+\/rtx$/i.test(e.mimeType)));t||(t=[{}]);for(const d of t)d.ssrc=te(),n&&(d.rtx={ssrc:te()});a.encodings=t,a.rtcp={cname:this._cname,reducedSize:!0,mux:!0};const o=kt(a);Dt.debug("send() | calling rtpSender.send() [params:%o]",o),await i.send(o);const c=String(this._nextSendLocalId);return this._nextSendLocalId++,this._rtpSenders.set(c,i),{localId:c,rtpParameters:a,rtpSender:i}}async stopSending(e){Dt.debug("stopSending() [localId:%s]",e);const t=this._rtpSenders.get(e);if(!t)throw new Error("RTCRtpSender not found");this._rtpSenders.delete(e);try{Dt.debug("stopSending() | calling rtpSender.stop()"),t.stop()}catch(s){throw Dt.warn("stopSending() | rtpSender.stop() failed:%o",s),s}}async replaceTrack(e,t){t?Dt.debug("replaceTrack() [localId:%s, track.id:%s]",e,t.id):Dt.debug("replaceTrack() [localId:%s, no track]",e);const s=this._rtpSenders.get(e);if(!s)throw new Error("RTCRtpSender not found");s.setTrack(t)}async setMaxSpatialLayer(e,t){Dt.debug("setMaxSpatialLayer() [localId:%s, spatialLayer:%s]",e,t);const s=this._rtpSenders.get(e);if(!s)throw new Error("RTCRtpSender not found");const r=s.getParameters();r.encodings.forEach(((e,s)=>{e.active=s<=t})),await s.setParameters(r)}async setRtpEncodingParameters(e,t){Dt.debug("setRtpEncodingParameters() [localId:%s, params:%o]",e,t);const s=this._rtpSenders.get(e);if(!s)throw new Error("RTCRtpSender not found");const r=s.getParameters();r.encodings.forEach(((e,s)=>{r.encodings[s]=a(a({},e),t)})),await s.setParameters(r)}async getSenderStats(e){const t=this._rtpSenders.get(e);if(!t)throw new Error("RTCRtpSender not found");return t.getStats()}async sendDataChannel(e){throw new X("not implemented")}async receive({trackId:e,kind:t,rtpParameters:s}){Dt.debug("receive() [trackId:%s, kind:%s]",e,t),this._transportReady||await this._setupTransport({localDtlsRole:"server"}),Dt.debug("receive() | calling new RTCRtpReceiver()");const r=new RTCRtpReceiver(this._dtlsTransport,t);r.addEventListener("error",(e=>{Dt.error('rtpReceiver "error" event [event:%o]',e)}));const i=kt(s);Dt.debug("receive() | calling rtpReceiver.receive() [params:%o]",i),await r.receive(i);const a=e;return this._rtpReceivers.set(a,r),{localId:a,track:r.track,rtpReceiver:r}}async stopReceiving(e){Dt.debug("stopReceiving() [localId:%s]",e);const t=this._rtpReceivers.get(e);if(!t)throw new Error("RTCRtpReceiver not found");this._rtpReceivers.delete(e);try{Dt.debug("stopReceiving() | calling rtpReceiver.stop()"),t.stop()}catch(s){Dt.warn("stopReceiving() | rtpReceiver.stop() failed:%o",s)}}async getReceiverStats(e){const t=this._rtpReceivers.get(e);if(!t)throw new Error("RTCRtpReceiver not found");return t.getStats()}async receiveDataChannel(e){throw new X("not implemented")}_setIceGatherer({iceServers:e,iceTransportPolicy:t}){const s=new RTCIceGatherer({iceServers:e||[],gatherPolicy:t||"all"});s.addEventListener("error",(e=>{Dt.error('iceGatherer "error" event [event:%o]',e)}));try{s.gather()}catch(r){Dt.debug("_setIceGatherer() | iceGatherer.gather() failed: %s",r.toString())}this._iceGatherer=s}_setIceTransport(){const e=new RTCIceTransport(this._iceGatherer);e.addEventListener("statechange",(()=>{switch(e.state){case"checking":this.emit("@connectionstatechange","connecting");break;case"connected":case"completed":this.emit("@connectionstatechange","connected");break;case"failed":this.emit("@connectionstatechange","failed");break;case"disconnected":this.emit("@connectionstatechange","disconnected");break;case"closed":this.emit("@connectionstatechange","closed")}})),e.addEventListener("icestatechange",(()=>{switch(e.state){case"checking":this.emit("@connectionstatechange","connecting");break;case"connected":case"completed":this.emit("@connectionstatechange","connected");break;case"failed":this.emit("@connectionstatechange","failed");break;case"disconnected":this.emit("@connectionstatechange","disconnected");break;case"closed":this.emit("@connectionstatechange","closed")}})),e.addEventListener("candidatepairchange",(e=>{Dt.debug('iceTransport "candidatepairchange" event [pair:%o]',e.pair)})),this._iceTransport=e}_setDtlsTransport(){const e=new RTCDtlsTransport(this._iceTransport);e.addEventListener("statechange",(()=>{Dt.debug('dtlsTransport "statechange" event [state:%s]',e.state)})),e.addEventListener("dtlsstatechange",(()=>{Dt.debug('dtlsTransport "dtlsstatechange" event [state:%s]',e.state),"closed"===e.state&&this.emit("@connectionstatechange","closed")})),e.addEventListener("error",(e=>{Dt.error('dtlsTransport "error" event [event:%o]',e)})),this._dtlsTransport=e}async _setupTransport({localDtlsRole:e}){Dt.debug("_setupTransport()");const t=this._dtlsTransport.getLocalParameters();t.role=e,await this.safeEmitAsPromise("@connect",{dtlsParameters:t}),this._iceTransport.start(this._iceGatherer,this._remoteIceParameters,"controlling");for(const s of this._remoteIceCandidates)this._iceTransport.addRemoteCandidate(s);this._iceTransport.addRemoteCandidate({}),this._remoteDtlsParameters.fingerprints=this._remoteDtlsParameters.fingerprints.filter((e=>"sha-256"===e.algorithm||"sha-384"===e.algorithm||"sha-512"===e.algorithm)),this._dtlsTransport.start(this._remoteDtlsParameters),this._transportReady=!0}}const It=new M("ReactNative"),Et={OS:1024,MIS:1024};class Mt extends Je{constructor(){super(),this._sendStream=new MediaStream,this._mapSendLocalIdTrack=new Map,this._nextSendLocalId=0,this._mapRecvLocalIdInfo=new Map,this._hasDataChannelMediaSection=!1,this._nextSendSctpStreamId=0,this._transportReady=!1}static createFactory(){return()=>new Mt}get name(){return"ReactNative"}close(){if(It.debug("close()"),this._pc)try{this._pc.close()}catch(e){}}async getNativeRtpCapabilities(){It.debug("getNativeRtpCapabilities()");const e=new RTCPeerConnection({iceServers:[],iceTransportPolicy:"all",bundlePolicy:"max-bundle",rtcpMuxPolicy:"require",sdpSemantics:"plan-b"});try{const s=await e.createOffer({offerToReceiveAudio:!0,offerToReceiveVideo:!0});try{e.close()}catch(t){}const r=$e(s.sdp);return Ge({sdpObject:r})}catch(t){try{e.close()}catch(s){}throw t}}async getNativeSctpCapabilities(){return It.debug("getNativeSctpCapabilities()"),{numStreams:Et}}run({direction:e,iceParameters:t,iceCandidates:s,dtlsParameters:r,sctpParameters:i,iceServers:n,iceTransportPolicy:o,additionalSettings:c,proprietaryConstraints:d,extendedRtpCapabilities:p}){It.debug("run()"),this._direction=e,this._remoteSdp=new tt({iceParameters:t,iceCandidates:s,dtlsParameters:r,sctpParameters:i,planB:!0}),this._sendingRtpParametersByKind={audio:me("audio",p),video:me("video",p)},this._sendingRemoteRtpParametersByKind={audio:ue("audio",p),video:ue("video",p)},this._pc=new RTCPeerConnection(a({iceServers:n||[],iceTransportPolicy:o||"all",bundlePolicy:"max-bundle",rtcpMuxPolicy:"require",sdpSemantics:"plan-b"},c),d),this._pc.addEventListener("iceconnectionstatechange",(()=>{switch(this._pc.iceConnectionState){case"checking":this.emit("@connectionstatechange","connecting");break;case"connected":case"completed":this.emit("@connectionstatechange","connected");break;case"failed":this.emit("@connectionstatechange","failed");break;case"disconnected":this.emit("@connectionstatechange","disconnected");break;case"closed":this.emit("@connectionstatechange","closed")}}))}async updateIceServers(e){It.debug("updateIceServers()");const t=this._pc.getConfiguration();t.iceServers=e,this._pc.setConfiguration(t)}async restartIce(e){if(It.debug("restartIce()"),this._remoteSdp.updateIceParameters(e),this._transportReady)if("send"===this._direction){const e=await this._pc.createOffer({iceRestart:!0});It.debug("restartIce() | calling pc.setLocalDescription() [offer:%o]",e),await this._pc.setLocalDescription(e);const t={type:"answer",sdp:this._remoteSdp.getSdp()};It.debug("restartIce() | calling pc.setRemoteDescription() [answer:%o]",t),await this._pc.setRemoteDescription(t)}else{const e={type:"offer",sdp:this._remoteSdp.getSdp()};It.debug("restartIce() | calling pc.setRemoteDescription() [offer:%o]",e),await this._pc.setRemoteDescription(e);const t=await this._pc.createAnswer();It.debug("restartIce() | calling pc.setLocalDescription() [answer:%o]",t),await this._pc.setLocalDescription(t)}}async getTransportStats(){return this._pc.getStats()}async send({track:e,encodings:t,codecOptions:s,codec:r}){this._assertSendDirection(),It.debug("send() [kind:%s, track.id:%s]",e.kind,e.id),r&&It.warn("send() | codec selection is not available in %s handler",this.name),this._sendStream.addTrack(e),this._pc.addStream(this._sendStream);let i,a=await this._pc.createOffer(),n=$e(a.sdp);const o=ee(this._sendingRtpParametersByKind[e.kind],{});o.codecs=fe(o.codecs);const c=ee(this._sendingRemoteRtpParametersByKind[e.kind],{});if(c.codecs=fe(c.codecs),this._transportReady||await this._setupTransport({localDtlsRole:"server",localSdpObject:n}),"video"===e.kind&&t&&t.length>1&&(It.debug("send() | enabling simulcast"),n=$e(a.sdp),i=n.media.find((e=>"video"===e.type)),lt({offerMediaObject:i,track:e,numStreams:t.length}),a={type:"offer",sdp:ze(n)}),It.debug("send() | calling pc.setLocalDescription() [offer:%o]",a),await this._pc.setLocalDescription(a),n=$e(this._pc.localDescription.sdp),i=n.media.find((t=>t.type===e.kind)),o.rtcp.cname=qe({offerMediaObject:i}),o.encodings=pt({offerMediaObject:i,track:e}),t)for(let l=0;l<o.encodings.length;++l)t[l]&&Object.assign(o.encodings[l],t[l]);if(o.encodings.length>1&&("video/vp8"===o.codecs[0].mimeType.toLowerCase()||"video/h264"===o.codecs[0].mimeType.toLowerCase()))for(const l of o.encodings)l.scalabilityMode="S1T3";this._remoteSdp.send({offerMediaObject:i,offerRtpParameters:o,answerRtpParameters:c,codecOptions:s});const d={type:"answer",sdp:this._remoteSdp.getSdp()};It.debug("send() | calling pc.setRemoteDescription() [answer:%o]",d),await this._pc.setRemoteDescription(d);const p=String(this._nextSendLocalId);return this._nextSendLocalId++,this._mapSendLocalIdTrack.set(p,e),{localId:p,rtpParameters:o}}async stopSending(e){this._assertSendDirection(),It.debug("stopSending() [localId:%s]",e);const t=this._mapSendLocalIdTrack.get(e);if(!t)throw new Error("track not found");this._mapSendLocalIdTrack.delete(e),this._sendStream.removeTrack(t),this._pc.addStream(this._sendStream);const s=await this._pc.createOffer();It.debug("stopSending() | calling pc.setLocalDescription() [offer:%o]",s);try{await this._pc.setLocalDescription(s)}catch(i){if(0===this._sendStream.getTracks().length)return void It.warn("stopSending() | ignoring expected error due no sending tracks: %s",i.toString());throw i}if("stable"===this._pc.signalingState)return;const r={type:"answer",sdp:this._remoteSdp.getSdp()};It.debug("stopSending() | calling pc.setRemoteDescription() [answer:%o]",r),await this._pc.setRemoteDescription(r)}async replaceTrack(e,t){throw new X("not implemented")}async setMaxSpatialLayer(e,t){throw new X("not implemented")}async setRtpEncodingParameters(e,t){throw new X("not implemented")}async getSenderStats(e){throw new X("not implemented")}async sendDataChannel({ordered:e,maxPacketLifeTime:t,maxRetransmits:s,label:r,protocol:i}){this._assertSendDirection();const a={negotiated:!0,id:this._nextSendSctpStreamId,ordered:e,maxPacketLifeTime:t,maxRetransmitTime:t,maxRetransmits:s,protocol:i};It.debug("sendDataChannel() [options:%o]",a);const n=this._pc.createDataChannel(r,a);if(this._nextSendSctpStreamId=++this._nextSendSctpStreamId%Et.MIS,!this._hasDataChannelMediaSection){const e=await this._pc.createOffer(),t=$e(e.sdp),s=t.media.find((e=>"application"===e.type));this._transportReady||await this._setupTransport({localDtlsRole:"server",localSdpObject:t}),It.debug("sendDataChannel() | calling pc.setLocalDescription() [offer:%o]",e),await this._pc.setLocalDescription(e),this._remoteSdp.sendSctpAssociation({offerMediaObject:s});const r={type:"answer",sdp:this._remoteSdp.getSdp()};It.debug("sendDataChannel() | calling pc.setRemoteDescription() [answer:%o]",r),await this._pc.setRemoteDescription(r),this._hasDataChannelMediaSection=!0}return{dataChannel:n,sctpStreamParameters:{streamId:a.id,ordered:a.ordered,maxPacketLifeTime:a.maxPacketLifeTime,maxRetransmits:a.maxRetransmits}}}async receive({trackId:e,kind:t,rtpParameters:s}){this._assertRecvDirection(),It.debug("receive() [trackId:%s, kind:%s]",e,t);const r=e,i=t;let a=s.rtcp.cname;It.debug("receive() | forcing a random remote streamId to avoid well known bug in react-native-webrtc"),a+=`-hack-${te()}`,this._remoteSdp.receive({mid:i,kind:t,offerRtpParameters:s,streamId:a,trackId:e});const n={type:"offer",sdp:this._remoteSdp.getSdp()};It.debug("receive() | calling pc.setRemoteDescription() [offer:%o]",n),await this._pc.setRemoteDescription(n);let o=await this._pc.createAnswer();const c=$e(o.sdp);Ue({offerRtpParameters:s,answerMediaObject:c.media.find((e=>String(e.mid)===i))}),o={type:"answer",sdp:ze(c)},this._transportReady||await this._setupTransport({localDtlsRole:"client",localSdpObject:c}),It.debug("receive() | calling pc.setLocalDescription() [answer:%o]",o),await this._pc.setLocalDescription(o);const d=this._pc.getRemoteStreams().find((e=>e.id===a)).getTrackById(r);if(!d)throw new Error("remote track not found");return this._mapRecvLocalIdInfo.set(r,{mid:i,rtpParameters:s}),{localId:r,track:d}}async stopReceiving(e){this._assertRecvDirection(),It.debug("stopReceiving() [localId:%s]",e);const{mid:t,rtpParameters:s}=this._mapRecvLocalIdInfo.get(e)||{};this._mapRecvLocalIdInfo.delete(e),this._remoteSdp.planBStopReceiving({mid:t,offerRtpParameters:s});const r={type:"offer",sdp:this._remoteSdp.getSdp()};It.debug("stopReceiving() | calling pc.setRemoteDescription() [offer:%o]",r),await this._pc.setRemoteDescription(r);const i=await this._pc.createAnswer();It.debug("stopReceiving() | calling pc.setLocalDescription() [answer:%o]",i),await this._pc.setLocalDescription(i)}async getReceiverStats(e){throw new X("not implemented")}async receiveDataChannel({sctpStreamParameters:e,label:t,protocol:s}){this._assertRecvDirection();const{streamId:r,ordered:i,maxPacketLifeTime:a,maxRetransmits:n}=e,o={negotiated:!0,id:r,ordered:i,maxPacketLifeTime:a,maxRetransmitTime:a,maxRetransmits:n,protocol:s};It.debug("receiveDataChannel() [options:%o]",o);const c=this._pc.createDataChannel(t,o);if(!this._hasDataChannelMediaSection){this._remoteSdp.receiveSctpAssociation({oldDataChannelSpec:!0});const e={type:"offer",sdp:this._remoteSdp.getSdp()};It.debug("receiveDataChannel() | calling pc.setRemoteDescription() [offer:%o]",e),await this._pc.setRemoteDescription(e);const t=await this._pc.createAnswer();if(!this._transportReady){const e=$e(t.sdp);await this._setupTransport({localDtlsRole:"client",localSdpObject:e})}It.debug("receiveDataChannel() | calling pc.setRemoteDescription() [answer:%o]",t),await this._pc.setLocalDescription(t),this._hasDataChannelMediaSection=!0}return{dataChannel:c}}async _setupTransport({localDtlsRole:e,localSdpObject:t}){t||(t=$e(this._pc.localDescription.sdp));const s=Ke({sdpObject:t});s.role=e,this._remoteSdp.updateDtlsRole("client"===e?"server":"client"),await this.safeEmitAsPromise("@connect",{dtlsParameters:s}),this._transportReady=!0}_assertSendDirection(){if("send"!==this._direction)throw new Error('method can just be called for handlers with "send" direction')}_assertRecvDirection(){if("recv"!==this._direction)throw new Error('method can just be called for handlers with "recv" direction')}}const Ot=new M("Device");function Lt(){if("object"==typeof navigator&&"ReactNative"===navigator.product)return"undefined"==typeof RTCPeerConnection?void Ot.warn("this._detectDevice() | unsupported ReactNative without RTCPeerConnection"):(Ot.debug("this._detectDevice() | ReactNative handler chosen"),"ReactNative");if("object"!=typeof navigator||"string"!=typeof navigator.userAgent)Ot.warn("this._detectDevice() | unknown device");else{const e=navigator.userAgent,t=class{static getParser(e,t=!1){if("string"!=typeof e)throw new Error("UserAgent should be a string");return new I(e,t)}static parse(e){return new I(e).getResult()}static get BROWSER_MAP(){return y}static get ENGINE_MAP(){return R}static get OS_MAP(){return S}static get PLATFORMS_MAP(){return v}}.getParser(e),s=t.getEngine();if(t.satisfies({chrome:">=74",chromium:">=74"}))return"Chrome74";if(t.satisfies({chrome:">=70",chromium:">=70"}))return"Chrome70";if(t.satisfies({chrome:">=67",chromium:">=67"}))return"Chrome67";if(t.satisfies({chrome:">=55",chromium:">=55"}))return"Chrome55";if(t.satisfies({firefox:">=60"}))return"Firefox60";if(t.satisfies({safari:">=12.0"})&&"undefined"!=typeof RTCRtpTransceiver&&RTCRtpTransceiver.prototype.hasOwnProperty("currentDirection"))return"Safari12";if(t.satisfies({safari:">=11"}))return"Safari11";if(t.satisfies({"microsoft edge":">=11"})&&t.satisfies({"microsoft edge":"<=18"}))return"Edge11";if(s.name&&"blink"===s.name.toLowerCase()){const t=e.match(/(?:(?:Chrome|Chromium))[ /](\w+)/i);if(t){const e=Number(t[1]);return e>=74?"Chrome74":e>=70?"Chrome70":e>=67?"Chrome67":"Chrome55"}return"Chrome74"}Ot.warn("this._detectDevice() | browser not supported [name:%s, version:%s]",t.getBrowserName(),t.getBrowserVersion())}}class jt{constructor({handlerName:e,handlerFactory:t,Handler:s}={}){if(this._loaded=!1,this._observer=new Z,Ot.debug("constructor()"),s){if(Ot.warn("constructor() | Handler option is DEPRECATED, use handlerName or handlerFactory instead"),"string"!=typeof s)throw new TypeError("non string Handler option no longer supported, use handlerFactory instead");e=s}if(e&&t)throw new TypeError("just one of handlerName or handlerInterface can be given");if(t)this._handlerFactory=t;else{if(e)Ot.debug("constructor() | handler given: %s",e);else{if(!(e=Lt()))throw new X("device not supported");Ot.debug("constructor() | detected handler: %s",e)}switch(e){case"Chrome74":this._handlerFactory=nt.createFactory();break;case"Chrome70":this._handlerFactory=dt.createFactory();break;case"Chrome67":this._handlerFactory=ut.createFactory();break;case"Chrome55":this._handlerFactory=_t.createFactory();break;case"Firefox60":this._handlerFactory=yt.createFactory();break;case"Safari12":this._handlerFactory=Rt.createFactory();break;case"Safari11":this._handlerFactory=Pt.createFactory();break;case"Edge11":this._handlerFactory=xt.createFactory();break;case"ReactNative":this._handlerFactory=Mt.createFactory();break;default:throw new TypeError(`unknown handlerName "${e}"`)}}const r=this._handlerFactory();this._handlerName=r.name,r.close(),this._extendedRtpCapabilities=void 0,this._recvRtpCapabilities=void 0,this._canProduceByKind={audio:!1,video:!1},this._sctpCapabilities=void 0}get handlerName(){return this._handlerName}get loaded(){return this._loaded}get rtpCapabilities(){if(!this._loaded)throw new Y("not loaded");return this._recvRtpCapabilities}get sctpCapabilities(){if(!this._loaded)throw new Y("not loaded");return this._sctpCapabilities}get observer(){return this._observer}async load({routerRtpCapabilities:e}){let t;Ot.debug("load() [routerRtpCapabilities:%o]",e),e=ee(e,void 0);try{if(this._loaded)throw new Y("already loaded");re(e),t=this._handlerFactory();const s=await t.getNativeRtpCapabilities();Ot.debug("load() | got native RTP capabilities:%o",s),re(s),this._extendedRtpCapabilities=function(e,t){const s={codecs:[],headerExtensions:[]};for(const r of t.codecs||[]){if(_e(r))continue;const t=(e.codecs||[]).find((e=>we(e,r,{strict:!0,modify:!0})));if(!t)continue;const i={mimeType:t.mimeType,kind:t.kind,clockRate:t.clockRate,channels:t.channels,localPayloadType:t.preferredPayloadType,localRtxPayloadType:void 0,remotePayloadType:r.preferredPayloadType,remoteRtxPayloadType:void 0,localParameters:t.parameters,remoteParameters:r.parameters,rtcpFeedback:ye(t,r)};s.codecs.push(i)}for(const r of s.codecs){const s=e.codecs.find((e=>_e(e)&&e.parameters.apt===r.localPayloadType)),i=t.codecs.find((e=>_e(e)&&e.parameters.apt===r.remotePayloadType));s&&i&&(r.localRtxPayloadType=s.preferredPayloadType,r.remoteRtxPayloadType=i.preferredPayloadType)}for(const r of t.headerExtensions){const t=e.headerExtensions.find((e=>be(e,r)));if(!t)continue;const i={kind:r.kind,uri:r.uri,sendId:t.preferredId,recvId:r.preferredId,encrypt:t.preferredEncrypt,direction:"sendrecv"};switch(r.direction){case"sendrecv":i.direction="sendrecv";break;case"recvonly":i.direction="sendonly";break;case"sendonly":i.direction="recvonly";break;case"inactive":i.direction="inactive"}s.headerExtensions.push(i)}return s}(s,e),Ot.debug("load() | got extended RTP capabilities:%o",this._extendedRtpCapabilities),this._canProduceByKind.audio=ge("audio",this._extendedRtpCapabilities),this._canProduceByKind.video=ge("video",this._extendedRtpCapabilities),this._recvRtpCapabilities=function(e){const t={codecs:[],headerExtensions:[]};for(const s of e.codecs){const e={mimeType:s.mimeType,kind:s.kind,preferredPayloadType:s.remotePayloadType,clockRate:s.clockRate,channels:s.channels,parameters:s.localParameters,rtcpFeedback:s.rtcpFeedback};if(t.codecs.push(e),!s.remoteRtxPayloadType)continue;const r={mimeType:`${s.kind}/rtx`,kind:s.kind,preferredPayloadType:s.remoteRtxPayloadType,clockRate:s.clockRate,parameters:{apt:s.remotePayloadType},rtcpFeedback:[]};t.codecs.push(r)}for(const s of e.headerExtensions){if("sendrecv"!==s.direction&&"recvonly"!==s.direction)continue;const e={kind:s.kind,uri:s.uri,preferredId:s.recvId,preferredEncrypt:s.encrypt,direction:s.direction};t.headerExtensions.push(e)}return t}(this._extendedRtpCapabilities),re(this._recvRtpCapabilities),Ot.debug("load() | got receiving RTP capabilities:%o",this._recvRtpCapabilities),this._sctpCapabilities=await t.getNativeSctpCapabilities(),Ot.debug("load() | got native SCTP capabilities:%o",this._sctpCapabilities),le(this._sctpCapabilities),Ot.debug("load() succeeded"),this._loaded=!0,t.close()}catch(s){throw t&&t.close(),s}}canProduce(e){if(!this._loaded)throw new Y("not loaded");if("audio"!==e&&"video"!==e)throw new TypeError(`invalid kind "${e}"`);return this._canProduceByKind[e]}createSendTransport({id:e,iceParameters:t,iceCandidates:s,dtlsParameters:r,sctpParameters:i,iceServers:a,iceTransportPolicy:n,additionalSettings:o,proprietaryConstraints:c,appData:d={}}){return Ot.debug("createSendTransport()"),this._createTransport({direction:"send",id:e,iceParameters:t,iceCandidates:s,dtlsParameters:r,sctpParameters:i,iceServers:a,iceTransportPolicy:n,additionalSettings:o,proprietaryConstraints:c,appData:d})}createRecvTransport({id:e,iceParameters:t,iceCandidates:s,dtlsParameters:r,sctpParameters:i,iceServers:a,iceTransportPolicy:n,additionalSettings:o,proprietaryConstraints:c,appData:d={}}){return Ot.debug("createRecvTransport()"),this._createTransport({direction:"recv",id:e,iceParameters:t,iceCandidates:s,dtlsParameters:r,sctpParameters:i,iceServers:a,iceTransportPolicy:n,additionalSettings:o,proprietaryConstraints:c,appData:d})}_createTransport({direction:e,id:t,iceParameters:s,iceCandidates:r,dtlsParameters:i,sctpParameters:a,iceServers:n,iceTransportPolicy:o,additionalSettings:c,proprietaryConstraints:d,appData:p={}}){if(!this._loaded)throw new Y("not loaded");if("string"!=typeof t)throw new TypeError("missing id");if("object"!=typeof s)throw new TypeError("missing iceParameters");if(!Array.isArray(r))throw new TypeError("missing iceCandidates");if("object"!=typeof i)throw new TypeError("missing dtlsParameters");if(a&&"object"!=typeof a)throw new TypeError("wrong sctpParameters");if(p&&"object"!=typeof p)throw new TypeError("if given, appData must be an object");const l=new Me({direction:e,id:t,iceParameters:s,iceCandidates:r,dtlsParameters:i,sctpParameters:a,iceServers:n,iceTransportPolicy:o,additionalSettings:c,proprietaryConstraints:d,appData:p,handlerFactory:this._handlerFactory,extendedRtpCapabilities:this._extendedRtpCapabilities,canProduceByKind:this._canProduceByKind});return this._observer.safeEmit("newtransport",l),l}}var Ft,At,Bt,Nt,zt,$t,Vt,Gt;(At=Ft||(Ft={})).UserJoined="UserJoined",At.UserLeft="UserLeft",At.UserStartProduce="UserStartProduce",At.UserStopProduce="UserStopProduce",(Nt=Bt||(Bt={})).Authenticate="Authenticate",Nt.RoomInfo="RoomInfo",Nt.InitializeTransports="InitializeTransports",Nt.ConnectTransport="ConnectTransport",Nt.StartProduce="StartProduce",Nt.StopProduce="StopProduce",Nt.StartConsume="StartConsume",Nt.StopConsume="StopConsume",Nt.SetConsumerPause="SetConsumerPause",($t=zt||(zt={}))[$t.NotConnected=0]="NotConnected",$t[$t.NotFound=404]="NotFound",$t[$t.TransportConnectionFailure=601]="TransportConnectionFailure",$t[$t.ProducerFailure=611]="ProducerFailure",$t[$t.ProducerNotFound=614]="ProducerNotFound",$t[$t.ConsumerFailure=621]="ConsumerFailure",$t[$t.ConsumerNotFound=624]="ConsumerNotFound",(Gt=Vt||(Vt={}))[Gt.InvalidData=1003]="InvalidData",Gt[Gt.Unauthorized=4001]="Unauthorized",Gt[Gt.RoomClosed=4004]="RoomClosed",Gt[Gt.InvalidState=1002]="InvalidState",Gt[Gt.ServerError=1011]="ServerError";class Kt extends c{constructor(){super(),this.index=0,this.pending=new Map}connected(){return void 0!==this.ws&&this.ws.readyState!==WebSocket.CLOSING&&this.ws.readyState!==WebSocket.CLOSED}connect(e){this.disconnect(),this.ws=new WebSocket(e),this.ws.onopen=e=>this.emit("open",e),this.ws.onclose=e=>this.emit("close",e),this.ws.onerror=e=>this.emit("error",e),this.ws.onmessage=e=>this.parseData(e);let t=!1;return new Promise(((e,s)=>{this.once("open",(()=>{t||(t=!0,e())})),this.once("error",(()=>{t||(t=!0,s())}))}))}disconnect(){void 0!==this.ws&&this.ws.readyState!==WebSocket.CLOSED&&this.ws.readyState!==WebSocket.CLOSING&&this.ws.close(1e3)}parseData(e){if("string"!=typeof e.data)return;const t=JSON.parse(e.data),s=this.pending.get(t.id);void 0!==s?s(t):this.emit("data",t)}sendRequest(e,t){if(void 0===this.ws||this.ws.readyState!==WebSocket.OPEN)return Promise.reject({error:zt.NotConnected});const s=this.ws;return new Promise(((r,i)=>{for(this.index>=2**32&&(this.index=0);this.pending.has(this.index);)this.index++;const a=e=>{i({error:e.code,message:e.reason})};this.pending.set(this.index,(e=>{this.removeListener("close",a),e.error&&i({error:e.error,message:e.message,data:e.data}),r(e.data)})),this.once("close",a);const n={id:this.index,type:e,data:t};s.send(`${JSON.stringify(n)}\n`),this.index++}))}authenticate(e,t){return this.sendRequest(Bt.Authenticate,{token:e,roomId:t})}async roomInfo(){const e=await this.sendRequest(Bt.RoomInfo);return{id:e.id,videoAllowed:e.videoAllowed,users:new Map(Object.entries(e.users))}}initializeTransports(e){return this.sendRequest(Bt.InitializeTransports,{mode:"SplitWebRTC",rtpCapabilities:e})}connectTransport(e,t){return this.sendRequest(Bt.ConnectTransport,{id:e,dtlsParameters:t})}async startProduce(e,t){return(await this.sendRequest(Bt.StartProduce,{type:e,rtpParameters:t})).producerId}stopProduce(e){return this.sendRequest(Bt.StopProduce,{type:e})}startConsume(e,t){return this.sendRequest(Bt.StartConsume,{type:t,userId:e})}stopConsume(e){return this.sendRequest(Bt.StopConsume,{id:e})}setConsumerPause(e,t){return this.sendRequest(Bt.SetConsumerPause,{id:e,paused:t})}}const qt=X;class Ut extends c{constructor(){super(),this._supported=void 0!==Lt(),this.signaling=new Kt,this.participants=new Map,this.consumers=new Map,this.isDeaf=!1,this.signaling.on("data",(e=>{const t=e.data;switch(e.type){case Ft.UserJoined:this.participants.set(t.id,{}),this.emit("userJoined",t.id);break;case Ft.UserLeft:this.participants.delete(t.id),this.emit("userLeft",t.id),this.recvTransport&&this.stopConsume(t.id);break;case Ft.UserStartProduce:{const e=this.participants.get(t.id);if(void 0===e)return;switch(t.type){case"audio":e.audio=!0;break;default:throw new Error(`Invalid produce type ${t.type}`)}this.recvTransport&&this.startConsume(t.id,t.type),this.emit("userStartProduce",t.id,t.type);break}case Ft.UserStopProduce:{const e=this.participants.get(t.id);if(void 0===e)return;switch(t.type){case"audio":e.audio=!1;break;default:throw new Error(`Invalid produce type ${t.type}`)}this.recvTransport&&this.stopConsume(t.id,t.type),this.emit("userStopProduce",t.id,t.type);break}}}),this),this.signaling.on("error",(()=>{this.emit("error",new Error("Signaling error"))}),this),this.signaling.on("close",(e=>{this.disconnect({error:e.code,message:e.reason},!0)}),this)}supported(){return this._supported}throwIfUnsupported(){if(!this._supported)throw new qt("RTC not supported")}connect(e,t){return this.throwIfUnsupported(),this.device=new jt,this.roomId=t,this.signaling.connect(e)}disconnect(e,t){(this.signaling.connected()||t)&&(this.signaling.disconnect(),this.participants=new Map,this.consumers=new Map,this.userId=void 0,this.roomId=void 0,this.audioProducer=void 0,this.sendTransport&&this.sendTransport.close(),this.recvTransport&&this.recvTransport.close(),this.sendTransport=void 0,this.recvTransport=void 0,this.emit("close",e))}async authenticate(e){if(this.throwIfUnsupported(),void 0===this.device||void 0===this.roomId)throw new ReferenceError("Voice Client is in an invalid state");const t=await this.signaling.authenticate(e,this.roomId),[s]=await Promise.all([this.signaling.roomInfo(),this.device.load({routerRtpCapabilities:t.rtpCapabilities})]);this.userId=t.userId,this.participants=s.users}async initializeTransports(){if(this.throwIfUnsupported(),void 0===this.device)throw new ReferenceError("Voice Client is in an invalid state");const e=await this.signaling.initializeTransports(this.device.rtpCapabilities);this.sendTransport=this.device.createSendTransport(e.sendTransport),this.recvTransport=this.device.createRecvTransport(e.recvTransport);const t=e=>{e.on("connect",(({dtlsParameters:t},s,r)=>{this.signaling.connectTransport(e.id,t).then(s).catch(r)}))};t(this.sendTransport),t(this.recvTransport),this.sendTransport.on("produce",((e,t,s)=>{const r=e.appData.type;return"audio"===e.kind&&"audio"!==r&&"saudio"!==r||"video"===e.kind&&"video"!==r&&"svideo"!==r?s():void this.signaling.startProduce(r,e.rtpParameters).then((e=>t({id:e}))).catch(s)})),this.emit("ready");for(const s of this.participants)s[1].audio&&s[0]!==this.userId&&this.startConsume(s[0],"audio")}async startConsume(e,t){if(void 0===this.recvTransport)throw new Error("Receive transport undefined");const s=this.consumers.get(e)||{},r=await this.signaling.startConsume(e,t),i=await this.recvTransport.consume(r);switch(t){case"audio":s.audio=i}const a=new MediaStream([i.track]),n=new Audio;n.srcObject=a,await this.signaling.setConsumerPause(i.id,!1),n.play(),this.consumers.set(e,s)}async stopConsume(e,t){const s=this.consumers.get(e);if(void 0!==s)if(void 0===t)void 0!==s.audio&&s.audio.close(),this.consumers.delete(e);else{switch(t){case"audio":void 0!==s.audio&&(s.audio.close(),this.signaling.stopConsume(s.audio.id)),s.audio=void 0}this.consumers.set(e,s)}}async startProduce(e,t){if(void 0===this.sendTransport)throw new Error("Send transport undefined");const s=await this.sendTransport.produce({track:e,appData:{type:t}});switch(t){case"audio":this.audioProducer=s}const r=this.participants.get(this.userId||"");void 0!==r&&(r[t]=!0,this.participants.set(this.userId||"",r)),this.emit("startProduce",t)}async stopProduce(e){let t;switch(e){case"audio":t=this.audioProducer,this.audioProducer=void 0}void 0!==t&&(t.close(),this.emit("stopProduce",e));const s=this.participants.get(this.userId||"");void 0!==s&&(s[e]=!1,this.participants.set(this.userId||"",s));try{await this.signaling.stopProduce(e)}catch(r){if(r.error===zt.ProducerNotFound)return;throw r}}}export{Ut as default};
//# sourceMappingURL=VoiceClient.5abf25e5.js.map
