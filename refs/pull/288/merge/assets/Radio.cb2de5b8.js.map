{"version":3,"file":"Radio.cb2de5b8.js","sources":["../../vite/preload-helper","../../src/redux/reducers/experiments.ts","../../src/redux/connector.tsx","../../src/context/Locale.tsx","../../src/redux/reducers/notifications.ts","../../src/redux/reducers/queue.ts","../../src/components/common/Emoji.tsx","../../src/redux/reducers/settings.ts","../../src/redux/reducers/sync.ts","../../src/redux/reducers/index.ts","../../src/redux/reducers/server_config.ts","../../src/redux/reducers/locale.ts","../../src/redux/reducers/auth.ts","../../src/redux/reducers/unreads.ts","../../src/redux/reducers/drafts.ts","../../src/redux/reducers/last_opened.ts","../../src/redux/reducers/section_toggle.ts","../../src/redux/reducers/trusted_links.ts","../../src/redux/reducers/themes.ts","../../src/redux/index.ts","../../src/context/Theme.tsx","../../src/components/ui/Button.tsx","../../src/components/ui/InputBox.tsx","../../src/components/ui/Overline.tsx","../../src/components/ui/Radio.tsx"],"sourcesContent":["let scriptRel;const seen = {};export const __vitePreload = function preload(baseModule, deps) {\n    // @ts-ignore\n    if (!__VITE_IS_MODERN__ || !deps) {\n        return baseModule();\n    }\n    // @ts-ignore\n    if (scriptRel === undefined) {\n        // @ts-ignore\n        const relList = document.createElement('link').relList;\n        // @ts-ignore\n        scriptRel =\n            relList && relList.supports && relList.supports('modulepreload')\n                ? 'modulepreload'\n                : 'preload';\n    }\n    return Promise.all(deps.map((dep) => {\n        // @ts-ignore\n        if (dep in seen)\n            return;\n        // @ts-ignore\n        seen[dep] = true;\n        const isCss = dep.endsWith('.css');\n        const cssSelector = isCss ? '[rel=\"stylesheet\"]' : '';\n        // @ts-ignore check if the file is already preloaded by SSR markup\n        if (document.querySelector(`link[href=\"${dep}\"]${cssSelector}`)) {\n            return;\n        }\n        // @ts-ignore\n        const link = document.createElement('link');\n        // @ts-ignore\n        link.rel = isCss ? 'stylesheet' : scriptRel;\n        if (!isCss) {\n            link.as = 'script';\n            link.crossOrigin = '';\n        }\n        link.href = dep;\n        // @ts-ignore\n        document.head.appendChild(link);\n        if (isCss) {\n            return new Promise((res, rej) => {\n                link.addEventListener('load', res);\n                link.addEventListener('error', rej);\n            });\n        }\n    })).then(() => baseModule());\n}","import { getState } from \"..\";\n\nexport type Experiments = \"search\" | \"theme_shop\";\n\nexport const AVAILABLE_EXPERIMENTS: Experiments[] = [\"theme_shop\"];\n\nexport const EXPERIMENTS: {\n    [key in Experiments]: { title: string; description: string };\n} = {\n    search: {\n        title: \"Search\",\n        description: \"Allows you to search for messages in channels.\",\n    },\n    theme_shop: {\n        title: \"Theme Shop\",\n        description: \"Allows you to access and set user submitted themes.\",\n    },\n};\n\nexport interface ExperimentOptions {\n    enabled?: Experiments[];\n}\n\nexport type ExperimentsAction =\n    | { type: undefined }\n    | {\n          type: \"EXPERIMENTS_ENABLE\";\n          key: Experiments;\n      }\n    | {\n          type: \"EXPERIMENTS_DISABLE\";\n          key: Experiments;\n      };\n\nexport function experiments(\n    state = {} as ExperimentOptions,\n    action: ExperimentsAction,\n): ExperimentOptions {\n    switch (action.type) {\n        case \"EXPERIMENTS_ENABLE\":\n            return {\n                ...state,\n                enabled: [\n                    ...(state.enabled ?? [])\n                        .filter((x) => AVAILABLE_EXPERIMENTS.includes(x))\n                        .filter((v) => v !== action.key),\n                    action.key,\n                ],\n            };\n        case \"EXPERIMENTS_DISABLE\":\n            return {\n                ...state,\n                enabled: state.enabled\n                    ?.filter((v) => v !== action.key)\n                    .filter((x) => AVAILABLE_EXPERIMENTS.includes(x)),\n            };\n        default:\n            return state;\n    }\n}\n\nexport function isExperimentEnabled(\n    name: Experiments,\n    experiments: ExperimentOptions = getState().experiments,\n) {\n    return experiments.enabled?.includes(name) ?? false;\n}\n","/* eslint-disable @typescript-eslint/no-explicit-any */\nimport { connect, ConnectedComponent } from \"react-redux\";\n\nimport { h } from \"preact\";\nimport { memo } from \"preact/compat\";\n\nimport { State } from \".\";\n\nexport function connectState<T>(\n    component: (props: any) => h.JSX.Element | null,\n    mapKeys: (state: State, props: T) => any,\n    memoize?: boolean,\n): ConnectedComponent<(props: any) => h.JSX.Element | null, T> {\n    const c = connect(mapKeys)(component);\n    return memoize ? memo(c) : c;\n}\n","import dayJS from \"dayjs\";\nimport calendar from \"dayjs/plugin/calendar\";\nimport format from \"dayjs/plugin/localizedFormat\";\nimport update from \"dayjs/plugin/updateLocale\";\nimport defaultsDeep from \"lodash.defaultsdeep\";\n\nimport { IntlProvider } from \"preact-i18n\";\nimport { useCallback, useEffect, useState } from \"preact/hooks\";\n\nimport { connectState } from \"../redux/connector\";\n\nimport definition from \"../../external/lang/en.json\";\n\nexport const dayjs = dayJS;\n\ndayjs.extend(calendar);\ndayjs.extend(format);\ndayjs.extend(update);\n\nexport enum Language {\n    ENGLISH = \"en\",\n\n    ARABIC = \"ar\",\n    AZERBAIJANI = \"az\",\n    BULGARIAN = \"bg\",\n    CZECH = \"cs\",\n    GERMAN = \"de\",\n    GREEK = \"el\",\n    SPANISH = \"es\",\n    ESTONIAN = \"et\",\n    FINNISH = \"fi\",\n    FILIPINO = \"fil\",\n    FRENCH = \"fr\",\n    IRISH = \"ga\",\n    HINDI = \"hi\",\n    CROATIAN = \"hr\",\n    HUNGARIAN = \"hu\",\n    INDONESIAN = \"id\",\n    ITALIAN = \"it\",\n    JAPANESE = \"ja\",\n    KOREAN = \"ko\",\n    LUXEMBOURGISH = \"lb\",\n    LITHUANIAN = \"lt\",\n    MACEDONIAN = \"mk\",\n    MALAY = \"ms\",\n    NORWEGIAN_BOKMAL = \"nb_NO\",\n    DUTCH = \"nl\",\n    POLISH = \"pl\",\n    PORTUGUESE_BRAZIL = \"pt_BR\",\n    ROMANIAN = \"ro\",\n    RUSSIAN = \"ru\",\n    SLOVAK = \"sk\",\n    SLOVENIAN = \"sl\",\n    SERBIAN = \"sr\",\n    SWEDISH = \"sv\",\n    TAMIL = \"ta\",\n    THAI = \"th\",\n    TURKISH = \"tr\",\n    UKRANIAN = \"uk\",\n    VIETNAMESE = \"vi\",\n    CHINESE_SIMPLIFIED = \"zh_Hans\",\n\n    TOKIPONA = \"tokipona\",\n\n    OWO = \"owo\",\n    PIRATE = \"pr\",\n    BOTTOM = \"bottom\",\n    LEET = \"leet\",\n    PIGLATIN = \"piglatin\",\n    ENCHANTMENT_TABLE = \"enchantment\",\n}\n\nexport interface LanguageEntry {\n    display: string;\n    emoji: string;\n    i18n: string;\n    dayjs?: string;\n    rtl?: boolean;\n    cat?: \"const\" | \"alt\";\n}\n\nexport const Languages: { [key in Language]: LanguageEntry } = {\n    en: {\n        display: \"English (Traditional)\",\n        emoji: \"🇬🇧\",\n        i18n: \"en\",\n        dayjs: \"en-gb\",\n    },\n\n    ar: { display: \"عربي\", emoji: \"🇸🇦\", i18n: \"ar\", rtl: true },\n    az: { display: \"Azərbaycan dili\", emoji: \"🇦🇿\", i18n: \"az\" },\n    bg: { display: \"български\", emoji: \"🇧🇬\", i18n: \"bg\" },\n    cs: { display: \"Čeština\", emoji: \"🇨🇿\", i18n: \"cs\" },\n    de: { display: \"Deutsch\", emoji: \"🇩🇪\", i18n: \"de\" },\n    el: { display: \"Ελληνικά\", emoji: \"🇬🇷\", i18n: \"el\" },\n    es: { display: \"Español\", emoji: \"🇪🇸\", i18n: \"es\" },\n    et: { display: \"eesti\", emoji: \"🇪🇪\", i18n: \"et\" },\n    fi: { display: \"suomi\", emoji: \"🇫🇮\", i18n: \"fi\" },\n    fil: { display: \"Pilipino\", emoji: \"🇵🇭\", i18n: \"fil\", dayjs: \"tl-ph\" },\n    fr: { display: \"Français\", emoji: \"🇫🇷\", i18n: \"fr\" },\n    ga: { display: \"Gaeilge\", emoji: \"🇮🇪\", i18n: \"ga\" },\n    hi: { display: \"हिन्दी\", emoji: \"🇮🇳\", i18n: \"hi\" },\n    hr: { display: \"Hrvatski\", emoji: \"🇭🇷\", i18n: \"hr\" },\n    hu: { display: \"Magyar\", emoji: \"🇭🇺\", i18n: \"hu\" },\n    id: { display: \"bahasa Indonesia\", emoji: \"🇮🇩\", i18n: \"id\" },\n    it: { display: \"Italiano\", emoji: \"🇮🇹\", i18n: \"it\" },\n    ja: { display: \"日本語\", emoji: \"🇯🇵\", i18n: \"ja\" },\n    ko: { display: \"한국어\", emoji: \"🇰🇷\", i18n: \"ko\" },\n    lb: { display: \"Lëtzebuergesch\", emoji: \"🇱🇺\", i18n: \"lb\" },\n    lt: { display: \"Lietuvių\", emoji: \"🇱🇹\", i18n: \"lt\" },\n    mk: { display: \"Македонски\", emoji: \"🇲🇰\", i18n: \"mk\" },\n    ms: { display: \"Melayu\", emoji: \"🇲🇾\", i18n: \"ms\" },\n    nb_NO: { display: \"Norsk bokmål\", emoji: \"🇳🇴\", i18n: \"nb_NO\", dayjs: \"nb\" },\n    nl: { display: \"Nederlands\", emoji: \"🇳🇱\", i18n: \"nl\" },\n    pl: { display: \"Polski\", emoji: \"🇵🇱\", i18n: \"pl\" },\n    pt_BR: {\n        display: \"Português (do Brasil)\",\n        emoji: \"🇧🇷\",\n        i18n: \"pt_BR\",\n        dayjs: \"pt-br\",\n    },\n    ro: { display: \"Română\", emoji: \"🇷🇴\", i18n: \"ro\" },\n    ru: { display: \"Русский\", emoji: \"🇷🇺\", i18n: \"ru\" },\n    sk: { display: \"Slovensky\", emoji: \"🇸🇰\", i18n: \"sk\" },\n    sl: { display: \"Slovenščina\", emoji: \"🇸🇮\", i18n: \"sl\" },\n    sr: { display: \"Српски\", emoji: \"🇷🇸\", i18n: \"sr\" },\n    sv: { display: \"Svenska\", emoji: \"🇸🇪\", i18n: \"sv\" },\n    ta: { display: \"தமிழ்\", emoji: \"🇱🇰\", i18n: \"ta\" },\n    th: { display: \"ไทย\", emoji: \"🇹🇭\", i18n: \"th\" },\n    tr: { display: \"Türkçe\", emoji: \"🇹🇷\", i18n: \"tr\" },\n    uk: { display: \"Українська\", emoji: \"🇺🇦\", i18n: \"uk\" },\n    vi: { display: \"Tiếng Việt\", emoji: \"🇻🇳\", i18n: \"vi\" },\n    zh_Hans: {\n        display: \"中文 (简体)\",\n        emoji: \"🇨🇳\",\n        i18n: \"zh_Hans\",\n        dayjs: \"zh\",\n    },\n\n    tokipona: {\n        display: \"Toki Pona\",\n        emoji: \"🙂\",\n        i18n: \"tokipona\",\n        dayjs: \"en-gb\",\n        cat: \"const\",\n    },\n\n    owo: {\n        display: \"OwO\",\n        emoji: \"😸\",\n        i18n: \"owo\",\n        dayjs: \"en-gb\",\n        cat: \"alt\",\n    },\n    pr: {\n        display: \"Pirate\",\n        emoji: \"🏴‍☠️\",\n        i18n: \"pr\",\n        dayjs: \"en-gb\",\n        cat: \"alt\",\n    },\n    bottom: {\n        display: \"Bottom\",\n        emoji: \"🥺\",\n        i18n: \"bottom\",\n        dayjs: \"en-gb\",\n        cat: \"alt\",\n    },\n    leet: {\n        display: \"1337\",\n        emoji: \"💾\",\n        i18n: \"leet\",\n        dayjs: \"en-gb\",\n        cat: \"alt\",\n    },\n    enchantment: {\n        display: \"Enchantment Table\",\n        emoji: \"🪄\",\n        i18n: \"enchantment\",\n        dayjs: \"en-gb\",\n        cat: \"alt\",\n    },\n    piglatin: {\n        display: \"Pig Latin\",\n        emoji: \"🐖\",\n        i18n: \"piglatin\",\n        dayjs: \"en-gb\",\n        cat: \"alt\",\n    },\n};\n\ninterface Props {\n    children: JSX.Element | JSX.Element[];\n    locale: Language;\n}\n\nexport interface Dictionary {\n    dayjs?: {\n        defaults?: {\n            twelvehour?: \"yes\" | \"no\";\n            separator?: string;\n            date?: \"traditional\" | \"simplified\" | \"ISO8601\";\n        };\n        timeFormat?: string;\n    };\n    [key: string]:\n        | Record<string, Omit<Dictionary, \"dayjs\">>\n        | string\n        | undefined;\n}\n\nfunction Locale({ children, locale }: Props) {\n    const [defns, setDefinition] = useState<Dictionary>(\n        definition as Dictionary,\n    );\n\n    // Load relevant language information, fallback to English if invalid.\n    const lang = Languages[locale] ?? Languages.en;\n\n    function transformLanguage(source: Dictionary) {\n        // Fallback untranslated strings to English (UK)\n        const obj = defaultsDeep(source, definition);\n\n        // Take relevant objects out, dayjs and defaults\n        // should exist given we just took defaults above.\n        const { dayjs } = obj;\n        const { defaults } = dayjs;\n\n        // Determine whether we are using 12-hour clock.\n        const twelvehour = defaults?.twelvehour\n            ? defaults.twelvehour === \"yes\"\n            : false;\n\n        // Determine what date separator we are using.\n        const separator: string = defaults?.date_separator ?? \"/\";\n\n        // Determine what date format we are using.\n        const date: \"traditional\" | \"simplified\" | \"ISO8601\" =\n            defaults?.date_format ?? \"traditional\";\n\n        // Available date formats.\n        const DATE_FORMATS = {\n            traditional: `DD${separator}MM${separator}YYYY`,\n            simplified: `MM${separator}DD${separator}YYYY`,\n            ISO8601: \"YYYY-MM-DD\",\n        };\n\n        // Replace data in dayjs object, make sure to provide fallbacks.\n        dayjs[\"sameElse\"] = DATE_FORMATS[date] ?? DATE_FORMATS.traditional;\n        dayjs[\"timeFormat\"] = twelvehour ? \"hh:mm A\" : \"HH:mm\";\n\n        // Replace {{time}} format string in dayjs strings with the time format.\n        Object.keys(dayjs)\n            .filter((k) => typeof dayjs[k] === \"string\")\n            .forEach(\n                (k) =>\n                    (dayjs[k] = dayjs[k].replace(\n                        /{{time}}/g,\n                        dayjs[\"timeFormat\"],\n                    )),\n            );\n\n        return obj;\n    }\n\n    const loadLanguage = useCallback(\n        (locale: string) => {\n            if (locale === \"en\") {\n                // If English, make sure to restore everything to defaults.\n                // Use what we already have.\n                const defn = transformLanguage(definition as Dictionary);\n                setDefinition(defn);\n                dayjs.locale(\"en\");\n                dayjs.updateLocale(\"en\", { calendar: defn.dayjs });\n                return;\n            }\n\n            import(`../../external/lang/${lang.i18n}.json`).then(\n                async (lang_file) => {\n                    // Transform the definitions data.\n                    const defn = transformLanguage(lang_file.default);\n\n                    // Determine and load dayjs locales.\n                    const target = lang.dayjs ?? lang.i18n;\n                    const dayjs_locale = await import(\n                        `../../node_modules/dayjs/esm/locale/${target}.js`\n                    );\n\n                    // Load dayjs locales.\n                    dayjs.locale(target, dayjs_locale.default);\n\n                    if (defn.dayjs) {\n                        // Override dayjs calendar locales with our own.\n                        dayjs.updateLocale(target, { calendar: defn.dayjs });\n                    }\n\n                    // Apply definition to app.\n                    setDefinition(defn);\n                },\n            );\n        },\n        [lang.dayjs, lang.i18n],\n    );\n\n    useEffect(() => loadLanguage(locale), [locale, lang, loadLanguage]);\n\n    useEffect(() => {\n        // Apply RTL language format.\n        document.body.style.direction = lang.rtl ? \"rtl\" : \"\";\n    }, [lang.rtl]);\n\n    return <IntlProvider definition={defns}>{children}</IntlProvider>;\n}\n\nexport default connectState<Omit<Props, \"locale\">>(\n    Locale,\n    (state) => {\n        return {\n            locale: state.locale,\n        };\n    },\n    true,\n);\n","import { Channel } from \"revolt.js/dist/maps/Channels\";\nimport { Message } from \"revolt.js/dist/maps/Messages\";\n\nimport type { SyncUpdateAction } from \"./sync\";\n\nexport type NotificationState = \"all\" | \"mention\" | \"none\" | \"muted\";\n\nexport type Notifications = {\n    [key: string]: NotificationState;\n};\n\nexport const DEFAULT_STATES: {\n    [key in Channel[\"channel_type\"]]: NotificationState;\n} = {\n    SavedMessages: \"all\",\n    DirectMessage: \"all\",\n    Group: \"all\",\n    TextChannel: \"mention\",\n    VoiceChannel: \"mention\",\n};\n\nexport function getNotificationState(\n    notifications: Notifications,\n    channel: Channel,\n) {\n    return notifications[channel._id] ?? DEFAULT_STATES[channel.channel_type];\n}\n\nexport function shouldNotify(\n    state: NotificationState,\n    message: Message,\n    user_id: string,\n) {\n    switch (state) {\n        case \"muted\":\n        case \"none\":\n            return false;\n        case \"mention\": {\n            if (!message.mention_ids?.includes(user_id)) return false;\n        }\n    }\n\n    return true;\n}\n\nexport type NotificationsAction =\n    | { type: undefined }\n    | {\n          type: \"NOTIFICATIONS_SET\";\n          key: string;\n          state: NotificationState;\n      }\n    | {\n          type: \"NOTIFICATIONS_REMOVE\";\n          key: string;\n      }\n    | SyncUpdateAction\n    | {\n          type: \"RESET\";\n      };\n\nexport function notifications(\n    state = {} as Notifications,\n    action: NotificationsAction,\n): Notifications {\n    switch (action.type) {\n        case \"NOTIFICATIONS_SET\":\n            return {\n                ...state,\n                [action.key]: action.state,\n            };\n        case \"NOTIFICATIONS_REMOVE\": {\n            const { [action.key]: _, ...newState } = state;\n            return newState;\n        }\n        case \"SYNC_UPDATE\":\n            return action.update.notifications?.[1] ?? state;\n        case \"RESET\":\n            return {};\n        default:\n            return state;\n    }\n}\n","export enum QueueStatus {\n    SENDING = \"sending\",\n    ERRORED = \"errored\",\n}\n\nexport interface Reply {\n    id: string;\n    mention: boolean;\n}\n\nexport type QueuedMessageData = {\n    _id: string;\n    author: string;\n    channel: string;\n\n    content: string;\n    replies: Reply[];\n};\n\nexport interface QueuedMessage {\n    id: string;\n    channel: string;\n    data: QueuedMessageData;\n    status: QueueStatus;\n    error?: string;\n}\n\nexport type QueueAction =\n    | { type: undefined }\n    | {\n          type: \"QUEUE_ADD\";\n          nonce: string;\n          channel: string;\n          message: QueuedMessageData;\n      }\n    | {\n          type: \"QUEUE_FAIL\";\n          nonce: string;\n          error: string;\n      }\n    | {\n          type: \"QUEUE_START\";\n          nonce: string;\n      }\n    | {\n          type: \"QUEUE_REMOVE\";\n          nonce: string;\n      }\n    | {\n          type: \"QUEUE_DROP_ALL\";\n      }\n    | {\n          type: \"QUEUE_FAIL_ALL\";\n      }\n    | {\n          type: \"RESET\";\n      };\n\nexport function queue(\n    state: QueuedMessage[] = [],\n    action: QueueAction,\n): QueuedMessage[] {\n    switch (action.type) {\n        case \"QUEUE_ADD\": {\n            return [\n                ...state.filter((x) => x.id !== action.nonce),\n                {\n                    id: action.nonce,\n                    data: action.message,\n                    channel: action.channel,\n                    status: QueueStatus.SENDING,\n                },\n            ];\n        }\n        case \"QUEUE_FAIL\": {\n            const entry = state.find(\n                (x) => x.id === action.nonce,\n            ) as QueuedMessage;\n            return [\n                ...state.filter((x) => x.id !== action.nonce),\n                {\n                    ...entry,\n                    status: QueueStatus.ERRORED,\n                    error: action.error,\n                },\n            ];\n        }\n        case \"QUEUE_START\": {\n            const entry = state.find(\n                (x) => x.id === action.nonce,\n            ) as QueuedMessage;\n            return [\n                ...state.filter((x) => x.id !== action.nonce),\n                {\n                    ...entry,\n                    status: QueueStatus.SENDING,\n                },\n            ];\n        }\n        case \"QUEUE_REMOVE\":\n            return state.filter((x) => x.id !== action.nonce);\n        case \"QUEUE_FAIL_ALL\":\n            return state.map((x) => {\n                return {\n                    ...x,\n                    status: QueueStatus.ERRORED,\n                };\n            });\n        case \"QUEUE_DROP_ALL\":\n        case \"RESET\":\n            return [];\n        default:\n            return state;\n    }\n}\n","import { EmojiPacks } from \"../../redux/reducers/settings\";\n\nlet EMOJI_PACK = \"mutant\";\nconst REVISION = 3;\n\nexport function setEmojiPack(pack: EmojiPacks) {\n    EMOJI_PACK = pack;\n}\n\n// Originally taken from Twemoji source code,\n// re-written by bree to be more readable.\nfunction codePoints(rune: string) {\n    const pairs = [];\n    let low = 0;\n    let i = 0;\n\n    while (i < rune.length) {\n        const charCode = rune.charCodeAt(i++);\n        if (low) {\n            pairs.push(0x10000 + ((low - 0xd800) << 10) + (charCode - 0xdc00));\n            low = 0;\n        } else if (0xd800 <= charCode && charCode <= 0xdbff) {\n            low = charCode;\n        } else {\n            pairs.push(charCode);\n        }\n    }\n\n    return pairs;\n}\n\n// Taken from Twemoji source code.\n// scripts/build.js#344\n// grabTheRightIcon(rawText);\nconst UFE0Fg = /\\uFE0F/g;\nconst U200D = String.fromCharCode(0x200d);\nfunction toCodePoint(rune: string) {\n    return codePoints(rune.indexOf(U200D) < 0 ? rune.replace(UFE0Fg, \"\") : rune)\n        .map((val) => val.toString(16))\n        .join(\"-\");\n}\n\nfunction parseEmoji(emoji: string) {\n    const codepoint = toCodePoint(emoji);\n    return `https://static.revolt.chat/emoji/${EMOJI_PACK}/${codepoint}.svg?rev=${REVISION}`;\n}\n\nexport default function Emoji({\n    emoji,\n    size,\n}: {\n    emoji: string;\n    size?: number;\n}) {\n    return (\n        <img\n            alt={emoji}\n            loading=\"lazy\"\n            className=\"emoji\"\n            draggable={false}\n            src={parseEmoji(emoji)}\n            style={\n                size ? { width: `${size}px`, height: `${size}px` } : undefined\n            }\n        />\n    );\n}\n\nexport function generateEmoji(emoji: string) {\n    return `<img loading=\"lazy\" class=\"emoji\" draggable=\"false\" alt=\"${emoji}\" src=\"${parseEmoji(\n        emoji,\n    )}\" />`;\n}\n","import type { Theme, ThemeOptions } from \"../../context/Theme\";\n\nimport { setEmojiPack } from \"../../components/common/Emoji\";\n\nimport type { Sounds } from \"../../assets/sounds/Audio\";\nimport type { SyncUpdateAction } from \"./sync\";\n\nexport type SoundOptions = {\n    [key in Sounds]?: boolean;\n};\n\nexport const DEFAULT_SOUNDS: SoundOptions = {\n    message: true,\n    outbound: false,\n    call_join: true,\n    call_leave: true,\n};\n\nexport interface NotificationOptions {\n    desktopEnabled?: boolean;\n    sounds?: SoundOptions;\n}\n\nexport type EmojiPacks = \"mutant\" | \"twemoji\" | \"noto\" | \"openmoji\";\nexport interface AppearanceOptions {\n    emojiPack?: EmojiPacks;\n}\n\nexport interface Settings {\n    theme?: ThemeOptions;\n    appearance?: AppearanceOptions;\n    notification?: NotificationOptions;\n}\n\nexport type SettingsAction =\n    | { type: undefined }\n    | {\n          type: \"SETTINGS_SET_THEME\";\n          theme: ThemeOptions;\n      }\n    | {\n          type: \"SETTINGS_SET_THEME_OVERRIDE\";\n          custom?: Partial<Theme>;\n      }\n    | {\n          type: \"SETTINGS_SET_NOTIFICATION_OPTIONS\";\n          options: NotificationOptions;\n      }\n    | {\n          type: \"SETTINGS_SET_APPEARANCE\";\n          options: Partial<AppearanceOptions>;\n      }\n    | SyncUpdateAction\n    | {\n          type: \"RESET\";\n      };\n\nexport function settings(\n    state = {} as Settings,\n    action: SettingsAction,\n): Settings {\n    setEmojiPack(state.appearance?.emojiPack ?? \"mutant\");\n\n    switch (action.type) {\n        case \"SETTINGS_SET_THEME\":\n            return {\n                ...state,\n                theme: {\n                    ...state.theme,\n                    ...action.theme,\n                },\n            };\n        case \"SETTINGS_SET_THEME_OVERRIDE\":\n            return {\n                ...state,\n                theme: {\n                    ...state.theme,\n                    custom: {\n                        ...state.theme?.custom,\n                        ...action.custom,\n                    },\n                },\n            };\n        case \"SETTINGS_SET_NOTIFICATION_OPTIONS\":\n            return {\n                ...state,\n                notification: {\n                    ...state.notification,\n                    ...action.options,\n                },\n            };\n        case \"SETTINGS_SET_APPEARANCE\":\n            return {\n                ...state,\n                appearance: {\n                    ...state.appearance,\n                    ...action.options,\n                },\n            };\n        case \"SYNC_UPDATE\":\n            return {\n                ...state,\n                appearance: action.update.appearance?.[1] ?? state.appearance,\n                theme: action.update.theme?.[1] ?? state.theme,\n            };\n        case \"RESET\":\n            return {};\n        default:\n            return state;\n    }\n}\n","import type { Language } from \"../../context/Locale\";\nimport type { ThemeOptions } from \"../../context/Theme\";\n\nimport type { Notifications } from \"./notifications\";\nimport type { AppearanceOptions } from \"./settings\";\n\nexport type SyncKeys = \"theme\" | \"appearance\" | \"locale\" | \"notifications\";\n\nexport interface SyncData {\n    locale?: Language;\n    theme?: ThemeOptions;\n    appearance?: AppearanceOptions;\n    notifications?: Notifications;\n}\n\nexport const DEFAULT_ENABLED_SYNC: SyncKeys[] = [\n    \"theme\",\n    \"appearance\",\n    \"locale\",\n    \"notifications\",\n];\nexport interface SyncOptions {\n    disabled?: SyncKeys[];\n    revision?: {\n        [key: string]: number;\n    };\n}\n\nexport type SyncUpdateAction = {\n    type: \"SYNC_UPDATE\";\n    update: { [key in SyncKeys]?: [number, SyncData[key]] };\n};\n\nexport type SyncAction =\n    | { type: undefined }\n    | {\n          type: \"SYNC_ENABLE_KEY\";\n          key: SyncKeys;\n      }\n    | {\n          type: \"SYNC_DISABLE_KEY\";\n          key: SyncKeys;\n      }\n    | {\n          type: \"SYNC_SET_REVISION\";\n          key: SyncKeys;\n          timestamp: number;\n      }\n    | SyncUpdateAction;\n\nexport function sync(\n    state = {} as SyncOptions,\n    action: SyncAction,\n): SyncOptions {\n    switch (action.type) {\n        case \"SYNC_DISABLE_KEY\":\n            return {\n                ...state,\n                disabled: [\n                    ...(state.disabled ?? []).filter((v) => v !== action.key),\n                    action.key,\n                ],\n            };\n        case \"SYNC_ENABLE_KEY\":\n            return {\n                ...state,\n                disabled: state.disabled?.filter((v) => v !== action.key),\n            };\n        case \"SYNC_SET_REVISION\":\n            return {\n                ...state,\n                revision: {\n                    ...state.revision,\n                    [action.key]: action.timestamp,\n                },\n            };\n        case \"SYNC_UPDATE\": {\n            const revision = { ...state.revision };\n            for (const key of Object.keys(action.update)) {\n                const value = action.update[key as SyncKeys];\n                if (value) {\n                    revision[key] = value[0];\n                }\n            }\n\n            return {\n                ...state,\n                revision,\n            };\n        }\n        default:\n            return state;\n    }\n}\n","import { combineReducers } from \"redux\";\n\nimport { State } from \"..\";\nimport { auth, AuthAction } from \"./auth\";\nimport { drafts, DraftAction } from \"./drafts\";\nimport { experiments, ExperimentsAction } from \"./experiments\";\nimport { lastOpened, LastOpenedAction } from \"./last_opened\";\nimport { locale, LocaleAction } from \"./locale\";\nimport { notifications, NotificationsAction } from \"./notifications\";\nimport { queue, QueueAction } from \"./queue\";\nimport { sectionToggle, SectionToggleAction } from \"./section_toggle\";\nimport { config, ConfigAction } from \"./server_config\";\nimport { settings, SettingsAction } from \"./settings\";\nimport { sync, SyncAction } from \"./sync\";\nimport { themes, ThemesAction } from \"./themes\";\nimport { trustedLinks, TrustedLinksAction } from \"./trusted_links\";\nimport { unreads, UnreadsAction } from \"./unreads\";\n\nexport default combineReducers({\n    config,\n    locale,\n    auth,\n    settings,\n    unreads,\n    queue,\n    drafts,\n    sync,\n    experiments,\n    lastOpened,\n    notifications,\n    sectionToggle,\n    trustedLinks,\n    themes,\n});\n\nexport type Action =\n    | ConfigAction\n    | LocaleAction\n    | AuthAction\n    | SettingsAction\n    | UnreadsAction\n    | QueueAction\n    | DraftAction\n    | SyncAction\n    | ExperimentsAction\n    | LastOpenedAction\n    | NotificationsAction\n    | SectionToggleAction\n    | TrustedLinksAction\n    | ThemesAction\n    | { type: \"__INIT\"; state: State };\n","import type { RevoltConfiguration } from \"revolt-api/types/Core\";\n\nexport type ConfigAction =\n    | { type: undefined }\n    | {\n          type: \"SET_CONFIG\";\n          config: RevoltConfiguration;\n      };\n\nexport function config(\n    state = {} as RevoltConfiguration,\n    action: ConfigAction,\n): RevoltConfiguration {\n    switch (action.type) {\n        case \"SET_CONFIG\":\n            return action.config;\n        default:\n            return state;\n    }\n}\n","import { Language, Languages } from \"../../context/Locale\";\n\nimport type { SyncUpdateAction } from \"./sync\";\n\nexport type LocaleAction =\n    | { type: undefined }\n    | {\n          type: \"SET_LOCALE\";\n          locale: Language;\n      }\n    | SyncUpdateAction;\n\nexport function findLanguage(lang?: string): Language {\n    if (!lang) {\n        if (typeof navigator === \"undefined\") {\n            lang = Language.ENGLISH;\n        } else {\n            lang = navigator.language;\n        }\n    }\n\n    const code = lang.replace(\"-\", \"_\");\n    const short = code.split(\"_\")[0];\n\n    const values = [];\n    for (const key in Language) {\n        const value = Language[key as keyof typeof Language];\n\n        // Skip alternative/joke languages\n        if (Languages[value].cat === \"alt\") continue;\n\n        values.push(value);\n        if (value.startsWith(code)) {\n            return value as Language;\n        }\n    }\n\n    for (const value of values.reverse()) {\n        if (value.startsWith(short)) {\n            return value as Language;\n        }\n    }\n\n    return Language.ENGLISH;\n}\n\nexport function locale(state = findLanguage(), action: LocaleAction): Language {\n    switch (action.type) {\n        case \"SET_LOCALE\":\n            return action.locale;\n        case \"SYNC_UPDATE\":\n            return (action.update.locale?.[1] ?? state) as Language;\n        default:\n            return state;\n    }\n}\n","import { Session } from \"revolt-api/types/Auth\";\n\nexport interface AuthState {\n    accounts: {\n        [key: string]: {\n            session: Session;\n        };\n    };\n    active?: string;\n}\n\nexport type AuthAction =\n    | { type: undefined }\n    | {\n          type: \"LOGIN\";\n          session: Session;\n      }\n    | {\n          type: \"LOGOUT\";\n          user_id?: string;\n      };\n\nexport function auth(\n    state = { accounts: {} } as AuthState,\n    action: AuthAction,\n): AuthState {\n    switch (action.type) {\n        case \"LOGIN\":\n            return {\n                accounts: {\n                    ...state.accounts,\n                    [action.session.user_id]: {\n                        session: action.session,\n                    },\n                },\n                active: action.session.user_id,\n            };\n        case \"LOGOUT\": {\n            const accounts = Object.assign({}, state.accounts);\n            action.user_id && delete accounts[action.user_id];\n\n            return {\n                accounts,\n            };\n        }\n        default:\n            return state;\n    }\n}\n","import type { ChannelUnread } from \"revolt-api/types/Sync\";\nimport { ulid } from \"ulid\";\n\nexport interface Unreads {\n    [key: string]: Partial<Omit<ChannelUnread, \"_id\">>;\n}\n\nexport type UnreadsAction =\n    | { type: undefined }\n    | {\n          type: \"UNREADS_MARK_READ\";\n          channel: string;\n          message: string;\n      }\n    | {\n          type: \"UNREADS_MARK_MULTIPLE_READ\";\n          channels: string[];\n      }\n    | {\n          type: \"UNREADS_SET\";\n          unreads: ChannelUnread[];\n      }\n    | {\n          type: \"UNREADS_MENTION\";\n          channel: string;\n          message: string;\n      }\n    | {\n          type: \"RESET\";\n      };\n\nexport function unreads(state = {} as Unreads, action: UnreadsAction): Unreads {\n    switch (action.type) {\n        case \"UNREADS_MARK_READ\":\n            return {\n                ...state,\n                [action.channel]: {\n                    last_id: action.message,\n                },\n            };\n        case \"UNREADS_MARK_MULTIPLE_READ\": {\n            const newState = { ...state };\n            const last_id = ulid();\n            for (const channel of action.channels) {\n                newState[channel] = {\n                    last_id,\n                };\n            }\n\n            return newState;\n        }\n        case \"UNREADS_SET\": {\n            const obj: Unreads = {};\n            for (const entry of action.unreads) {\n                const { _id, ...v } = entry;\n                obj[_id.channel] = v;\n            }\n\n            return obj;\n        }\n        case \"UNREADS_MENTION\": {\n            const obj = state[action.channel];\n\n            return {\n                ...state,\n                [action.channel]: {\n                    ...obj,\n                    mentions: [...(obj?.mentions ?? []), action.message],\n                },\n            };\n        }\n        case \"RESET\":\n            return {};\n        default:\n            return state;\n    }\n}\n","export type Drafts = { [key: string]: string };\n\nexport type DraftAction =\n    | { type: undefined }\n    | {\n          type: \"SET_DRAFT\";\n          channel: string;\n          content: string;\n      }\n    | {\n          type: \"CLEAR_DRAFT\";\n          channel: string;\n      }\n    | {\n          type: \"RESET\";\n      };\n\nexport function drafts(state: Drafts = {}, action: DraftAction): Drafts {\n    switch (action.type) {\n        case \"SET_DRAFT\":\n            return {\n                ...state,\n                [action.channel]: action.content,\n            };\n        case \"CLEAR_DRAFT\": {\n            // eslint-disable-next-line @typescript-eslint/no-unused-vars\n            const { [action.channel]: _, ...newState } = state;\n            return newState;\n        }\n        case \"RESET\":\n            return {};\n        default:\n            return state;\n    }\n}\n","export interface LastOpened {\n    [key: string]: string;\n}\n\nexport type LastOpenedAction =\n    | { type: undefined }\n    | {\n          type: \"LAST_OPENED_SET\";\n          parent: string;\n          child: string;\n      }\n    | {\n          type: \"RESET\";\n      };\n\nexport function lastOpened(\n    state = {} as LastOpened,\n    action: LastOpenedAction,\n): LastOpened {\n    switch (action.type) {\n        case \"LAST_OPENED_SET\": {\n            return {\n                ...state,\n                [action.parent]: action.child,\n            };\n        }\n        case \"RESET\":\n            return {};\n        default:\n            return state;\n    }\n}\n","export interface SectionToggle {\n    [key: string]: boolean;\n}\n\nexport type SectionToggleAction =\n    | { type: undefined }\n    | {\n          type: \"SECTION_TOGGLE_SET\";\n          id: string;\n          state: boolean;\n      }\n    | {\n          type: \"SECTION_TOGGLE_UNSET\";\n          id: string;\n      }\n    | {\n          type: \"RESET\";\n      };\n\nexport function sectionToggle(\n    state = {} as SectionToggle,\n    action: SectionToggleAction,\n): SectionToggle {\n    switch (action.type) {\n        case \"SECTION_TOGGLE_SET\": {\n            return {\n                ...state,\n                [action.id]: action.state,\n            };\n        }\n        case \"SECTION_TOGGLE_UNSET\": {\n            const { [action.id]: _, ...newState } = state;\n            return newState;\n        }\n        case \"RESET\":\n            return {};\n        default:\n            return state;\n    }\n}\n","export interface TrustedLinks {\n    domains?: string[];\n}\n\nexport type TrustedLinksAction =\n    | { type: undefined }\n    | {\n          type: \"TRUSTED_LINKS_ADD_DOMAIN\";\n          domain: string;\n      }\n    | {\n          type: \"TRUSTED_LINKS_REMOVE_DOMAIN\";\n          domain: string;\n      };\n\nexport function trustedLinks(\n    state = {} as TrustedLinks,\n    action: TrustedLinksAction,\n): TrustedLinks {\n    switch (action.type) {\n        case \"TRUSTED_LINKS_ADD_DOMAIN\":\n            return {\n                ...state,\n                domains: [\n                    ...(state.domains ?? []).filter((v) => v !== action.domain),\n                    action.domain,\n                ],\n            };\n        case \"TRUSTED_LINKS_REMOVE_DOMAIN\":\n            return {\n                ...state,\n                domains: state.domains?.filter((v) => v !== action.domain),\n            };\n        default:\n            return state;\n    }\n}\n","import { Theme } from \"../../context/Theme\";\n\nimport { ThemeMetadata } from \"../../pages/settings/panes/ThemeShop\";\n\nexport interface StoredTheme {\n    slug: string;\n    meta: ThemeMetadata;\n    theme: Theme;\n}\n\nexport type Themes = Record<string, StoredTheme>;\n\nexport type ThemesAction =\n    | { type: undefined }\n    | { type: \"THEMES_SET_THEME\"; theme: StoredTheme }\n    | { type: \"THEMES_REMOVE_THEME\"; slug: string }\n    | { type: \"RESET\" };\n\nexport function themes(state: Themes = {}, action: ThemesAction) {\n    switch (action.type) {\n        case \"THEMES_SET_THEME\":\n            return {\n                ...state,\n                [action.theme.slug]: action.theme,\n            };\n        case \"THEMES_REMOVE_THEME\":\n            return { ...state, [action.slug]: null };\n        case \"RESET\":\n            return {};\n        default:\n            return state;\n    }\n}\n","import localForage from \"localforage\";\nimport { createStore } from \"redux\";\nimport { RevoltConfiguration } from \"revolt-api/types/Core\";\n\nimport { Language } from \"../context/Locale\";\n\nimport rootReducer, { Action } from \"./reducers\";\nimport { AuthState } from \"./reducers/auth\";\nimport { Drafts } from \"./reducers/drafts\";\nimport { ExperimentOptions } from \"./reducers/experiments\";\nimport { LastOpened } from \"./reducers/last_opened\";\nimport { Notifications } from \"./reducers/notifications\";\nimport { QueuedMessage } from \"./reducers/queue\";\nimport { SectionToggle } from \"./reducers/section_toggle\";\nimport { Settings } from \"./reducers/settings\";\nimport { SyncOptions } from \"./reducers/sync\";\nimport { Themes } from \"./reducers/themes\";\nimport { TrustedLinks } from \"./reducers/trusted_links\";\nimport { Unreads } from \"./reducers/unreads\";\n\nexport type State = {\n    config: RevoltConfiguration;\n    locale: Language;\n    auth: AuthState;\n    settings: Settings;\n    unreads: Unreads;\n    queue: QueuedMessage[];\n    drafts: Drafts;\n    sync: SyncOptions;\n    experiments: ExperimentOptions;\n    lastOpened: LastOpened;\n    notifications: Notifications;\n    sectionToggle: SectionToggle;\n    trustedLinks: TrustedLinks;\n    themes: Themes;\n};\n\n// eslint-disable-next-line @typescript-eslint/no-explicit-any\nexport const store = createStore((state: any, action: any) => {\n    if (import.meta.env.DEV) {\n        console.debug(\"State Update:\", action);\n    }\n\n    if (action.type === \"__INIT\") {\n        return action.state;\n    }\n\n    return rootReducer(state, action);\n});\n\n// Save state using localForage.\nstore.subscribe(() => {\n    const {\n        config,\n        locale,\n        auth,\n        settings,\n        unreads,\n        queue,\n        drafts,\n        sync,\n        experiments,\n        lastOpened,\n        notifications,\n        sectionToggle,\n        trustedLinks,\n        themes,\n    } = store.getState() as State;\n\n    localForage.setItem(\"state\", {\n        config,\n        locale,\n        auth,\n        settings,\n        unreads,\n        queue,\n        drafts,\n        sync,\n        experiments,\n        lastOpened,\n        notifications,\n        sectionToggle,\n        trustedLinks,\n        themes,\n    });\n});\n\nexport function dispatch(action: Action) {\n    store.dispatch(action);\n}\n\nexport function getState(): State {\n    return store.getState();\n}\n","import { Helmet } from \"react-helmet\";\nimport { createGlobalStyle } from \"styled-components\";\n\nimport { createContext } from \"preact\";\nimport { useEffect } from \"preact/hooks\";\n\nimport { connectState } from \"../redux/connector\";\n\nimport { Children } from \"../types/Preact\";\nimport { fetchManifest, fetchTheme } from \"../pages/settings/panes/ThemeShop\";\nimport { getState } from \"../redux\";\n\nexport type Variables =\n    | \"accent\"\n    | \"background\"\n    | \"foreground\"\n    | \"block\"\n    | \"message-box\"\n    | \"mention\"\n    | \"success\"\n    | \"warning\"\n    | \"error\"\n    | \"hover\"\n    | \"scrollbar-thumb\"\n    | \"scrollbar-track\"\n    | \"primary-background\"\n    | \"primary-header\"\n    | \"secondary-background\"\n    | \"secondary-foreground\"\n    | \"secondary-header\"\n    | \"tertiary-background\"\n    | \"tertiary-foreground\"\n    | \"status-online\"\n    | \"status-away\"\n    | \"status-busy\"\n    | \"status-streaming\"\n    | \"status-invisible\";\n\n// While this isn't used, it'd be good to keep this up to date as a reference or for future use\nexport type HiddenVariables =\n    | \"font\"\n    | \"ligatures\"\n    | \"app-height\"\n    | \"sidebar-active\"\n    | \"monospace-font\";\n\nexport type Fonts =\n    | \"Open Sans\"\n    | \"Inter\"\n    | \"Atkinson Hyperlegible\"\n    | \"Roboto\"\n    | \"Noto Sans\"\n    | \"Lato\"\n    | \"Bree Serif\"\n    | \"Montserrat\"\n    | \"Poppins\"\n    | \"Raleway\"\n    | \"Ubuntu\"\n    | \"Comic Neue\";\nexport type MonospaceFonts =\n    | \"Fira Code\"\n    | \"Roboto Mono\"\n    | \"Source Code Pro\"\n    | \"Space Mono\"\n    | \"Ubuntu Mono\";\n\nexport type Theme = {\n    [variable in Variables]: string;\n} & {\n    light?: boolean;\n    font?: Fonts;\n    css?: string;\n    monospaceFont?: MonospaceFonts;\n};\n\nexport interface ThemeOptions {\n    base?: string;\n    ligatures?: boolean;\n    custom?: Partial<Theme>;\n}\n\nexport const FONTS: Record<Fonts, { name: string; load: () => void }> = {\n    \"Open Sans\": {\n        name: \"Open Sans\",\n        load: async () => {\n            await import(\"@fontsource/open-sans/300.css\");\n            await import(\"@fontsource/open-sans/400.css\");\n            await import(\"@fontsource/open-sans/600.css\");\n            await import(\"@fontsource/open-sans/700.css\");\n            await import(\"@fontsource/open-sans/400-italic.css\");\n        },\n    },\n    Inter: {\n        name: \"Inter\",\n        load: async () => {\n            await import(\"@fontsource/inter/300.css\");\n            await import(\"@fontsource/inter/400.css\");\n            await import(\"@fontsource/inter/600.css\");\n            await import(\"@fontsource/inter/700.css\");\n        },\n    },\n    \"Atkinson Hyperlegible\": {\n        name: \"Atkinson Hyperlegible\",\n        load: async () => {\n            await import(\"@fontsource/atkinson-hyperlegible/400.css\");\n            await import(\"@fontsource/atkinson-hyperlegible/700.css\");\n            await import(\"@fontsource/atkinson-hyperlegible/400-italic.css\");\n        },\n    },\n    Roboto: {\n        name: \"Roboto\",\n        load: async () => {\n            await import(\"@fontsource/roboto/400.css\");\n            await import(\"@fontsource/roboto/700.css\");\n            await import(\"@fontsource/roboto/400-italic.css\");\n        },\n    },\n    \"Noto Sans\": {\n        name: \"Noto Sans\",\n        load: async () => {\n            await import(\"@fontsource/noto-sans/400.css\");\n            await import(\"@fontsource/noto-sans/700.css\");\n            await import(\"@fontsource/noto-sans/400-italic.css\");\n        },\n    },\n    \"Bree Serif\": {\n        name: \"Bree Serif\",\n        load: () => import(\"@fontsource/bree-serif/400.css\"),\n    },\n    Lato: {\n        name: \"Lato\",\n        load: async () => {\n            await import(\"@fontsource/lato/300.css\");\n            await import(\"@fontsource/lato/400.css\");\n            await import(\"@fontsource/lato/700.css\");\n            await import(\"@fontsource/lato/400-italic.css\");\n        },\n    },\n    Montserrat: {\n        name: \"Montserrat\",\n        load: async () => {\n            await import(\"@fontsource/montserrat/300.css\");\n            await import(\"@fontsource/montserrat/400.css\");\n            await import(\"@fontsource/montserrat/600.css\");\n            await import(\"@fontsource/montserrat/700.css\");\n            await import(\"@fontsource/montserrat/400-italic.css\");\n        },\n    },\n    Poppins: {\n        name: \"Poppins\",\n        load: async () => {\n            await import(\"@fontsource/poppins/300.css\");\n            await import(\"@fontsource/poppins/400.css\");\n            await import(\"@fontsource/poppins/600.css\");\n            await import(\"@fontsource/poppins/700.css\");\n            await import(\"@fontsource/poppins/400-italic.css\");\n        },\n    },\n    Raleway: {\n        name: \"Raleway\",\n        load: async () => {\n            await import(\"@fontsource/raleway/300.css\");\n            await import(\"@fontsource/raleway/400.css\");\n            await import(\"@fontsource/raleway/600.css\");\n            await import(\"@fontsource/raleway/700.css\");\n            await import(\"@fontsource/raleway/400-italic.css\");\n        },\n    },\n    Ubuntu: {\n        name: \"Ubuntu\",\n        load: async () => {\n            await import(\"@fontsource/ubuntu/300.css\");\n            await import(\"@fontsource/ubuntu/400.css\");\n            await import(\"@fontsource/ubuntu/500.css\");\n            await import(\"@fontsource/ubuntu/700.css\");\n            await import(\"@fontsource/ubuntu/400-italic.css\");\n        },\n    },\n    \"Comic Neue\": {\n        name: \"Comic Neue\",\n        load: async () => {\n            await import(\"@fontsource/comic-neue/300.css\");\n            await import(\"@fontsource/comic-neue/400.css\");\n            await import(\"@fontsource/comic-neue/700.css\");\n            await import(\"@fontsource/comic-neue/400-italic.css\");\n        },\n    },\n};\n\nexport const MONOSPACE_FONTS: Record<\n    MonospaceFonts,\n    { name: string; load: () => void }\n> = {\n    \"Fira Code\": {\n        name: \"Fira Code\",\n        load: () => import(\"@fontsource/fira-code/400.css\"),\n    },\n    \"Roboto Mono\": {\n        name: \"Roboto Mono\",\n        load: () => import(\"@fontsource/roboto-mono/400.css\"),\n    },\n    \"Source Code Pro\": {\n        name: \"Source Code Pro\",\n        load: () => import(\"@fontsource/source-code-pro/400.css\"),\n    },\n    \"Space Mono\": {\n        name: \"Space Mono\",\n        load: () => import(\"@fontsource/space-mono/400.css\"),\n    },\n    \"Ubuntu Mono\": {\n        name: \"Ubuntu Mono\",\n        load: () => import(\"@fontsource/ubuntu-mono/400.css\"),\n    },\n};\n\nexport const FONT_KEYS = Object.keys(FONTS).sort();\nexport const MONOSPACE_FONT_KEYS = Object.keys(MONOSPACE_FONTS).sort();\n\nexport const DEFAULT_FONT = \"Open Sans\";\nexport const DEFAULT_MONO_FONT = \"Fira Code\";\n\n// Generated from https://gitlab.insrt.uk/revolt/community/themes\nexport const PRESETS: Record<string, Theme> = {\n    light: {\n        light: true,\n        accent: \"#FD6671\",\n        background: \"#F6F6F6\",\n        foreground: \"#000000\",\n        block: \"#414141\",\n        \"message-box\": \"#F1F1F1\",\n        mention: \"rgba(251, 255, 0, 0.40)\",\n        success: \"#65E572\",\n        warning: \"#FAA352\",\n        error: \"#ED4245\",\n        hover: \"rgba(0, 0, 0, 0.2)\",\n        \"scrollbar-thumb\": \"#CA525A\",\n        \"scrollbar-track\": \"transparent\",\n        \"primary-background\": \"#FFFFFF\",\n        \"primary-header\": \"#F1F1F1\",\n        \"secondary-background\": \"#F1F1F1\",\n        \"secondary-foreground\": \"#1f1f1f\",\n        \"secondary-header\": \"#F1F1F1\",\n        \"tertiary-background\": \"#4D4D4D\",\n        \"tertiary-foreground\": \"#3a3a3a\",\n        \"status-online\": \"#3ABF7E\",\n        \"status-away\": \"#F39F00\",\n        \"status-busy\": \"#F84848\",\n        \"status-streaming\": \"#977EFF\",\n        \"status-invisible\": \"#A5A5A5\",\n    },\n    dark: {\n        light: false,\n        accent: \"#FD6671\",\n        background: \"#191919\",\n        foreground: \"#F6F6F6\",\n        block: \"#2D2D2D\",\n        \"message-box\": \"#363636\",\n        mention: \"rgba(251, 255, 0, 0.06)\",\n        success: \"#65E572\",\n        warning: \"#FAA352\",\n        error: \"#ED4245\",\n        hover: \"rgba(0, 0, 0, 0.1)\",\n        \"scrollbar-thumb\": \"#CA525A\",\n        \"scrollbar-track\": \"transparent\",\n        \"primary-background\": \"#242424\",\n        \"primary-header\": \"#363636\",\n        \"secondary-background\": \"#1E1E1E\",\n        \"secondary-foreground\": \"#C8C8C8\",\n        \"secondary-header\": \"#2D2D2D\",\n        \"tertiary-background\": \"#4D4D4D\",\n        \"tertiary-foreground\": \"#848484\",\n        \"status-online\": \"#3ABF7E\",\n        \"status-away\": \"#F39F00\",\n        \"status-busy\": \"#F84848\",\n        \"status-streaming\": \"#977EFF\",\n        \"status-invisible\": \"#A5A5A5\",\n    },\n};\n\n// todo: store used themes locally\nexport function getBaseTheme(name: string): Theme {\n    if (name in PRESETS) {\n        return PRESETS[name]\n    }\n\n    // TODO: properly initialize `themes` in state instead of letting it be undefined\n    const themes = getState().themes ?? {}\n\n    if (name in themes) {\n        const { theme } = themes[name];\n\n        return {\n            ...PRESETS[theme.light ? 'light' : 'dark'],\n            ...theme\n        }\n    }\n\n    // how did we get here\n    return PRESETS['dark']\n}\n\nconst keys = Object.keys(PRESETS.dark);\nconst GlobalTheme = createGlobalStyle<{ theme: Theme }>`\n:root {\n\t${(props) => generateVariables(props.theme)}\n}\n`;\n\nexport const generateVariables = (theme: Theme) => {\n    return (Object.keys(theme) as Variables[]).map((key) => {\n        if (!keys.includes(key)) return;\n        return `--${key}: ${theme[key]};`;\n    })\n}\n\n// Load the default default them and apply extras later\nexport const ThemeContext = createContext<Theme>(PRESETS[\"dark\"]);\n\ninterface Props {\n    children: Children;\n    options?: ThemeOptions;\n}\n\nfunction Theme({ children, options }: Props) {\n    const theme: Theme = {\n        ...getBaseTheme(options?.base ?? 'dark'),\n        ...options?.custom,\n    };\n\n    const root = document.documentElement.style;\n    useEffect(() => {\n        const font = theme.font ?? DEFAULT_FONT;\n        root.setProperty(\"--font\", `\"${font}\"`);\n        FONTS[font].load();\n    }, [root, theme.font]);\n\n    useEffect(() => {\n        const font = theme.monospaceFont ?? DEFAULT_MONO_FONT;\n        root.setProperty(\"--monospace-font\", `\"${font}\"`);\n        MONOSPACE_FONTS[font].load();\n    }, [root, theme.monospaceFont]);\n\n    useEffect(() => {\n        root.setProperty(\"--ligatures\", options?.ligatures ? \"normal\" : \"none\");\n    }, [root, options?.ligatures]);\n\n    useEffect(() => {\n        const resize = () =>\n            root.setProperty(\"--app-height\", `${window.innerHeight}px`);\n        resize();\n\n        window.addEventListener(\"resize\", resize);\n        return () => window.removeEventListener(\"resize\", resize);\n    }, [root]);\n\n    return (\n        <ThemeContext.Provider value={theme}>\n            <Helmet>\n                <meta name=\"theme-color\" content={theme[\"background\"]} />\n            </Helmet>\n            <GlobalTheme theme={theme} />\n            {theme.css && (\n                <style dangerouslySetInnerHTML={{ __html: theme.css }} />\n            )}\n            {children}\n        </ThemeContext.Provider>\n    );\n}\n\nexport default connectState<{ children: Children }>(Theme, (state) => {\n    return {\n        options: state.settings.theme,\n    };\n});\n","import styled, { css } from \"styled-components\";\n\ninterface Props {\n    readonly compact?: boolean;\n    readonly accent?: boolean;\n    readonly contrast?: boolean;\n    readonly plain?: boolean;\n    readonly error?: boolean;\n    readonly gold?: boolean;\n    readonly iconbutton?: boolean;\n}\n\nexport type ButtonProps = Props &\n    Omit<JSX.HTMLAttributes<HTMLButtonElement>, \"as\">;\n\nexport default styled.button<Props>`\n    z-index: 1;\n    display: flex;\n    height: 38px;\n    min-width: 96px;\n    align-items: center;\n    justify-content: center;\n    padding: 2px 16px;\n    font-size: 0.875rem;\n    font-family: inherit;\n    font-weight: 500;\n\n    transition: 0.2s ease opacity;\n    transition: 0.2s ease background-color;\n\n    background: var(--primary-background);\n    color: var(--foreground);\n\n    border-radius: var(--border-radius);\n    cursor: pointer;\n    border: none;\n\n    &:hover {\n        background: var(--secondary-header);\n    }\n\n    &:disabled {\n        cursor: not-allowed;\n        background: var(--primary-background);\n    }\n\n    &:active {\n        background: var(--secondary-background);\n    }\n\n    ${(props) =>\n        props.compact &&\n        css`\n            height: 32px !important;\n            padding: 2px 12px !important;\n            font-size: 13px;\n        `}\n\n    ${(props) =>\n        props.iconbutton &&\n        css`\n            height: 38px !important;\n            width: 38px !important;\n            min-width: unset !important;\n        `}\n\n    ${(props) =>\n        props.accent &&\n        css`\n            background: var(--accent) !important;\n        `}\n\n    ${(props) =>\n        props.plain &&\n        css`\n            background: transparent !important;\n\n            &:hover {\n                text-decoration: underline;\n            }\n\n            &:disabled {\n                cursor: not-allowed;\n                opacity: 0.5;\n            }\n\n            &:active {\n                background: var(--secondary-background);\n            }\n        `}\n\n    ${(props) =>\n        props.contrast &&\n        css`\n            padding: 4px 8px;\n            background: var(--secondary-header);\n\n            &:hover {\n                background: var(--primary-header);\n            }\n\n            &:disabled {\n                cursor: not-allowed;\n                background: var(--secondary-header);\n            }\n\n            &:active {\n                background: var(--secondary-background);\n            }\n        `}\n\n    ${(props) =>\n        props.error &&\n        css`\n            color: white;\n            font-weight: 600;\n            background: var(--error);\n\n            &:hover {\n                filter: brightness(1.2);\n                background: var(--error);\n            }\n\n            &:disabled {\n                cursor: not-allowed;\n                background: var(--error);\n            }\n        `}\n    \n    ${(props) =>\n        props.gold &&\n        css`\n            color: black;\n            font-weight: 600;\n            background: goldenrod;\n\n            &:hover {\n                filter: brightness(1.2);\n                background: goldenrod;\n            }\n\n            &:disabled {\n                cursor: not-allowed;\n                background: goldenrod;\n            }\n        `}\n`;\n","import styled, { css } from \"styled-components\";\n\ninterface Props {\n    readonly contrast?: boolean;\n}\n\nexport default styled.input<Props>`\n    z-index: 1;\n    font-size: 1rem;\n    padding: 8px 16px;\n    border-radius: var(--border-radius);\n\n    font-family: inherit;\n    color: var(--foreground);\n    background: var(--primary-background);\n    transition: 0.2s ease background-color;\n\n    border: none;\n    outline: 2px solid transparent;\n    transition: outline-color 0.2s ease-in-out;\n    transition: box-shadow 0.2s ease-in-out;\n\n    &:hover {\n        background: var(--secondary-background);\n    }\n\n    &:focus {\n        box-shadow: 0 0 0 1.5pt var(--accent);\n    }\n\n    ${(props) =>\n        props.contrast &&\n        css`\n            color: var(--secondary-foreground);\n            background: var(--secondary-background);\n\n            &:hover {\n                background: var(--hover);\n            }\n        `}\n`;\n","import styled, { css } from \"styled-components\";\n\nimport { Text } from \"preact-i18n\";\n\nimport { Children } from \"../../types/Preact\";\n\ntype Props = Omit<JSX.HTMLAttributes<HTMLDivElement>, \"children\" | \"as\"> & {\n    error?: string;\n    block?: boolean;\n    spaced?: boolean;\n    noMargin?: boolean;\n    children?: Children;\n    type?: \"default\" | \"subtle\" | \"error\";\n};\n\nconst OverlineBase = styled.div<Omit<Props, \"children\" | \"error\">>`\n    display: inline;\n\n    ${(props) =>\n        !props.noMargin &&\n        css`\n            margin: 0.4em 0;\n        `}\n\n    ${(props) =>\n        props.spaced &&\n        css`\n            margin-top: 0.8em;\n        `}\n\n    font-size: 14px;\n    font-weight: 600;\n    color: var(--foreground);\n    text-transform: uppercase;\n\n    ${(props) =>\n        props.type === \"subtle\" &&\n        css`\n            font-size: 12px;\n            color: var(--secondary-foreground);\n        `}\n\n    ${(props) =>\n        props.type === \"error\" &&\n        css`\n            font-size: 12px;\n            font-weight: 400;\n            color: var(--error);\n        `}\n\n    ${(props) =>\n        props.block &&\n        css`\n            display: block;\n        `}\n`;\n\nexport default function Overline(props: Props) {\n    return (\n        <OverlineBase {...props}>\n            {props.children}\n            {props.children && props.error && <> &middot; </>}\n            {props.error && (\n                <Overline type=\"error\">\n                    <Text id={`error.${props.error}`}>{props.error}</Text>\n                </Overline>\n            )}\n        </OverlineBase>\n    );\n}\n","import { Circle } from \"@styled-icons/boxicons-regular\";\nimport styled, { css } from \"styled-components\";\n\nimport { Children } from \"../../types/Preact\";\n\ninterface Props {\n    children: Children;\n    description?: Children;\n\n    checked: boolean;\n    disabled?: boolean;\n    onSelect: () => void;\n}\n\ninterface BaseProps {\n    selected: boolean;\n}\n\nconst RadioBase = styled.label<BaseProps>`\n    gap: 4px;\n    z-index: 1;\n    padding: 4px;\n    display: flex;\n    cursor: pointer;\n    align-items: center;\n\n    font-size: 1rem;\n    font-weight: 600;\n    user-select: none;\n    transition: 0.2s ease all;\n    border-radius: var(--border-radius);\n\n    &:hover {\n        background: var(--hover);\n    }\n\n    > input {\n        display: none;\n    }\n\n    > div {\n        margin: 4px;\n        width: 24px;\n        height: 24px;\n        display: grid;\n        place-items: center;\n        background: var(--foreground);\n        border-radius: var(--border-radius-half);\n\n        svg {\n            color: var(--foreground);\n            /*stroke-width: 2;*/\n        }\n    }\n\n    ${(props) =>\n        props.selected &&\n        css`\n            color: white;\n            cursor: default;\n            background: var(--accent);\n\n            > div {\n                background: white;\n            }\n\n            > div svg {\n                color: var(--accent);\n            }\n\n            &:hover {\n                background: var(--accent);\n            }\n        `}\n`;\n\nconst RadioDescription = styled.span<BaseProps>`\n    font-size: 0.8em;\n    font-weight: 400;\n    color: var(--secondary-foreground);\n\n    ${(props) =>\n        props.selected &&\n        css`\n            color: white;\n        `}\n`;\n\nexport default function Radio(props: Props) {\n    return (\n        <RadioBase\n            selected={props.checked}\n            disabled={props.disabled}\n            onClick={() =>\n                !props.disabled && props.onSelect && props.onSelect()\n            }>\n            <div>\n                <Circle size={12} />\n            </div>\n            <input type=\"radio\" checked={props.checked} />\n            <span>\n                <span>{props.children}</span>\n                {props.description && (\n                    <RadioDescription selected={props.checked}>\n                        {props.description}\n                    </RadioDescription>\n                )}\n            </span>\n        </RadioBase>\n    );\n}\n"],"names":["scriptRel","seen","__vitePreload","baseModule","deps","relList","document","createElement","supports","Promise","all","map","dep","isCss","endsWith","cssSelector","querySelector","link","rel","as","crossOrigin","href","head","appendChild","res","rej","addEventListener","then","AVAILABLE_EXPERIMENTS","EXPERIMENTS","search","title","description","theme_shop","name","experiments2","getState","experiments","enabled","includes","component","mapKeys","memoize","c","connect","memo","dayjs","dayJS","Language","Language2","extend","calendar","format","update","Languages","en","display","emoji","i18n","ar","rtl","az","bg","cs","de","el","es","et","fi","fil","fr","ga","hi","hr","hu","id","it","ja","ko","lb","lt","mk","ms","nb_NO","nl","pl","pt_BR","ro","ru","sk","sl","sr","sv","ta","th","tr","uk","vi","zh_Hans","tokipona","cat","owo","pr","bottom","leet","enchantment","piglatin","connectState","children","locale","defns","setDefinition","useState","definition","lang","locale2","source","obj","defaultsDeep","defaults","dayjs2","twelvehour","separator","date_separator","date","date_format","DATE_FORMATS","traditional","simplified","ISO8601","keys","filter","k","forEach","replace","loadLanguage","useCallback","locale22","defn","transformLanguage","updateLocale","async","lang_file","default","target","dayjs_locale","__variableDynamicImportRuntime1__","body","style","direction","IntlProvider","state","DEFAULT_STATES","SavedMessages","DirectMessage","Group","TextChannel","VoiceChannel","notifications2","channel","_id","channel_type","message","user_id","mention_ids","QueueStatus","QueueStatus2","UFE0Fg","U200D","String","fromCharCode","codepoint","rune","pairs","low","i","length","charCode","charCodeAt","push","codePoints","indexOf","val","toString","join","EMOJI_PACK","size","alt","loading","className","draggable","src","parseEmoji","width","height","DEFAULT_SOUNDS","outbound","call_join","call_leave","DEFAULT_ENABLED_SYNC","combineReducers","config","action","type","navigator","ENGLISH","language","code","short","split","values","key","value","startsWith","reverse","findLanguage","auth","accounts","__spreadProps","session","active","Object","assign","settings","pack","appearance","emojiPack","theme","__spreadValues","custom","notification","options","unreads","last_id","newState","ulid","channels","entry","_a","v2","mentions","queue","x","nonce","data","status","SENDING","find","ERRORED","error","drafts","content","_b","_","__restKey","sync","disabled","revision","timestamp","lastOpened","parent","child","notifications","sectionToggle","trustedLinks","domains","domain","themes","slug","store","createStore","rootReducer","dispatch","subscribe","setItem","FONTS","Open Sans","load","Inter","Atkinson Hyperlegible","Roboto","Noto Sans","Bree Serif","Lato","Montserrat","Poppins","Raleway","Ubuntu","Comic Neue","MONOSPACE_FONTS","Fira Code","Roboto Mono","Source Code Pro","Space Mono","Ubuntu Mono","FONT_KEYS","sort","MONOSPACE_FONT_KEYS","DEFAULT_FONT","DEFAULT_MONO_FONT","PRESETS","light","accent","background","foreground","block","message-box","mention","success","warning","hover","scrollbar-thumb","scrollbar-track","primary-background","primary-header","secondary-background","secondary-foreground","secondary-header","tertiary-background","tertiary-foreground","status-online","status-away","status-busy","status-streaming","status-invisible","dark","GlobalTheme","createGlobalStyle","props","generateVariables","ThemeContext","createContext","themes2","getBaseTheme","base","root","documentElement","font","setProperty","monospaceFont","ligatures","resize","window","innerHeight","removeEventListener","Provider","Helmet","css","dangerouslySetInnerHTML","__html","styled","button","compact","iconbutton","plain","contrast","gold","input","OverlineBase","div","noMargin","spaced","Overline","Text","RadioBase","label","selected","RadioDescription","span","checked","onClick","onSelect","Circle"],"mappings":"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"}